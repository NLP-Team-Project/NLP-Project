[
    {
        "repo": "/ScottfreeLLC/AlphaPy",
        "language": "Python",
        "readme_contents": "AlphaPy\n=======\n\n|badge_pypi| |badge_downloads| |badge_docs| |badge_build|\n\n**AlphaPy** is a machine learning framework for both speculators and\ndata scientists. It is written in Python mainly with the ``scikit-learn``\nand ``pandas`` libraries, as well as many other helpful\npackages for feature engineering and visualization. Here are just\nsome of the things you can do with AlphaPy:\n\n* Run machine learning models using ``scikit-learn``, ``Keras``, ``xgboost``, ``LightGBM``, and ``CatBoost``.\n* Generate blended or stacked ensembles.\n* Create models for analyzing the markets with *MarketFlow*.\n* Predict sporting events with *SportFlow*.\n* Develop trading systems and analyze portfolios using *MarketFlow*\n  and Quantopian's ``pyfolio``.\n\n.. image:: https://github.com/Alpha314/AlphaPy/blob/master/images/model_pipeline.png\n    :width: 100%\n    :alt: AlphaPy Model Pipeline\n    :align: center\n\nDocumentation\n-------------\n\nhttp://alphapy.readthedocs.io/en/latest/\n\nInstallation\n------------\n\nYou should already have pip, Python, and optionally XGBoost, LightGBM, and\nCatBoost installed on your system (see below). Run the following command to install\nAlphaPy::\n\n    pip install -U alphapy\n\nPyfolio\n~~~~~~~\n\nPyfolio is automatically installed by AlphaPy, but if you encounter\nthe following error when trying to create a tear sheet:\n\n    *AttributeError: 'numpy.int64' object has no attribute 'to_pydatetime'*\n\nInstall pyfolio with this command:\n\n    pip install git+https://github.com/quantopian/pyfolio\n\nXGBoost\n~~~~~~~\n\nFor Mac and Windows users, XGBoost will *not* install automatically\nwith ``pip``. For instructions to install XGBoost on your specific\nplatform, go to http://xgboost.readthedocs.io/en/latest/build.html.\n\nLightGBM\n~~~~~~~~\n\nFor instructions to install LightGBM on your specific\nplatform, go to https://lightgbm.readthedocs.io/en/latest/Installation-Guide.html.\n\nCatBoost\n~~~~~~~~\n\nFor instructions to install CatBoost on your specific\nplatform, go to https://catboost.ai/docs/concepts/python-installation.html.\n\nMarketFlow\n----------\n\n.. image:: https://github.com/Alpha314/AlphaPy/blob/master/images/market_pipeline.png\n    :width: 100%\n    :alt: MarketFlow Model\n    :align: center\n\n.. image:: https://github.com/Alpha314/AlphaPy/blob/master/images/system_pipeline.png\n    :width: 100%\n    :alt: MarketFlow System\n    :align: center\n\nSportFlow\n---------\n\n.. image:: https://github.com/Alpha314/AlphaPy/blob/master/images/sports_pipeline.png\n    :width: 100%\n    :alt: SportFlow\n    :align: center\n\nSupport\n-------\n\nThe official channel for support is to open an issue on Github.\n\nhttp://github.com/ScottfreeLLC/AlphaPy/issues\n\nFollow us on Twitter:\n\nhttps://twitter.com/_AlphaPy_?lang=en\n\nDonations\n---------\n\nIf you like the software, please donate:\n\nhttp://alphapy.readthedocs.io/en/latest/introduction/support.html#donations\n\n\n.. |badge_pypi| image:: https://badge.fury.io/py/alphapy.svg\n.. |badge_build| image:: https://travis-ci.org/ScottfreeLLC/AlphaPy.svg?branch=master\n.. |badge_docs| image:: https://readthedocs.org/projects/alphapy/badge/?version=latest\n.. |badge_downloads| image:: https://static.pepy.tech/badge/alphapy\n"
    },
    {
        "repo": "/jalapic/engsoccerdata",
        "language": "R",
        "readme_contents": "Latest GitHub version: 11/4/2022,  v0.1.7\n\nNov 2022 update:   All European league datasets [England,Scotland,Italy,Germany,France,Holland,Spain,Belgium,Greece,Turkey,Portugal] (and their _current()_ functions) are up to date for the 22/23 season.  \n\nMLS and South Africa data are still only up to 2017. Cup data is also only available up to 2017.  English non-league have also not been updated.\n\nAny help in curating data is appreciated - please get in touch.\n\n\n\n#### engsoccerdata\n\nThis R package is mainly a repository for complete soccer datasets, along with some built-in functions for analyzing parts of the data. Currently I include three English ones (League data, FA Cup data, Playoff data - described below), several European leagues (Spain, Germany, Italy, Holland, France, Belgium, Portugal, Turkey, Scotland, Greece) as well as South Africa and MLS. \n\nFree to use for non-commerical use.   Compiled by James Curley.\n\nPlease cite as:  \nJames P. Curley (2016). engsoccerdata: English Soccer Data 1871-2016. R package version 0.1.5 [![DOI](https://zenodo.org/badge/doi/10.5281/zenodo.13158.svg)](http://dx.doi.org/10.5281/zenodo.13158)\n\nIf you do use it on any publications, blogs, websites, etc. please note the source (i.e. me!).  Also, if you do use it - I would love to see any analysis produced from it etc.  Of course, I accept no responsibility for any error that may be contained herewithin.\n\n- if you'd like to get involved and help out, please let me know.  \n- if you can see better ways of writing the R code, please let me know.\n- if you would like to collaborate on a project using these data, please get in touch.\n\nContact details:  curley  AT utexas DOT edu\n\n\n\n### Installation\n\nTo install this directly into R.\n\n```\nlibrary(devtools)\ninstall_github(\"jalapic/engsoccerdata\")\n\ndata(package=\"engsoccerdata\")    # lists datasets currently available\n\n```\n\nIf you get an error message like this one \n\n```\nError in curl::curl_fetch_memory(url, handle = handle) : \n  Problem with the SSL CA cert (path? access rights?)\n```\nwhich has happened on occasions for me, try this:\n\n```\nlibrary(RCurl)\nlibrary(httr)\nset_config( config( ssl_verifypeer = 0L ) )\n\nlibrary(devtools)\ninstall_github('jalapic/engsoccerdata', username = \"jalapic\")\nlibrary(engsoccerdata)\n\n\n```\n\n\n\n\n\n\n\n\n\nengsoccerdata\n=============\n\nLast update:24 Oct 2020, v 0.1.7\n\n\n## Datasets\n-  england              - Results of all top 4 tier soccer games in England 1888-2022\n-  england1939          - Contains results of abandoned 1939/40 season.\n-  england_5_nonleague  - Results of 5th tier (conference) from 1999/2000 - 2016/17\n-  facup                - Contains all FA Cup ties (not including pre-qualifying rounds) 1871-2016\n-  playoffs             - Incldues 'test-matches' 1892-1897 and modern playoffs (1986/87 onwards) for top 4 tiers in England\n-  spain                - Top flight Spanish League match results 1929-2022\n-  italy                - Top flight Italian Serie A League match results 1934-2022\n-  germany              - Top flight German Bundesliga 1 League match results 1963-2022 & Bundelsiga 2 league match results 1974-2022\n-  holland              - Dutch Eredivisie league match results 1956-2022\n-  champs               - European Cup and Champions League results 1955-2017 includes qualifiers and playoffs\n-  france               - French Ligue 1 results 1933-2022\n-  scotland             - Scotland top 4 tiers 1994-2022\n-  portugal             - Portugal top tier 1994-2022\n-  belgium              - Belgium top tier 1994-2022\n-  turkey               - Turkey top tier 1994-2022\n-  greece               - Greece top tier 1994-2022\n-  mls                  - MLS regular and postseason 1996-2016\n-  safrica              - South African  top tier - 2004-2017\n-  teamnames            - dataframe of alternative names and abbreviations for each team in all league data\n-  mlsconfs             - available in `data-raw` - summary of conference location of each team by year.\n\n## Help Needed !\n\nI would love help in collating more results.  If anyone wants to work on a particular league or competition please let me know.  These are the things I'd like to work on:\n\n- English League Cup  - data from the league cup is included but still is missing some fields. For instance the aet and pens and also northsouth data are missing. Data also generally needs checking.\n- European competitions - don't currently have this data\n- English Conference - need to add dates to results for seasons 1979/80-1998/98.\n- English FA Cup pre-qualifying round - also no data yet.\n- English other competitions - e.g. lower league cup competitions - no data yet.\n- Points deductions -  a list of points deductions of teams in each Euro league over time to make tables more accurate\n- Tie-breaking procedures - different Euro leagues have had different tie-breaking procedures over time. Having a record of this will help with making the `maketable` family of funcitons\n- Italian League in the early years - I think the first few seasons of the league need to be triple checked.\n- Double checking of consistency of teamnames in all leagues - e.g. French teams have split/diverged a lot since 1933, are they all named correctly?\n-  Promotion/Relegation Playoff Results for European Leagues.\n-  Extending results for Scotland, Portugal, Belgium, Turkey, Greece prior to 1994/1995.\n-  For MLS 1996-1999, correct FT scores to account for which games ended in ties and were decided by shoot-outs.\n\n\n\n## Functions \n\nSome built-in functions:\n\n-  england_current().r       - get results from top 4 tiers of English football from current season.  Other current seasons for other datasets can be got by e.g. holland_current(), germany_current() etc.\n\n-  maketable.r               - make a league table  - probably the quickest way to make a league table\n\n-  maketable_eng.r           - make a league table that follows the tie-breaking and points procedures for each season. \n\n-  maketable_all.r           - make a league table between dates or only for home/away results. \n\n-  games_between.r           - returns all games ever played between two teams\n\n-  games_between_sum.r       - returns the summary of results between any two teams\n\n-  alltimerecord.r           - returns the all time record of any team in the league\n\n-  score_most.r              - returns the team who has been involved in the most games of each scoreline\n\n-  score_teamX.r             - Lists all matches that a team has played in that ended in a specific scoreline\n\n-  score_team.r              - List all occurrences of a specific scoreline for a specific team\n\n-  scoreline_by_team.r      - How often each team has a won,lost,drawn by a scoreline? \n\n-  totalgoals_by_team.r     - Return all instances of a team being involved in a game with n goals\n\n-  ngoals.r                 - Return number of times a team has scored n goals\n\n-  n_offs.r                 - Will return the scorelines that have occurred n number of times\n\n-  opponentfreq.r           - Return how often a team has played each opponent\n\n-  opponents.r              - number of unique opponents for all teams in total or by tier\n\n-  bestwins.r               - best wins for each team\n\n-  worstlosses.r            - worst losses for each team\n\n-  homeaway.r               - very useful function to get home & away results with each team listed in 'team' column \n\n\n\n## What does england.csv contain?\n\nall top 4 tier games ever played 1888-2020\n\n- FL = Football League\n- PL = Premier League\n\n- 1888/9-1891/2   FL Division 1\n- 1892/3-1914/5   FL Divisions 1 & 2\n- 1919/20           FL Divisions 1 & 2\n- 1920/21           FL Divisions 1, 2 & 3\n- 1921/22-1938/9   FL Divisions 1, 2, 3a North & 3b South\n- 1939              FL Divisions 1, 2, 3a North & 3b South (truncated season)\n- 1946/7-1957/8   FL Divisions 1, 2, 3a North & 3b South\n- 1958/9-1991/2   FL Divisions 1, 2, 3 & 4\n- 1992/3-2004/5   PL, FL Divisions 1, 2 & 3\n- 2004/5-present   PL, FL Championship, FL Divisions 1 & 2\n \n In the csv file, I've used divisions 1,2,3,3a,3b, 4 as the notation\n I've also used tier 1,2,3,4  - to refer to 3,3a & 3b all belonging to tier 3\n\n \nDataset includes:\n \n teams that dropped out half way through a season:\n - 1919 Leeds City\n - 1931 Wigan Borough\n - 1961 Accrington Stanley\n\n - includes 1919 Port Vale who replaced Leeds City mid-season\n \n- The truncated 1939/40 season is in a separate file england1939.csv\n\n  Team Names used in the file are those that are currently used:\n  e.g. Small Heath are Birmingham City, Ardwick are Manchester City, etc.\n  \n  The modern Accrington Stanley are 'Accrington' to distinguish from original Accrington Stanley and earlier Accrington FC\n  \n\n\n\n## What does facup.csv contain?\n\nThis was a pain to put together.  It contains every single FA Cup tie (whether played or not) from the first inception of the competition in 1871 to the 2015/16 season.  It does not contain pre-qualifying rounds (yet).   It is best to describe each variable name in turn to give more information:\n\n- date         - date of match/tie\n- Season       - season (e.g. 1872 refers to 1872/73 season)\n- home         - home team (note for games played at neutral venues this isn't relevant)\n- visitor      - visiting team (note for games played at neutral venues this isn't relevant)\n- FT           - final score.  this is the final score even after extra time (i.e. not just after 90 minutes)\n- hgoal        - number of goals scored by team in home variable\n- vgoal        - number of goals scored by team in visitor variable\n- round        - the round of the match (1,2,3,4,5,6, s = semi-final, f=final, 3pp = 3rd place playoff)\n- tie          - initial = 1st game, replay = 1st replay, replay2 = 2nd replay, etc.\n- aet          - whether the game went to extra time. note only 'yes' or NA. \n- pen          - whether the game went to penalties.  note only 'yes' or NA.\n- pens         - the scoreline of the penalty shoot-out and who won\n- hp           - penalties scored in a shoot-out by team in home variable\n- vp           - penalties scored in a shoot-out by team in visitor variable\n- Venue        - where match was played\n- attendance   - attendance of the match\n- nonmatch     - if a tie was not played, voided or a team disqualified\n- notes        - further information about non-matches\n- neutral      - was the game played at a neutral venue -  \"yes\" or NA.\n\n\nImportant notes to above:\n\nI have tried to make the dataset as complete as possible.  The FA Cup data is difficult as some of it is just unobtainable.  For instance, I have added venues and attendances for all semis and finals and have included this information sporadically wherelse I was able to get it.  I have not done a systematic application of this to early rounds.   Several games in the FA Cup are played at neutral grounds or even the visiting team is allowed to play at home (e.g. if a minnow plays a big team).  I have not managed to systematically check this.   Also, there was a trend to play 2nd and 3rd and 4th replays at neutral venues.  This could be systematically checked but I have not yet.      Further, I think I have all games that ever ended in penalties added in correctly.  \n\nFinally, team names.  There are great disputes about which teams branch off from which teams in history and who should have shared history.  I have tried to be consistent in naming teams with their most current name throughout (e.g. Millwall Rovers, Millwall Athletic and Millwall are all listed as the current name - Millwall), or the name that they used when they stopped playing (e.g. Mitchell St. George's are always listed as Birmingham St. George's).     I have also tried to follow the same team name format as in england.csv  - I think the three Accrington teams may be the only one I need to re-edit for this purpose. \n\n\n\n## What does playoffs.csv contain?\n\n* all test-matches used to decide relegation/promotion between old division 1 and old division 2 1892/93 - 1897/98\n* all modern playoffs used to decide relegation/promotion since 1986/87\n* division of team in playoff is noted as well as the divisional playoffs each tie belongs to\n* all dates of matches included\n\n\n\n## What does spain.csv contain?\n\n* top flight matches 1929 - present\n* The 1929 season only took place in 1929 but is denoted as 1928 Season in keeping with the package's style format.  The 1929/30 season is noted as 1929\n* Promotion/relegation matches are not included - will be in a separate csv soon\n* 1979/80 season does not include \"CD M\u00e1laga 0-3 UD Salamanca\" match that was annulled because of match fixing\n* 1979/80 season does include  \"CD M\u00e1laga 0-1 AD Almer\u00eda\" that was not played but awarded 0-1 to AD Almer\u00eda as CD M\u00e1laga failed to participate\n* All team names are the currently used ones - i.e. names used during the Spanish civil war are not used.\n* The 1986/87 season contains both the phase 1 round of games and the phase 2 round of games.  \n\nPlease refer to the spainliga rpubs below for further information.\n\n\n\n## Other Leagues:\n\nI've added complete all top tier results for Holland (1956-present), Germany (1963-present), Italy (1934-present), France (1933-present). Additionally all tier 2 results for Germany. Finally, we have results from the all tiers of Scotland, and top tier of  Belgium, Turkey, Greece, Portugal since 1994/1995.\n\nThese dataframes contain all league results played in regular season.  They don't yet include relegation/promotion playoff fixtures.  Further, I have not yet completed all final checks of the data. I believe they are error free - but if others want to test and check, I'd welcome this.\n\n\n\n\n-----\n\nAny help in improving the quality of these datasets is appreciated.\n\n\n## List of Sources\n\n- https://github.com/footballcsv/en-england  \n- http://en.wikipedia.org/wiki/The_Football_League \n- http://www.rsssf.com/engpaul/fla/\n- http://www.espn.co.uk/football/\n- http://www.statto.com\n- http://www.11v11.com\n- http://www.worldfootball.net\n- http://www.football-data.co.uk\n- https://www.footballwebpages.co.uk/\n- http://www.historicalkits.co.uk/English_Football_League/index.html \n\n\n## Shiny apps:\n- https://jalapic.shinyapps.io/engsoccerbeta/  #based on League Data (it's a beta, there are some hiccups)\n- https://jalapic.shinyapps.io/soccerteams/  #interactive ggvis chart of historical team performances\n- https://jalapic.shinyapps.io/gamebygame/  #analyzing EPL teams season by season performances - using shinydashboard\n\n## Tutorials/demos\n (note as of May 2015, the code in these may need to change to reflect the change in names of datasets and some functions)\n- http://rpubs.com/jalapic/daygoals     #goal scoring trends on unqiue dates in soccer history\n- http://rpubs.com/jalapic/facuplast8   #quick walkthrough of some of the FA Cup data\n- http://rpubs.com/jalapic/gpg   #very quick look at id-ing breakpoints in English scoring trends\n- http://rpubs.com/jalapic/gamebygame  #plotting game by game trends across seasons\n- http://rpubs.com/jalapic/seasons  #visualizing season to season changes in top tier performance\n- http://rpubs.com/jalapic/laliga #visualizing historical Spanish La Liga data\n- http://rpubs.com/jalapic/sbs #consecutive runs by team of improved league positions\n\n\n\n## FiveThirtyEight\n\nOliver Roeder and I have written several articles for fivethirtyeight using these data:\n\n-  http://fivethirtyeight.com/features/leicester-citys-stunning-rise-in-two-charts/\n-  http://fivethirtyeight.com/features/chelseas-historically-awful-start/\n-  http://fivethirtyeight.com/features/the-long-migration-of-english-football/\n-  http://fivethirtyeight.com/features/home-field-advantage-english-premier-league/\n-  http://fivethirtyeight.com/features/in-126-years-english-football-has-seen-13475-nil-nil-draws/\n\nAlso this piece on league inequality:\n\n- https://contexts.org/articles/english-soccers-mysterious-worldwide-popularity/\n\n\n## Media Hits\n\n(listing them here so I don't forget them)\n\n- Dec 2014 - Profile of this dataset and me in \"FourFourTwo\" Magazine - https://www.scribd.com/doc/246229712/FourFourTwo-UK-2014-12\n\n-  Mar 12th 2015  - Some research on strange results occuring in a row discussed on Guardian's Football Weekly\nhttps://soundcloud.com/guardianfootballweekly/football-weekly-extra-chelseas-champion-league-campaign-goes-down-the-tube\n\n- Jul 30th 2015 - Piece by Sky Sports on homefield advantage and these data -\nhttp://www.skysports.com/football/news/11661/9829828/home-advantage-is-not-as-important-as-it-once-was-finds-sky-sports-study\n \n-  Nov 28th 2015 - I discuss home-field advantage on NPR's \"Only a Game\" - http://onlyagame.wbur.org/2015/11/28/home-field-advantage-epl-curley\n\n-  May 4th 2016 - I discussed this dataset and Leicester City on BBC Radio 5's \"Up All Night\" - unfortunately no audio - I got cut short because Ted Cruz decided to quit the Republican nomination.\n\n- May 17th 2016 - Piece by John Murdoch at the Financial Times on Leicester City's unique season -  https://ig.ft.com/sites/leicester-premier-league-champions/\n\n- March 10 2017 - Discussion of PSG-Barcelona 2017 Champions League tie in historical perspective (in Portuguese) - https://www.nexojornal.com.br/grafico/2017/03/10/O-que-as-bolsas-de-apostas-diziam-sobre-Barcelona-e-PSG\n \n- 2022 - Deutsche Welle piece on most common scorelines in soccer: https://www.youtube.com/watch?v=UyaFCkgZYCI&ab_channel=DWKickoff%21\n\n\n\nIf you use these data --- please cite and let me know. I'll add a link to the links at the bottom.\n\n\n\n## Elsewhere\n\n- Data in this package have been used to devise [fivethirtyeight's](https://fivethirtyeight.com/features/how-our-club-soccer-projections-work/) ratings and prediction models for soccer.\n\n-  A number of analyses and visualizations using these data by Prof Simon Garnier - http://graphzoo.tumblr.com/\n\nMore in depth analysis by Simon on David Sumpter's Collective Behavior blog:\n-  http://www.collective-behavior.com/liverpool-is-still-the-most-successful-english-club-team-but-for-how-long/\n-  http://www.collective-behavior.com/how-the-big-four-made-football-predictable/\n\n-  Prof Michael Lopez analyses home-field advantage - https://statsbylopez.com/2016/05/13/on-soccers-declining-home-field-advantage/\n\n-  Prof Antony Unwin uses for his book \"Graphical Data Analysis with R\" - http://www.gradaanwr.net/wp-content/uploads/2016/05/dataApr16.pdf\n\n- Excellent Masters Thesis in Statistics on improving FIFA rankings by Tom Van de Wiele (https://ttvand.github.io/) here - https://ttvand.github.io/MastatTomVandeWiele.pdf\n\n- 3D visualization of team performance over years - https://vr-data-vis.herokuapp.com/engsoccerdata/index.html\n\n- Joe Gallagher's blog post on home advantage - https://jogall.github.io/2017-05-12-home-away-pref/\n\n- Joe Gallagher's blog post on Robin Hood teams - https://jogall.github.io/2017-08-04-robin-hood-teams/\n\n- Andrew Clark's interactive viz of best and worst consecutive league finishes - https://www.mytinyshinys.com/2017/08/04/socceriimprovers/\n\n- Ryan Estrellado's analysis of Liverpool FC Managers - https://restrellado.github.io/liverpoolfc/lfc_managers.html\n& https://ryanestrellado.netlify.com/post/lfc-home-and-away-odds/\n\n-  Austin Wehrwein's modeling of soccer results - http://austinwehrwein.com/soccer/  and here https://austinwehrwein.com/tutorials/xgforeveryone/\n\n-  Robert Hickman has several nice posts looking at football trivia using the data in this package - https://www.robert-hickman.eu/post/five_min_trivia_invincibles/\n\n- Stefan Gouyet looked at one-sided matches in the EPL - https://worldsocceranalytics.com/2018/10/10/one-sided-matches-in-the-english-premier-league/\n\n- Xiang Ao's analysis of head to head matches between title contenders: https://xiangao.netlify.app/2019/01/17/soccer-epl/\n\n - McJames et al, 2022, A Supervised Learning Approach to Rankability. Preprint https://arxiv.org/pdf/2203.07364.pdf\n\n-  Leonardo Egidi - footBayes: an R package for football (soccer) modeling using Stan https://statmodeling.stat.columbia.edu/2022/02/22/footbayes-an-r-package-for-football-soccer-modeling-using-stan/\n\n\n### Acknowledgements\n\nMany thanks to the following for their assistance - apologies to anyone I have omitted (please let me know!):\n\nHakon Malmedal, Joe Gallagher, Ben Dilday, Aaron Smith, Michael Thompson, Andrew Clark, S'busiso Mkhondwane, Robert Hickman\n"
    },
    {
        "repo": "/bttmly/nba",
        "language": "JavaScript",
        "readme_contents": "# nba\n*Node.js client for nba.com API endpoints*\n\n`npm install nba`\n\n## NOTES:\n\n### BLACKLISTED IP ADDRESSES:\nIt appears as though the NBA has blacklisted certain blocks of IP addresses, specifically those of cloud hosting providers including AWS. As such, you may hit a situation where an application using this package works fine on your local machine, but doesn't work at all when deployed to a cloud server. Annoyingly, requests from these IPs seem to just hang. More information [here](https://github.com/bttmly/nba/issues/41) and [here](https://github.com/seemethere/nba_py/issues/88) -- the second issue has a `curl` command somewhere which will quickly tell you if NBA is accepting requests from your IP. (Incidentally, this is also the same reason the TravisCI build is always \"broken\" but tests all pass locally). There is a simple pass-through server in `scripts/proxy` that can be used to get around this restriction; you can put the proxy server somewhere that can reach NBA.com (e.g. not on AWS or Heroku or similar) and host your actual application on a cloud provider.\n\n### CORS restrictions on browser usage\nThis package can't be used directly from the browser because of [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) restrictions imposed by nba.com. If you run some sort of intermediate server which relays requests to NBA.com, you can change the host the client points to by following the instructions in the *Transport Layer* section\n\n## NBA API\nThe [stats.nba.com](http://stats.nba.com) uses a large number of undocumented JSON endpoints to provide the statistics tables and charts displayed on that website. This library provides a JavaScript client for interacting with many of those API endpoints.\n\n## Getting Started\n\n`NBA.findPlayer(str)` will return an object with a player's name, their ID, and their team information. This method is built into the package.\n\nAll methods in the `NBA.stats` namespace require an object to be passed in as a parameter. The keys to the object are in the docs for the `stats` namespace [here](doc/stats.md)\n\n```js\nconst NBA = require(\"nba\");\nconst curry = NBA.findPlayer('Stephen Curry');\nconsole.log(curry);\n/* logs the following:\n{\n  firstName: 'Stephen',\n  lastName: 'Curry',\n  playerId: 201939,\n  teamId: 1610612744,\n  fullName: 'Stephen Curry',\n  downcaseName: 'stephen curry'\n}\n*/\nNBA.stats.playerInfo({ PlayerID: curry.playerId }).then(console.log);\n```\n\nFor more example API calls, see `/test/integration/stats.js` and other test files.\n\n## Stability Warning\nThis is a client for an unstable and undocumented API. While I try to follow [semver](http://semver.org/) for changes to the JavaScript API this library exposes, the underlying HTTP API can (and has) changed without warning. In particular, the NBA has repeatedly deprecated endpoints, or added certain required headers without which requests will fail. Further, this library comes bundled with a (relatively) up-to-date list of current NBA players which is subject to change at any time -- the specific contents of it should not be considered part of this library's API contract.\n\n## Usability\nTo put it nicely, the NBA's API endpoints are a little clunky to work with. This library tries to strike a balance between being usable but not making assumptions about how the data will be used. Specifically, the NBA sends data in a concise \"table\" form where the column headers come first then each result is an array of values that need to be matched with the proper header. This library does a simple transformation to zip the header and values arrays into a header-keyed object. Beyond that, it tries to not do too much. This is important to note because sometimes the various \"result sets\" that come back on a single endpoint seem sort of arbitrary. The underlying HTTP API doesn't seem to follow standard REST practices; rather it seems the endpoints are tied directly to the data needed by specific tables and charts displayed on [stats.nba.com](). This is what I mean by \"clunky\" to work with -- it can be tricky to assemble the data you need for a specific analysis from the various endpoints available.\n\n## Documentation\n_still lots to do here..._\n\nThere are four primary parts of this library\n- *Top-level methods*\n- *`stats` namespace* &mdash; [docs](https://github.com/bttmly/nba/blob/master/doc/stats.md)\n- *`synergy` namespace* [see tests](https://github.com/bttmly/nba/blob/master/test/integration/synergy.js)\n\u2013 *`data` namespace* [see tests](https://github.com/bttmly/nba/blob/master/test/integration/data.js)\n- *~`sportVu` namespace*~ NBA has removed sportVu endpoints. the methods exist here for backwards compatibility but they throw errors\n\n## Transport Layer\nIn some cases you will want to use a different transport layer to handle HTTP requests. Perhaps you have an HTTP client library you like better than what I used here. Better yet, you want to get stats for the WNBA or the G League. The following code snippet shows how to use the `withTransport` method to create a new client with your own transport function.\n\n```js\n// here we are getting stats for the WNBA!\n\nconst nba = require(\"nba\");\nconst getJSON = require(\"nba/src/get-json\");\n\n// for the G League, try \"stats.gleague.nba.com\"\nconst newHost = \"stats.wnba.com\";\n\nconst transport = (url, params, options) => {\n  // simply swap the host and then defer the rest to the built in getJSON function\n  const fixedURL = url.replace(\"stats.nba.com\", \"stats.wnba.com\");\n  return getJSON(fixedURL, params, options);\n};\n\n// create a new stats client here with our WNBA transport\nconst wnbaStats = nba.stats.withTransport(transport);\n\n(async () => {\n  const result = await wnbaStats.playerInfo({ PlayerID: \"1628886\" });\n  console.log(result);\n})();\n```\n\n## \"I don't use Node.js\"\nPlease take a look at [nba-client-template](http://github.com/bttmly/nba-client-template). The relevant part of the repo is a single JSON document from which many programming languages can dynamically generate an API client. The repo contains (sloppy) examples in [Ruby](https://github.com/bttmly/nba-client-template/blob/master/example-clients/simple-client.rb) and [Python](https://github.com/bttmly/nba-client-template/blob/master/example-clients/simple-client.py). Compiled languages can use code generation techniques to the same effect -- there's a (again, sloppy) example in [Go](https://github.com/bttmly/nba-client-template/tree/master/example-clients/golang). If you'd like me to publish it to a specific registry so you can install it with your language's package manager, please [open an issue](http://github.com/bttmly/nba-client-template/issues). Please note, however, that package only includes  the endpoints exposed by this library under the `stats` namespace -- `sportvu` and `synergy` endpoints aren't yet included in it. I also plan to add a command-line interface to this library so that it can be easily driven as a child process by another program.\n\n##\n"
    },
    {
        "repo": "/kyleskom/NBA-Machine-Learning-Sports-Betting",
        "language": "Python",
        "readme_contents": "# NBA Sports Betting Using Machine Learning \ud83c\udfc0\n<img src=\"https://github.com/kyleskom/NBA-Machine-Learning-Sports-Betting/blob/master/Screenshots/output.png\" width=\"1010\" height=\"292\" />\n\nA machine learning AI used to predict the winners and under/overs of NBA games. Takes all team data from the 2007-08 season to current season, matched with odds of those games, using a neural network to predict winning bets for today's games. Achieves ~69% accuracy on money lines and ~55% on under/overs. Outputs expected value for teams money lines to provide better insight. The fraction of your bankroll to bet based on the Kelly Criterion is also outputted. Note that a popular, less risky approach is to bet 50% of the stake recommended by the Kelly Criterion.\n## Packages Used\n\nUse Python 3.8. In particular the packages/libraries used are...\n\n* Tensorflow - Machine learning library\n* XGBoost - Gradient boosting framework\n* Numpy - Package for scientific computing in Python\n* Pandas - Data manipulation and analysis\n* Colorama - Color text output\n* Tqdm - Progress bars\n* Requests - Http library\n* Scikit_learn - Machine learning library\n\n## Usage\n\n<img src=\"https://github.com/kyleskom/NBA-Machine-Learning-Sports-Betting/blob/master/Screenshots/Expected_value.png\" width=\"1010\" height=\"424\" />\n\nMake sure all packages above are installed.\n\n```bash\n$ git clone https://github.com/kyleskom/NBA-Machine-Learning-Sports-Betting.git\n$ cd NBA-Machine-Learning-Sports-Betting\n$ pip3 install -r requirements.txt\n$ python3 main.py -xgb -odds=fanduel\n```\n\nOdds data will be automatically fetched from sbrodds if the -odds option is provided with a sportsbook.  Options include: fanduel, draftkings, betmgm, pointsbet, caesars, wynn, bet_rivers_ny\n\nIf `-odds` is not given, enter the under/over and odds for today's games manually after starting the script.\n\nOptionally, you can add '-kc' as a command line argument to see the recommended fraction of your bankroll to wager based on the model's edge\n\n## Flask Web App\n<img src=\"https://github.com/kyleskom/NBA-Machine-Learning-Sports-Betting/blob/master/Screenshots/Flask-App.png\" width=\"922\" height=\"580\" />\n\nThis repo also includes a small Flask application to help view the data from this tool in the browser.  To run it:\n```\ncd Flask\nflask --debug run\n```\n\n## Getting new data and training models\n```\n# Create dataset with the latest data for 2022-23 season\ncd src/Process-Data\npython -m Get_Data\npython -m Get_Odds_Data\npython -m Create_Games\n\n# Train models\ncd ../Train-Models\npython -m XGBoost_Model_ML\npython -m XGBoost_Model_UO\n```\n\n## Contributing\n\nAll contributions welcomed and encouraged.\n"
    },
    {
        "repo": "/linouk23/NBA-Player-Movements",
        "language": "Python",
        "readme_contents": "# NBA Player Movements\n\nThis is a script for visualization of NBA games from raw SportVU logs.\n\nIf you admire both Spurs' and Warriors' ball movement, Brad Stevens' playbook, or just miss KD in OKC you'll find this entertaining.\n\n## Examples\n\n![Spurs](https://github.com/linouk23/NBA-Player-Movements/blob/master/examples/spurs.gif)\n![Warriors](https://github.com/linouk23/NBA-Player-Movements/blob/master/examples/warriors.gif)\n![Celtics](https://github.com/linouk23/NBA-Player-Movements/blob/master/examples/celtics.gif)\n![Durant](https://github.com/linouk23/NBA-Player-Movements/blob/master/examples/durant.gif)\n\n## Usage\n\n1. Clone this repo:\n\n  ```bash\n  $ git clone https://github.com/linouk23/NBA-Player-Movements\n  ```\n\n2. Choose any NBA game from ```data/2016.NBA.Raw.SportVU.Game.Logs``` directory.\n\n3. Generate an animation for the play by running the following script:\n\n  ```bash\n  $ python3 main.py --path=Celtics@Lakers.json --event=140\n  ```\n\n  ```\n  required arguments:\n    --path PATH    a path to json file to read the events from\n\n  optional arguments:\n    --event EVENT  an index of the event to create the animation to\n                   (the indexing start with zero, if you index goes beyond out\n                   the total number of events (plays), it will show you the last\n                   one of the game)\n    -h, --help     show the help message and exit\n  ```\n"
    },
    {
        "repo": "/tuangauss/DataScienceProjects",
        "language": "Jupyter Notebook",
        "readme_contents": "## Overview\n\nIn this repository, you will find the source code to various projects I have been working on or still work-in-progress. The majority of the projects are accompanied by a Medium blog posts at [tuannguyen-doan.medium.com](https://tuannguyen-doan.medium.com/). I published almost exclusively on Towards Data Science publication through Medium's Partnership program so please check out these articles as a way to support me and my future projects. Alternatively, you can also find my blog posts at my personal website [here](https://tuangauss.github.io/).\n\nMy interests lie in the intersection of statistical techniques, data visualization and sports (especially football). All the codes are written entirely in Python or R. I don't have a strong preference or attempt to make a concerted effort to code in a specific language/platform. The decision is mostly based on how specific functionalities needed for a project are supported (scraping in Python and data processing with dplyr piping in R).\n\n### I. Statistical application:\n\n#### The statistics of modern football:\nA collection of projects that explore the intricate statistical aspect of the Beautiful Game\n\n- [Empirical Bayes and penalty taking ability](https://towardsdatascience.com/men-of-steel-finding-the-best-penalty-takers-with-empirical-bayes-estimation-aa0e126fb08b) - Using Bayesian statistics to make meaningful comparison between players across Europe.\n- [Poisson process and match prediction](https://towardsdatascience.com/o-jogo-bonito-predicting-the-premier-league-with-a-random-model-1b02fa3a7e5a) - Here we learn about the Poisson process and how a random model outperforms football experts with its prediction.\n- [The mathematics of football betting strategies](https://towardsdatascience.com/making-big-bucks-with-a-data-driven-sports-betting-strategy-6c21a6869171) - With the Poisson model and some additional help from mathematical research, can we beat the bookies?\n- [Fisher vs Neyman-Person debate and Paul the Octopus](https://towardsdatascience.com/what-can-an-octopus-tell-us-about-the-biggest-debate-in-statistical-theory-f017295d781f) - We went over the theory (or many theories) of hypothesis testings and see how they apply to the psychic ability of Paul the Octopus.\n\n#### Statistical theory and its application:\n\n- [Bayes theorem and a probabilistic argument for God](https://towardsdatascience.com/a-bayesian-quest-to-find-god-b30934972473) - Bayes theory and how people have been using it to justify the necessary existence of God.\n- [Dating with probability theory](https://towardsdatascience.com/probability-theory-and-the-optimal-dating-strategy-for-2018-2b75b26fb0b) - Here we explore what probability theory has to say about the most optimal strategy to find the love of your life.\n- [Bayes theorem and why it matters to my workout routine](https://towardsdatascience.com/how-bayesian-statistics-convinced-me-to-hit-the-gym-fa737b0a7ac) - A lightweight introduction to Bayes' theorem and how it helps convince me to hit the gym.\n- [The Rule of Three and its application](https://towardsdatascience.com/the-rule-of-three-calculating-the-probability-of-events-that-have-not-yet-occurred-106144dc2c39) - A short introduction of the Rule of Three and how we can apply it to calculate the probability of events that have yet to happen. Application in voting, vaccine development, product quality monitoring, etc.\n- [Lindy's effect](https://towardsdatascience.com/a-statistical-rule-to-optimize-your-life-the-lindys-effect-96d2c75b080d) - A (slightly) mathematical description of the Lindy's effect and how one can use it as a guide for life.\n- [Normal Distribution with High Dimensionality](https://towardsdatascience.com/disney-movies-were-right-we-are-all-special-and-statistically-so-3bb56e79ab71) - A statistical investigation into the myth of the \"average Joe.\"\n\n### II. External Collaborations:\n\n#### Published papers:\n- [A robust and scalable method to compare Percentile metrics in online experiments (Quora Data Blog, 2022)](https://quoradata.quora.com/A-Robust-and-Scalable-method-to-compare-Percentile-Metrics-in-online-experiments) Conducting statistical tests for Percentile metrics can be tricky, as they have less neat mathematical properties than other more common metrics, such as the average or the ratios. I discuss Quora's method to A/B test these metrics in a statistically valid and scalable manner.\n- [How social learning amplifies moral outrage expression in online social networks (Science Advances, 2021)](https://www.science.org/doi/pdf/10.1126/sciadv.abe5641) - Moral outrage shapes fundamental aspects of social life and is now widespread in online social networks. Here, we show how social learning processes amplify online moral outrage expressions over time.\n- [Application of machine learning models in predicting length of stay among healthcare workers in underserved communities in South Africa (Human Resources for Health, 2018)](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6293620/) - We aim to use machine learning methods to predict health professional\u2019s length of practice in the rural public healthcare sector based on their demographic information.\n\n### III. General tutorials with Python and R:\n\n#### Data visualization:\n- [NetworkX and Basemap](https://towardsdatascience.com/catching-that-flight-visualizing-social-network-with-networkx-and-basemap-ce4a0d2eaea6) - Here is a comprehensive tutorial of how we can visualize geographical data with powerful tools that support Python.\n- [Tkinter and Python](https://towardsdatascience.com/having-your-own-fun-how-to-build-your-own-macys-firework-show-with-python-and-tkinter-79cc31631b44) - Building your own firework shows with Tkinter (and some math chops).\n- [Data visualization with Matplotlib and Seaborn](https://towardsdatascience.com/advanced-sports-visualization-with-pandas-matplotlib-and-seaborn-9c16df80a81b) - Learn how to construct publish-worthy visualizations with Matplotlib and Seaborn packages.\n\n#### Machine Learning practicals:\n- [End-to-end Machine Learning project with R](https://github.com/tuangauss/DataScienceProjects/blob/master/R/end_to_end_projects.R) - Here is a full data science project that covers data collection, cleaning, visualization, machine learning and validation.\n- [Unsupervised Learning - Clustering method with R](https://github.com/tuangauss/DataScienceProjects/blob/master/R/EPL/Misc/TeamEvaluate2015.R) - An introduction to an array of unsupervised learning algorithms: Hierachical clustering, k-means, and Factor Analysis.\n- [Collaborative Filtering with Python](https://towardsdatascience.com/building-my-own-2021-book-recommendation-engine-903ea10d5021) - A comprehensive guide to the mathematical details and implementation of popular Matrix Factorization methods.\n\n\n"
    },
    {
        "repo": "/MLB-LED-Scoreboard/mlb-led-scoreboard",
        "language": "Python",
        "readme_contents": "# mlb-led-scoreboard\n\n![Current Version](https://img.shields.io/github/v/release/MLB-LED-Scoreboard/MLB-LED-Scoreboard) [![Join Discord](https://img.shields.io/badge/discord-join-blue.svg)](https://discord.gg/FdD6ec9fdt)\n [![Join Slack](https://img.shields.io/badge/slack-join%20(deprecated)-blue.svg)](https://join.slack.com/t/mlb-led-scoreboard/shared_invite/zt-1f6n4axo4-r32OH7dlSAjEjstFV4RDNQ)\n\n<a href=\"assets/img/header.jpg\">\n  <img alt=\"Project header\" width=\"800px\" height=\"auto\" src=\"assets/img/header.jpg\">\n</a>\n\n---------------\n\nAn LED scoreboard for Major League Baseball. Displays a live scoreboard for your team's game on that day.\n\nRequires a Raspberry Pi and an LED board hooked up via the GPIO pins.\n\n**Currently supported boards:**\n * 32x32 (Limited number of features)\n * 64x32 (the _most_ supported)\n * 64x64\n * 128x32\n * 128x64\n\nIf you'd like to see support for another set of board dimensions, or have design suggestions for an existing one, file an issue!\n\n**Pi's with known issues**\n * Raspberry Pi Zero has had numerous reports of slowness and unreliability during installation and running the software.\n\n## Table of Contents\n* [Features](#features)\n  * [Live Games](#live-games)\n  * [Pregame](#pregame)\n  * [Division Standings](#division-standings)\n* [Installation](#installation)\n  * [Hardware Assembly](#hardware-assembly)\n  * [Software Installation](#software-installation)\n* [Usage](#usage)\n  * [Configuration](#configuration)\n  * [Flags](#flags)\n* [Personalization](#personalization)\n  * [Custom Board Layout](#custom-board-layout)\n  * [Custom Colors](#custom-colors)\n* [Sources](#sources)\n  * [Accuracy Disclaimer](#accuracy-disclaimer)\n* [Wiki](https://github.com/MLB-LED-Scoreboard/mlb-led-scoreboard/wiki)\n* [Help and Contributing](#help-and-contributing)\n  * [Latest Features](#latest-features)\n* [Licensing](#licensing)\n* [Other cool projects](#other-cool-projects)\n\n## Features\n\n### Live Games\nIt can display live games in action, and optionally rotate every 15 seconds through each game of the day.\n\nThe board refreshes the list of games every 15 minutes.\n\n<a href=\"assets/img/cubs-indians-demo.jpg\">\n  <img alt=\"Cubs-Indians game\" width=\"auto\" height=\"200\" src=\"assets/img/cubs-indians-demo.jpg\">\n</a>\n<a href=\"assets/img/pirates-cubs-demo.jpg\">\n  <img alt=\"Pirates-Cubs game\" width=\"auto\" height=\"200\" src=\"assets/img/pirates-cubs-demo.jpg\">\n</a>\n<a href=\"assets/img/wide-final-demo.jpg\">\n  <img alt=\"Cubs-Braves Final\" width=\"auto\" height=\"200\" src=\"assets/img/wide-final-demo.jpg\">\n</a>\n<a href=\"assets/img/64x64-live.jpg\">\n  <img alt=\"64x64 example\" width=\"auto\" height=\"200\" src=\"assets/img/64x64-live.jpg\">\n</a>\n\n<a href=\"assets/img/wide-ingame-demo.jpg\">\n  <img alt=\"Giants-Brewers-wide game\" width=\"auto\" height=\"200\" src=\"assets/img/wide-ingame-demo.jpg\">\n</a>\n<a href=\"assets/img/128x32-live.png\">\n  <img alt=\"Tigers-Royals game\" width=\"auto\" height=\"200\" src=\"assets/img/128x32-live.png\">\n</a>\n\n### Pregame\nIf a game hasn't started yet, a pregame screen will be displayed with the probable starting pitchers.\n\n<a href=\"assets/img/pregame.jpg\">\n  <img alt=\"Pregame\" width=\"auto\" height=\"200\" src=\"assets/img/pregame.jpg\"></a>\n<a href=\"assets/img/128x64.png\">\n  <img alt=\"Astros-Athletics pregame\" width=\"auto\" height=\"200\" src=\"assets/img/128x64.png\"></a>\n\n### Division Standings\nIt can display standings for the provided division. Since the 32x32 board is too small to display wins and losses together, the wins and losses are alternated on the board every 5 seconds. You can also specify \"NL Wild Card\" or \"AL Wild Card\" as a 'division' to see the top 5 teams in each league's wild card race.\n\n<a href=\"assets/img/standings-wins.jpg\">\n  <img alt=\"standings-wins\" width=\"auto\" height=\"200\" src=\"assets/img/standings-wins.jpg\">\n</a>\n<a href=\"assets/img/standings-losses.jpg\">\n  <img alt=\"standings-losses\" width=\"auto\" height=\"200\" src=\"assets/img/standings-losses.jpg\">\n</a>\n<a href=\"assets/img/wide-standings-demo.jpg\">\n  <img alt=\"standings-wide\" width=\"auto\" height=\"200\" src=\"assets/img/wide-standings-demo.jpg\">\n</a>\n\n## Installation\n### Hardware Assembly\n[See the wiki page for the original project for a step-by-step guide.](https://github.com/MLB-LED-Scoreboard/mlb-led-scoreboard/wiki) This README is primarily focused on the MLB software, but for those coming here from Reddit or elsewhere never having built things with a Raspberry Pi, this should help get you going.\n\nA sample bill of materials (BOM) is located [here](https://www.adafruit.com/wishlists/527606)\n\n### Software Installation\n#### Requirements\nYou need Git for cloning this repo and PIP for installing the scoreboard software.\n```\nsudo apt-get update\nsudo apt-get install git python3-pip\n```\n\n#### Installing the scoreboard software\nThis installation process will take about 10-15 minutes. Raspberry Pis aren't the fastest of computers, so be patient!\n\n```\ngit clone https://github.com/MLB-LED-Scoreboard/mlb-led-scoreboard.git\ncd mlb-led-scoreboard/\nsudo ./install.sh\n```\n\nThis will install the rgbmatrix binaries, which we get from [another open source library](https://github.com/hzeller/rpi-rgb-led-matrix/tree/master/bindings/python#building). It controls the actual rendering of the scoreboard onto the LEDs. If you're curious, you can read through their documentation on how all of the lower level stuff works.\n\nIt will also install the following python libraries that are required for certain parts of the scoreboard to function.\n\n* [tzlocal](https://github.com/regebro/tzlocal): Timezone libraries. These allow the scoreboard to convert times to your local timezone\n* [feedparser](https://pypi.org/project/feedparser/): Used to fetch and parse RSS feeds. The scoreboard uses this to show news headlines.\n* [pyowm](https://github.com/csparpa/pyowm): OpenWeatherMap API interactions. We use this to get the local weather for display on the offday screen. For more information on how to finish setting up the weather, visit the [weather section](#weather) of this README.\n* [MLB-StatsAPI](https://pypi.org/project/MLB-StatsAPI/): The main library that fetches and parses all of the actual MLB data being displayed\n* [RGBMatrixEmulator](https://github.com/ty-porter/RGBMatrixEmulator): The emulation library for the matrix display. Useful for running on MacOS or Linux, or for development.\n\n#### Installation on Non-Raspberry Pi Hardware\n\nThe installation script is designed for physical hardware. When attempting to install it on other platforms, you should not use `sudo` to install the dependencies. In addition, you can pass the `--emulator-only` argument to skip installation steps that aren't required.\n\n```\nsh install.sh --emulator-only\n```\n\nAdditional flags are available for customizing your install:\n\n```\n-p, --skip-python  Skips Python 3 installation. You will need to install it via your platform's appropriate package manager.\n-m, --skip-matrix  Skips RPI-specific matrix driver installation and build.\n-c, --skip-config  Skips default config overwrite without prompting.\n\n-a, --skip-all     Performs all above skips.\n\n--emulator-only    Do not install dependencies under sudo. Skips building matrix dependencies.\n\n-h, --help         Displays help\n```\n\n#### Updating\n* Run `git pull` in your mlb-led-scoreboard folder to fetch the latest changes. A lot of the time, this will be enough, but if something seems broken:\n    * **Re-run the install file**. Run `sudo ./install.sh` again. Any additional dependencies that were added with the update will be installed this way. If you are moving to a new major release version, answer \"Y\" to have it make you a new config file.\n    * **Check your custom layout/color files if you made any**. There's a good chance some new keys were added to the layout and color files. These changes should just merge right in with the customized .json file you have but you might want to look at the new .json.example files and see if there's anything new you want to customize.\n\nThat should be it! Your latest version should now be working with whatever new fangled features were just added.\n\n#### Version Information\n\nYou can check the version information for your installation of mlb-led-scoreboard by running `python3 version.py`.\n\nThe latest version of the software is available [here](https://github.com/MLB-LED-Scoreboard/mlb-led-scoreboard/releases).\n\n#### Time Zones\nMake sure your Raspberry Pi's timezone is configured to your local time zone. They'll often have London time on them by default. You can change the timezone of your raspberry pi by running `sudo raspi-config`.\n\n## Usage\n`sudo python3 main.py` Running as root is 100% an absolute must, or the matrix won't render.\n\n**Adafruit HAT/Bonnet users: You must supply a command line flag:**\n\n`sudo python3 main.py --led-gpio-mapping=\"adafruit-hat\"`\n\nSee the Flags section below for more flags you can optionally provide.\n\n### Running on Other Platforms\n\nThe scoreboard can run on other platforms by means of software emulation via `RGBMatrixEmulator`. When running via the emulator, you do not need to prepend your startup commands with `sudo`:\n\n```sh\npython3 main.py\n```\n\nYou can also force the scoreboard into emulation mode by using the `--emulated` flag:\n\n```sh\npython3 main.py --emulated\n```\n\nWhen running in emulation mode, you can continue to use your existing command line flags as normal.\n\nSee [RGBMatrixEmulator](https://github.com/ty-porter/RGBMatrixEmulator) for emulator configuration options.\n\n### Configuration\n\nA default `config.json.example` file is included for reference. Copy this file to `config.json` and modify the values as needed.\n\n```\n\"preferred\":                             Options for team and division preference\n  \"teams\"                        Array   An array of preferred teams. The first team in the list will be used as your 'favorite' team. Example: [\"Cubs\", \"Brewers\"]\n  \"divisions\"                    Array   An array of preferred divisions that will be rotated through in the order they are entered. Example: [\"NL Central\", \"AL Central\"]\n\n\"news_ticker\":                           Options for displaying a nice clock/weather/news ticker screen\n  \"always_display\"               Bool    Display the news ticker screen at all times. Supercedes the standings setting.\n  \"team_offday\"                  Bool    Display the news ticker when your prefered team is on an offday.\n  \"preferred_teams\"              Bool    Include headlines from your list of preferred teams. Will only use the first 3 teams listed in your preferred teams.\n  \"display_no_games_live\"        Bool    Display news and weather when none of your games are currently live.\n  \"traderumors\"                  Bool    Include headlines from mlbtraderumors.com for your list of preferred teams. Will only use the first 3 teams listed in your preferred teams.\n  \"mlb_news\"                     Bool    Include MLB's frontpage news.\n  \"countdowns\"                   Bool    Include various countdowns in the ticker.\n  \"date\"                         Bool    Display today's date to start the ticker. This will always be enabled if no other ticker options are.\n  \"date_format\"                  String  Display the date with a given format. You can check all of the date formatting options at https://strftime.org\n\n\"standings\":                             Options for displaying standings for a division\n  \"always_display\"               Bool    Display standings for your preferred divisions.\n  \"mlb_offday\"                   Bool    Display standings for your preferred divisions when there are no games on the current day.\n  \"team_offday\"                  Bool    Display standings for your preferred divisions when the one of your preferred teams is not playing on the current day.\n  \"display_no_games_live\"        Bool    Display standings when none of your games are currently live.\n\n\"rotation\":                              Options for rotation through the day's games\n  \"enabled\"                      Bool    Rotate through each game of the day according to the configured `rates`.\n  \"scroll_until_finished\"        Bool    If scrolling text takes longer than the rotation rate, wait to rotate until scrolling is done.\n  \"only_preferred\"               Bool    Only rotate through games in your preferred teams.\n  \"only_live\"                    Bool    Only rotate through games which are currently playing. Can be composed with `only_preferred`.\n  \"rates\"                        Dict    Dictionary of Floats. Each type of screen can use a different rotation rate. Valid types: \"live\", \"pregame\", \"final\".\n                                 Float   (DEPRECATED) A Float can be used to set all screen types to the same rotate rate.\n\n  \"while_preferred_team_live\":           Options for rotating between screens while one of your preferred teams is live\n    \"enabled\"                    Bool    Enable rotation while a preferred team is live.\n    \"during_inning_breaks\"       Bool    Enable rotation while a preferred team is live during an inning break.\n\n\"weather\":                               Options for retrieving the weather\n  \"apikey\"                       String  An API key is required to use the weather service.\n                                         You can get one for free at Open Weather Map (https://home.openweathermap.org/users/sign_up).\n  \"location\"                     String  The `{city name},{state code},{country code}` according to ISO-3166 standards (https://www.iso.org/obp/ui/#search).\n                                         Check out the OpenWeather documentation (https://openweathermap.org/current#name) for more info.\n                                         Ex: `\"Chicago,il,us\"`\n  \"metric_units\"                 Bool    Change the weather display to metric units (Celsius, m/s) instead of imperial (Fahrenheit, MPH).\n\n\"time_format\"                    String  Sets the preferred hour format for displaying time. Accepted values are \"12h\" or \"24h\" depending on which you prefer.\n\"end_of_day\"                     String  A 24-hour time you wish to consider the end of the previous day before starting to display the current day's games. Uses local time from your Pi.\n\"full_team_names\"                Bool    If enabled on a board width >= 64, displays the full team name on the scoreboard instead of their abbreviation. This config option is ignored on 32-wide boards.\n\"short_team_names_for_runs_hits\" Bool    If full_team_names is enabled, will use abreviated team names when runs or hits > 9 to prevent overflow of long names into RHE.\n\"scrolling_speed\"                Integer Sets how fast the scrolling text scrolls. Supports an integer between 0 and 6.\n\"preferred_game_update_delay_in_10s_of_seconds\" Integer Sets how long to wait before updating the preferred game. Must be positive.\n\"pregame_weather\"                Bool    If enabled, will display the weather for the game's location on the pregame screen.\n\"debug\"                          Bool    Game and other debug data is written to your console.\n\"demo_date\"                      String  A date in the format YYYY-MM-DD from which to pull data to demonstrate the scoreboard. A value of `false` will disable demo mode.\n```\n\n### Delaying Board Update\n* The \"preferred_game_update_delay_in_10s_of_seconds\" will delay the update of your LED board to allow you to synchronize with the boroadcast feed.\n* You can only delay the board in 10 second increments, so a value of 3 coresponds to 30 seconds, 5 to 50 seconds etc.\n* There appears to be a lot of variability in broadcast delays across networks/teams/CDN's.\n* Please note, that if restarting the service with a delay, it will take the value of cycles set for the board to be in sync.  If you set the value to 3, it will take 30-40 seconds for the buffer to fill and the board to delay.\n\n### Additional Features\n* Runs/Hits/Errors - Runs are always shown on the games screen, but you can enable or adjust spacing of a \"runs, hits, errors\" display.  Take a look at the [coordinates readme file](/coordinates/README.md) for details.\n\n* Pitch Data - Pitch data can be shown on the game screen, See the [coordinates readme file](/coordinates/README.md) for details. In addition, the `short` and `long` pitch description can be changed in data/pitches.py\n\n* Previous Play Data - Data for the previous play can be shown on the game screen. See the [coordinates readme file](/coordinates/README.md) for details. Long and short play descriptions can be changed in data/plays.py\n  * **NOTE:** Because play result data is ephemeral, not every play result will be displayed. Situations like a mound visit, injury, or other timeout immediately following a play often cause the play result to be immediately replaced on the MLB API. \n\n### Flags\n\nYou can configure your LED matrix with the same flags used in the [rpi-rgb-led-matrix](https://github.com/hzeller/rpi-rgb-led-matrix) library. More information on these arguments can be found in the library documentation.\n```\n--led-rows                Display rows. 16 for 16x32, 32 for 32x32. (Default: 32)\n--led-cols                Panel columns. Typically 32 or 64. (Default: 32)\n--led-chain               Daisy-chained boards. (Default: 1)\n--led-parallel            For Plus-models or RPi2: parallel chains. 1..3. (Default: 1)\n--led-pwm-bits            Bits used for PWM. Range 1..11. (Default: 11)\n--led-brightness          Sets brightness level. Range: 1..100. (Default: 100)\n--led-gpio-mapping        Hardware Mapping: regular, adafruit-hat, adafruit-hat-pwm\n--led-scan-mode           Progressive or interlaced scan. 0 = Progressive, 1 = Interlaced. (Default: 1)\n--led-pwm-lsb-nanosecond  Base time-unit for the on-time in the lowest significant bit in nanoseconds. (Default: 130)\n--led-show-refresh        Shows the current refresh rate of the LED panel.\n--led-slowdown-gpio       Slow down writing to GPIO. Range: 0..4. (Default: 1)\n--led-no-hardware-pulse   Don't use hardware pin-pulse generation.\n--led-rgb-sequence        Switch if your matrix has led colors swapped. (Default: RGB)\n--led-pixel-mapper        Apply pixel mappers. e.g Rotate:90, U-mapper\n--led-row-addr-type       0 = default; 1 = AB-addressed panels. (Default: 0)\n--led-multiplexing        Multiplexing type: 0 = direct; 1 = strip; 2 = checker; 3 = spiral; 4 = Z-strip; 5 = ZnMirrorZStripe; 6 = coreman; 7 = Kaler2Scan; 8 = ZStripeUneven. (Default: 0)\n--led-limit-refresh       Limit refresh rate to this frequency in Hz. Useful to keep a constant refresh rate on loaded system. 0=no limit. Default: 0\n--led-pwm-dither-bits     Time dithering of lower bits (Default: 0)\n--config                  Specify a configuration file name other, omitting json xtn (Default: config)\n--emulated                Force the scoreboard to run in software emulation mode.\n```\n\n## Personalization\nIf you're feeling adventurous (and we highly encourage it!), the sections below outline how you can truly personalize your scoreboard and make it your own!\n### Custom Board Layout\nYou have the ability to customize the way things are placed on the board (maybe you would prefer to see scrolling text for a pregame a bit higher or lower). See the `coordinates/` directory for more information.\n\n### Custom Colors\nYou have the ability to customize the colors of everything on the board. See the `colors/` directory for more information.\n\n### Weather\nThis scoreboard will use a weather API to gather weather information at various times. This information is displayed on your teams' offdays for your area and also displayed during each game's pregame information. The weather API we use is from OpenWeatherMaps. OpenWeatherMaps API requires an API key to fetch this data so you will need to take a quick minute to sign up for an account and copy your own API key into your `config.json`.\n\nYou can find the signup page for OpenWeatherMaps at [https://home.openweathermap.org/users/sign_up](https://home.openweathermap.org/users/sign_up). Once logged in, you'll find an `API keys` tab where you'll find a default key was already created for you. You can copy this key and paste it into the `config.json` under `\"weather\"`, `\"apikey\"`.\n\nYou can change the location used by entering your city, state, and country code separated by commas. If you wish to use metric measurements, set the `\"metric\"` option to `true`.\n\n## Sources\nThis project relies on two libraries:\n[MLB-StatsAPI](https://pypi.org/project/MLB-StatsAPI/) is the Python library used for retrieving live game data.\n[rpi-rgb-led-matrix](https://github.com/hzeller/rpi-rgb-led-matrix) is the library used for making everything work with the LED board.\n\n### Accuracy Disclaimer\nThe scoreboard updates frequently, but it cannot retrieve information that MLB has not yet made available. If something is odd or it seems behind, the first suspect is the MLB web API.\n\n## Help and Contributing\nIf you run into any issues and have steps to reproduce, open an issue. If you have a feature request, open an issue. If you want to contribute a small to medium sized change, open a pull request. If you want to contribute a new feature, open an issue first before opening a PR.\n\n### Updating Dependencies\n\nDependencies requirements are managed using `pipreqs`. If you are adding or making a change to a dependency (such as updating its version), make sure to update the requirements file with `pipreqs`:\n\n```sh\n# If not already installed\npip3 install pipreqs\n\npipreqs . --force\n```\n\n## Licensing\nThis project as of v1.1.0 uses the GNU Public License. If you intend to sell these, the code must remain open source.\n\n## Other Cool Projects\nThe original version of this board\n\nInspired by this board, check out the [NHL scoreboard](https://github.com/riffnshred/nhl-led-scoreboard) \ud83c\udfd2\n"
    },
    {
        "repo": "/panzarino/mlbgame",
        "language": "Python",
        "readme_contents": "# mlbgame\n\n[![Build Status](https://travis-ci.org/panzarino/mlbgame.svg)](https://travis-ci.org/panzarino/mlbgame)\n[![Code Climate](https://codeclimate.com/github/panzarino/mlbgame/badges/gpa.svg)](https://codeclimate.com/github/panzarino/mlbgame)\n[![Coverage Status](https://coveralls.io/repos/github/panzarino/mlbgame/badge.svg?branch=master)](https://coveralls.io/github/panzarino/mlbgame?branch=master)\n\n\n[![Join Slack](https://img.shields.io/badge/slack-join-blue.svg)](https://mlbgame-slack-invite.herokuapp.com/)\n\nmlbgame is a Python API to retrieve and read MLB GameDay data.\nmlbgame works with real time data, getting information as games are being played.\n\nmlbgame uses the same data that MLB GameDay uses,\nand therefore is updated as soon as something happens in a game.\n\nmlbgame [documentation](http://panz.io/mlbgame)\n\nmlbgame on [Github](https://github.com/panzarino/mlbgame) (Source Code)\n\nIf you have a question or need help, the quickest way to get a response \nis to file an issue on the [Github issue tracker](https://github.com/panzarino/mlbgame/issues/new)\n\nmlbgame's submodules should not really be used other than as \nused by the main functions of the package (in `__init__.py`).\n\nUse of mlbgame must follow the terms stated in the \n[license](https://raw.githubusercontent.com/panzarino/mlbgame/master/LICENSE) \nand on [mlb.com](http://gd2.mlb.com/components/copyright.txt).\n\nInstallation\n------------\n\nmlbgame is in the [Python Package Index (PyPI)](http://pypi.python.org/pypi/mlbgame/).\nInstalling with `pip` is recommended for all systems.\n\nmlbgame can be installed by running:\n\n    pip install mlbgame\n\nAlternatively, the latest release of mlbgame can be downloaded as a \n[zip](https://github.com/panzarino/mlbgame/archive/master.zip) or [tarball](https://github.com/panzarino/mlbgame/archive/master.tar.gz). \nIf you do not install with `pip`, you must also install `lxml` as specified in `setup.py`.\n\nIf you want to help develop mlbgame, you must also install the dev dependencies, which can be done by running `pip install -e .[dev]` from within the directory.\n\nExamples\n--------\n\nHere is a quick teaser to find the scores of all home Mets games for the month of June, 2015:\n\n```python\nfrom __future__ import print_function\nimport mlbgame\n\nmonth = mlbgame.games(2015, 6, home='Mets')\ngames = mlbgame.combine_games(month)\nfor game in games:\n    print(game)\n```\n\nAnd the output is:\n\n    Giants (5) at Mets (0)\n    Giants (8) at Mets (5)\n    Giants (4) at Mets (5)\n    Braves (3) at Mets (5)\n    Braves (5) at Mets (3)\n    Braves (8) at Mets (10)\n    Blue Jays (3) at Mets (4)\n    Blue Jays (2) at Mets (3)\n    Reds (1) at Mets (2)\n    Reds (1) at Mets (2)\n    Reds (1) at Mets (2)\n    Reds (2) at Mets (7)\n    Cubs (1) at Mets (0)\n\nMaybe you want to know the pitchers for the Royals game on April 30th, 2015:\n\n```python\nfrom __future__ import print_function\nimport mlbgame\n\nday = mlbgame.day(2015, 4, 12, home='Royals', away='Royals')\ngame = day[0]\noutput = 'Winning pitcher: %s (%s) - Losing Pitcher: %s (%s)'\nprint(output % (game.w_pitcher, game.w_team, game.l_pitcher, game.l_team))\n```\n\nAnd the output is:\n\n    Winning pitcher: Y. Ventura (Royals) - Losing Pitcher: C. Wilson (Angels)\n\nYou can easily print a list of the Mets batters\nin the final game of the 2015 World Series:\n\n```python\nfrom __future__ import print_function\nimport mlbgame\n\ngame = mlbgame.day(2015, 11, 1, home='Mets')[0]\nstats = mlbgame.player_stats(game.game_id)\nfor player in stats.home_batting:\n    print(player)\n```\n\nAnd the output is:\n\n    Curtis Granderson (RF)\n    David Wright (3B)\n    Daniel Murphy (2B)\n    Yoenis Cespedes (CF)\n    Juan Lagares (CF)\n    Lucas Duda (1B)\n    Travis d'Arnaud (C)\n    Michael Conforto (LF)\n    Wilmer Flores (SS)\n    Matt Harvey (P)\n    Jeurys Familia (P)\n    Kelly Johnson (PH)\n    Jonathon Niese (P)\n    Addison Reed (P)\n    Bartolo Colon (P)\n"
    },
    {
        "repo": "/matiasmascioto/awesome-soccer-analytics",
        "language": null,
        "readme_contents": "# Awesome Soccer Analytics [![Awesome](https://awesome.re/badge.svg)](https://awesome.re)\n\nA curated list of awesome resources related to *Soccer Analytics* in *english* and *spanish*.\n\n- References:\n\t- *S+: Soccer and other sports. The resource is not just about soccer.*\n\n### Contents\n* [Blogs & Websites](#blogs--websites)\n* [Books](#books)\n* [Companies](#companies)\n* [Data](#data)\n* [Education](#education)\n* [Events & Conferences](#events--conferences)\n* [Open Source Libraries](#open-source-libraries)\n* [Podcasts](#podcasts)\n* [Tools & Projects](#tools--projects)\n* [Twitter Accounts](#twitter-accounts)\n* [Videos](#videos)\n* [Miscellaneous](#miscellaneous)\n\n\n## Blogs & Websites\n* [2+2=11](https://2plus2equals11.com/)\n* [All Things Football](https://allthingsfootballonline.blogspot.com/)\n* [American Soccer Analysis](https://www.americansocceranalysis.com/)\n* [Anal\u00edtica Sports](http://www.analiticasports.com) (S+)\n* [differentgame](https://differentgame.wordpress.com/)\n* [EightyFivePoints](http://eightyfivepoints.blogspot.com/)\n* [Football Crunching](https://medium.com/football-crunching)\n* [Football Science](https://www.footballscience.net/)\n* [Football Data Science](http://business-analytic.co.uk/blog/home-page/)\n* [Football Whispers](https://www.footballwhispers.com/)\n* [G.C. Analytics](https://www.gcanalytics.net/)\n* [Karun Singh](https://karun.in/blog/)\n* [North Yard Analytics](https://www.northyardanalytics.com/blog/)\n* [OptaPro](https://www.optasportspro.com/news-and-analysis/?_news_category=football)\n* [Proform AFC](https://proformanalytics.wordpress.com/)\n* [Soccermetrics](http://www.soccermetrics.net/blog)\n* [Stats and snakeoil](http://www.statsandsnakeoil.com/)\n* [StatsBomb](https://statsbomb.com/)\n* [The Harvard Sports Analysis Collective](http://harvardsportsanalysis.org/topics/soccer/)\n* [The Last Man Analytics](https://thelastmananalytics.home.blog/) (S+)\n* [The Power of Goals](https://thepowerofgoals.blogspot.com/)\n* [Total Football Analysis](https://totalfootballanalysis.com/)\n* [Wyscout](https://blog.wyscout.com/)\n\n## Books\n* [Football Hackers: The Science and Art of a Data Revolution](https://www.amazon.com/Football-Hackers-Science-Data-Revolution-ebook/dp/B07NQM3YGK)\n* [Soccernomics](https://www.amazon.com/Soccernomics-England-Germany-Australia-Destined/dp/1568584814)\n* [Soccermatics: Mathematical Adventures in the Beautiful Game](https://www.amazon.com/Soccermatics-Mathematical-Adventures-Pro-Bloomsbury/dp/1472924142)\n* [The Numbers Game: Why Everything You Know about Soccer Is Wrong](https://www.amazon.es/Numbers-Game-Everything-about-Soccer/dp/0143124560)\n\n## Companies\n### Data Providers\n* [DataFactory](http://www.datafactory.la/) (S+)\n* [Opta Sports](https://www.optasports.com/) (S+)\n* [SPORTLOGiQ](https://sportlogiq.com/en/) (S+)\n* [Sport radar](https://www.sportradar.com/) (S+)\n* [STATS PERFORM](https://www.statsperform.com/) (S+)\n* [StatsBomb](https://statsbomb.com/data/)\n* [Wyscout](https://wyscout.com/es/)\n\n### Tracking\n* [ChyronHego](https://chyronhego.com/)\n* [STATS SportVU](https://www.stats.com/sportvu-football/)\n* [Kinexon](https://kinexon-sports.com/) (S+)\n* [Oliver](https://tryoliver.com/)\n\n\n### Video Analysis - Performance Analysis\n* [Analytics FC](http://analyticsfc.co.uk/)\n* [dataFootball](https://www.bdatafutbol.com/)\n* [ERIC Sports](http://www.ericsports.net/) (S+)\n* [Futbolytics](https://futbolytics.cl/)\n* [hudl](https://www.hudl.com/) (S+)\n* [LBi Dynasty](http://www.lbidynasty.com/) (S+)\n* [LongoMatch](https://longomatch.com/es/) (S+)\n* [MEDIACOACH](https://portal.mediacoach.es/)\n* [Metrica Sports](https://metrica-sports.com/)\n* [nacsport](https://nacsport.com/) (S+)\n* [Olocip](http://www.olocip.com/) (S+)\n* [SICO](https://www.sicostats.com/)\n* [Wise](http://app.wise4sports.com/home/) (S+)\n\n## Data\n### Datasets\n* [A public data set of spatio-temporal match events in soccer competitions](https://figshare.com/collections/Soccer_match_event_dataset/4415000) : Free - .json - UEFA Euro Cup 2016 - La Liga, Serie A, Bundesliga, Premier League, Ligue 1, FIFA World Cup 2018\n* [European Soccer Database](https://www.kaggle.com/hugomathien/soccer/version/10): Free - .sqlite - 25k+ matches, players & teams attributes for European Professional Football\n* [engsoccerdata](https://github.com/jalapic/engsoccerdata): Free - .csv - English and European soccer results 1871-2017\n* [football.csv](https://footballcsv.github.io/): Free - .csv - Historical soccer results in .csv format\n* [football.db](http://openfootball.github.io/): Free - database - A free and open public domain football database & schema for use in any (programming) language (e.g. uses plain datasets).\n* [Metrica Sports sample tracking and event data](https://github.com/metrica-sports/sample-data): Free - .csv - Sample tracking and event data.\n* [PlusMinusData](https://github.com/fmatano/PlusMinusData): Free - R package - Play by play data from espn.com and sofifa.com\n* [Rec.Sport.Soccer Statistics Foundation](http://www.rsssf.com/nersssf.html): Free- database - Historical league tables and football results\n* [RoboCup Soccer Simulator](http://oliver.obst.eu/data/RoboCupSimData/overview.html): Free - .csv - RoboCup Soccer Simulator Data\n* [Soccer match event dataset](https://figshare.com/collections/Soccer_match_event_dataset/4415000/2): Free - .json - Spatio-temporal events (passes, shots, fouls, etc.) that occur during all matches of an entire season of seven competitions (La Liga, Serie A, Bundesliga, Premier League, Ligue 1, FIFA World Cup 2018, UEFA Euro Cup 2016).\n* [Soccer Video and Player Position Dataset](http://home.ifi.uio.no/paalh/dataset/alfheim/): Free - .csv - Dataset of elite soccer player movements and corresponding videos\n* [StatsBomb Open Data](https://github.com/statsbomb/open-data): - Free - JSON - Competitions and matches (with events)\n* [wosostats](https://github.com/amj2012/wosostats): Free - .csv - Data about women's soccer from around the world.\n\n### APIs\n* [BDFUTBOL](https://www.bdfutbol.com/es/c/api2.html): Paid - Historical football results, players and teams data\n* [ClubElo](http://clubelo.com/API): Free - Historical ELO rankings for european soccer.\n\n### Other resources\n* [Awesome Footbal](https://github.com/planetopendata/awesome-football): A collection of awesome football (national teams, clubs, match schedules, players, stadiums, etc.) datasets.\n* [Guide to Football/Soccer data and APIs](https://www.jokecamp.com/blog/guide-to-football-and-soccer-data-and-apis/)\n\n## Education\n* [M\u00e1ster Big Data Deportivo](https://www.campusbigdata.com/master-en-big-data-deportivo): Certified by [UCAM](https://www.ucam.edu/).\n* [Posgrado en Sports Analytics](https://www.talent.upc.edu/esp/estudis/formacio/curs/303600/postgrau-sports-analytics/): Universitat Polit\u00e8cnica de Catalunya\n* [Soccer Analytics Handbook](https://github.com/devinpleuler/analytics-handbook): Getting started with soccer analytics\n* [StatsBomb Courses](https://courses.statsbomb.com/: StatsBomb courses are delivered by video and webinar\n\n## Events & Conferences\n* [Carnegie Mellon Sports Analytics Conference](http://www.cmusportsanalytics.com/conference2018.html)\n* [CASSIS](http://cascadiasports.com/)\n* [Football Data International Forum](https://eniit.es/football-data-international-forum/)\n* [Global Training Camp](http://gtc.analyticsinsport.com/)\n* [Great Lakes Analytics Conference](https://www.uwsp.edu/cols/Pages/GLAC/analyticsconference.aspx)\n* [MathSport International](http://www.mathsportinternational.com/)\n* [MIT Sloan Sports Analytics Conference](http://www.sloansportsconference.com/)\n* [New England Symposium on Statistics in Sports](http://www.nessis.org/)\n* [OptaPro Analytics Forum](https://www.optasportspro.com/events/)\n* [Sports Analytics World Series](https://www.analyticsinsport.com/)\n* [Sportdata & Performance Forum](https://www.sportdataperformance.com/)\n* [Sports Technology Symposium](https://www.fcbarcelona.com/club/sports-technology-symposium)\n* [StatsBomb Conference](https://statsbomb.com/conference/)\n\n## Open Source Libraries\n### Visualisation\n* [BirdsPyView](https://github.com/rjtavares/BirdsPyView): (Python) A Streamlit app to transform perspective of an image to a top-down view by identifying a rectangle on the ground\n* [ggsoccer](https://github.com/Torvaney/ggsoccer) - (R) Plot Opta-style soccer event data in R/ggplot2.\n* [PlusMinusModels](https://github.com/tpospisi/PlusMinusModels) - (R) This package fits plus-minus models for sports data.\n* [PyFootballPitch](https://github.com/znstrider/PyFootballPitch) - (Python) Functions to draw a football pitch in various available styles for matplotlib and bokeh.\n* [SBpitch](https://github.com/FCrSTATS/SBpitch) - (R) Creates customisable plots of pitches in ggplot2 that allows event data to be plotted on top.\n* [socceraction](https://github.com/ML-KULeuven/socceraction): (Python) - Convert existing soccer event stream data to SPADL and value player actions\n* [soccerAnimate](https://github.com/Dato-Futbol/soccerAnimate): (R) - An R package to create 2D animations of soccer tracking data\n* [soccermatics](https://github.com/JoGall/soccermatics) - (R) Tools for visualisation and analysis of soccer spatiotemporal data.\n* [Tracking-Data](https://github.com/KubaMichalczyk/Tracking-Data) - (R) Plots soccer tracking data.\n\n### Others\n* [Codeball](https://codeball.metrica-sports.com/) - (Python) Data driven tactical and video analysis of soccer games.\n* [Expected-Goals-Model](https://github.com/KubaMichalczyk/Expected-Goals-Model) - (R) Expected Goals Model.\n* [extending-xG-gain](https://github.com/KubaMichalczyk/extending-xG-gain) - (R) An attempt to extend xG gain.\n* [Football-crunching](https://github.com/rjtavares/football-crunching) - (Python) Some soccer analysis.\n* [passing-networks](https://github.com/JoGall/passing-networks) - (R) Tools to create team passing networks from soccer passing data.\n* [regista](https://github.com/Torvaney/regista) - (R) Package for performing some of the common modelling tasks in soccer analytics.\n* [simulated-walks](https://github.com/JoGall/simulated-walks) - (R) Simulate movement of football players using a random walk rule.\n* [statsbomb-parser](https://github.com/imrankhan17/statsbomb-parser) - (Python) Convert StatsBomb's JSON data into easy-to-use CSV format.\n* [statsbomb\\_python](https://github.com/petermckeever/statsbomb_python) - (Python) Python Package for using Statsbomb IQ dataset.\n* [StatsBomb\\_WomensData](https://github.com/FCrSTATS/StatsBomb_WomensData) - (R) Utilising the free women's football data supplied by Statsbomb to help explore and teach football analytics.\n* [xyFootyPy](https://github.com/znstrider/xyFootyPy) - (Python) Introduction to working with Positional Data - Using RoboCup 2D Simulation Data.\n* [football-graphs](https://github.com/rodmoioliveira/football-graphs) - (Clojure) Some visualizations on passing networks\n\n\n## Podcasts\n* [Analytics FC Podcast](https://podcasts.apple.com/gb/podcast/analytics-fc-podcast/id991610009)\n* [Big Data Sports](https://podcasts.apple.com/us/podcast/big-data-sports/id1377252519) (S+)\n* [Differentgame - The Football Analytics Podcast](https://podcasts.apple.com/pk/podcast/differentgame-the-football-analytics-podcast/id1226164447?mt=2)\n* [Expected Value](https://podcasts.apple.com/us/podcast/expected-value/id1477998252) (S+)\n* [Measurables](https://www.measurablespod.com/) (S+)\n* [Three At The Back (By OptaPro)](https://itunes.apple.com/sk/podcast/three-at-the-back/id1143073118?mt=2)\n\n## Tools & Projects\n* [Following Messi](https://becominghuman.ai/following-messi-with-tensorflow-and-object-detection-20ba6d75667) - (Python) Following Messi with TensorFlow and Object Detection.\n* [Expected Goals interactive site](https://torvaney.github.io/projects/xG.htm\n* [Football + Voronoi](http://durtal.github.io/interactives/Football-Voronoi/)\n* [Game event Tracker](https://codepen.io/Mcnultyj/live/gdVbyv)\nl)\n* [Peter McKeever](http://petermckeever.com/plotting-xy-football-data-in-python/) - (Python) Plotting xy football data in python.\n* [PySport](https://pysport.org/)\n* [Soccer event logger](https://torvaney.github.io/projects/tracker.html)\n\n\n\n## Twitter Accounts\n### Data Scientists - Data Analysts\n* [Andre Brener](https://twitter.com/andre_brener)\n* [Dan Altman](https://twitter.com/NYAsports)\n* [Eliot McKinley](https://twitter.com/etmckinley)\n* [Garry Gelade](https://twitter.com/GarryGelade)\n* [Karun Singh](https://twitter.com/karun1710)\n* [Luke Bornn](https://twitter.com/LukeBornn)\n* [Mark Taylor](https://twitter.com/MarkTaylor0)\n* [Mark Thompson](https://twitter.com/EveryTeam_Mark)\n* [Mladen Sormaz](https://twitter.com/Mladen_Sormaz)\n* [Paul Power](https://twitter.com/counterattack9)\n* [Paul Riley](https://twitter.com/footballfactman)\n* [Philip Z. Maymin](https://twitter.com/pmaymin)\n* [Peter McKeever](https://twitter.com/petermckeever)\n\n### Others\n* [Big Data Sports](https://twitter.com/bigdatasport)\n* [danzn1](https://twitter.com/danzn1)\n* [FC Python](https://twitter.com/FC_Python)\n* [FC rSTATS](https://twitter.com/FC_rstats)\n* [F\u00fatbol Avanzado](https://twitter.com/FutbolAvanzado)\n* [Last Row](https://twitter.com/lastrowview)\n* [Predictive Analytics](https://twitter.com/moneyballfutbol)\n* [The xG Philosophy](https://twitter.com/xGPhilosophy)\n\n## Videos\n* [Football Player Ratings (YouTube channel)](https://www.youtube.com/channel/UC64jAkIQX-hD3pSnnOmr2MA)\n* [Friends of Tracking (YouTube channel)](https://www.youtube.com/channel/UCUBFJYcag8j2rm_9HkrrA7w/featured)\n\n## Miscellaneous\n* [Association of Sports Analytics Professionals](https://www.sportsanalyticsprofessionals.com/)\n* [Expected Goal literature](https://docs.google.com/document/d/1OY0dxqXIBgncj0UDgb97zOtczC-b6JUknPFWgD77ng4/edit)\n* [FIFA EPTS (Electronic Performance and Tracking Systems)](https://football-technology.fifa.com/en/media-tiles/epts/)\n* [Football Tableau User Group](https://usergroups.tableau.com/footballtableauusergroup)\n* [Football/soccer data analysts with publicly available work](https://docs.google.com/spreadsheets/d/1wjMVOpupmcF4hEG7PO4lY6l2mKsldGsnkyAULQwyAp8/edit?usp=sharing)\n* [opensport (Google Group)](https://groups.google.com/forum/#!forum/opensport)\n* [Technical Report - 2018 FIFA World Cup](https://img.fifa.com/image/upload/evdvpfdkueqrdlbbrrus.pdf)\n\n\n## Contribute\nContributions are always welcome! Send me a pull request.\n"
    },
    {
        "repo": "/roclark/sportsipy",
        "language": "Python",
        "readme_contents": "Sportsipy: A free sports API written for python\n###############################################\n**Development Status: This project is no longer undergoing active development. Please consider\nopening a pull request for any new features or bug fixes to be reviewed and\nmerged.**\n\n.. image:: https://github.com/roclark/sportsipy/workflows/Sportsipy%20push%20tests/badge.svg\n    :target: https://github.com/roclark/sportsipy/actions\n.. image:: https://readthedocs.org/projects/sportsipy/badge/?version=latest\n    :target: https://sportsipy.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n.. image:: https://img.shields.io/pypi/v/sportsipy.svg\n    :target: https://pypi.org/project/sportsipy\n\n.. contents::\n\nSportsipy is a free python API that pulls the stats from\nwww.sports-reference.com and allows them to be easily be used in python-based\napplications, especially ones involving data analytics and machine learning.\n\nSportsipy exposes a plethora of sports information from major sports\nleagues in North America, such as the MLB, NBA, College Football and Basketball,\nNFL, and NHL. Sportsipy also now supports Professional Football (or\nSoccer) for thousands of teams from leagues around the world. Every sport has\nits own set of valid API queries ranging from the list of teams in a league, to\nthe date and time of a game, to the total number of wins a team has secured\nduring the season, and many, many more metrics that paint a more detailed\npicture of how a team has performed during a game or throughout a season.\n\nInstallation\n============\n\nThe easiest way to install `sportsipy` is by downloading the latest\nreleased binary from PyPI using PIP. For instructions on installing PIP, visit\n`PyPA.io <https://pip.pypa.io/en/stable/installing/>`_ for detailed steps on\ninstalling the package manager for your local environment.\n\nNext, run::\n\n    pip install sportsipy\n\nto download and install the latest official release of `sportsipy` on\nyour machine. You now have the latest stable version of `sportsipy`\ninstalled and can begin using it following the examples below!\n\nIf the bleeding-edge version of `sportsipy` is desired, clone this\nrepository using git and install all of the package requirements with PIP::\n\n    git clone https://github.com/roclark/sportsipy\n    cd sportsipy\n    pip install -r requirements.txt\n\nOnce complete, create a Python wheel for your default version of Python by\nrunning the following command::\n\n    python setup.py sdist bdist_wheel\n\nThis will create a `.whl` file in the `dist` directory which can be installed\nwith the following command::\n\n    pip install dist/*.whl\n\nExamples\n========\n\nThe following are a few examples showcasing how easy it can be to collect\nan abundance of metrics and information from all of the tracked leagues. The\nexamples below are only a miniscule subset of the total number of statistics\nthat can be pulled using sportsipy. Visit the documentation on\n`Read The Docs <http://sportsipy.readthedocs.io/en/latest/>`_ for a\ncomplete list of all information exposed by the API.\n\nGet instances of all NHL teams for the 2018 season\n--------------------------------------------------\n\n.. code-block:: python\n\n    from sportsipy.nhl.teams import Teams\n\n    teams = Teams(2018)\n\nPrint every NBA team's name and abbreviation\n--------------------------------------------\n\n.. code-block:: python\n\n    from sportsipy.nba.teams import Teams\n\n    teams = Teams()\n    for team in teams:\n        print(team.name, team.abbreviation)\n\nGet a specific NFL team's season information\n--------------------------------------------\n\n.. code-block:: python\n\n    from sportsipy.nfl.teams import Teams\n\n    teams = Teams()\n    lions = teams('DET')\n\nPrint the date of every game for a NCAA Men's Basketball team\n-------------------------------------------------------------\n\n.. code-block:: python\n\n    from sportsipy.ncaab.schedule import Schedule\n\n    purdue_schedule = Schedule('purdue')\n    for game in purdue_schedule:\n        print(game.date)\n\nPrint the number of interceptions by the away team in a NCAA Football game\n--------------------------------------------------------------------------\n\n.. code-block:: python\n\n    from sportsipy.ncaaf.boxscore import Boxscore\n\n    championship_game = Boxscore('2018-01-08-georgia')\n    print(championship_game.away_interceptions)\n\nGet a Pandas DataFrame of all stats for a MLB game\n--------------------------------------------------\n\n.. code-block:: python\n\n    from sportsipy.mlb.boxscore import Boxscore\n\n    game = Boxscore('BOS201806070')\n    df = game.dataframe\n\nFind the number of goals a football team has scored\n---------------------------------------------------\n\n.. code-block:: python\n\n    from sportsipy.fb.team import Team\n\n    tottenham = Team('Tottenham Hotspur')\n    print(tottenham.goals_scored)\n\nDocumentation\n=============\n\nTwo blog posts detailing the creation and basic usage of `sportsipy` can\nbe found on The Medium at the following links:\n\n- `Part 1: Creating a public sports API <https://medium.com/clarktech-sports/python-sports-analytics-made-simple-part-1-14569d6e9a86>`_\n- `Part 2: Pull any sports metric in 10 lines of Python <https://medium.com/clarktech-sports/python-sports-analytics-made-simple-part-2-40e591a7f3db>`_\n\nThe second post in particular is a great guide for getting started with\n`sportsipy` and is highly recommended for anyone who is new to the\npackage.\n\nComplete documentation is hosted on\n`readthedocs.org <http://sportsipy.readthedocs.io/en/latest>`_. Refer to\nthe documentation for a full list of all metrics and information exposed by\nsportsipy. The documentation is auto-generated using Sphinx based on the\ndocstrings in the sportsipy package.\n\nTesting\n=======\n\nSportsipy contains a testing suite which aims to test all major portions\nof code for proper functionality. To run the test suite against your\nenvironment, ensure all of the requirements are installed by running::\n\n    pip install -r requirements.txt\n\nNext, start the tests by running py.test while optionally including coverage\nflags which identify the amount of production code covered by the testing\nframework::\n\n    py.test --cov=sportsipy --cov-report term-missing tests/\n\nIf the tests were successful, it will return a green line will show a message at\nthe end of the output similar to the following::\n\n    ======================= 380 passed in 245.56 seconds =======================\n\nIf a test failed, it will show the number of failed and what went wrong within\nthe test output. If that's the case, ensure you have the latest version of code\nand are in a supported environment. Otherwise, create an issue on GitHub to\nattempt to get the issue resolved.\n"
    },
    {
        "repo": "/DimaKudosh/pydfs-lineup-optimizer",
        "language": "Python",
        "readme_contents": "# PYDFS-LINEUP-OPTIMIZER [![Build Status](https://travis-ci.com/DimaKudosh/pydfs-lineup-optimizer.svg?branch=master)](https://travis-ci.org/DimaKudosh/pydfs-lineup-optimizer)[![Coverage Status](https://coveralls.io/repos/github/DimaKudosh/pydfs-lineup-optimizer/badge.svg?branch=master)](https://coveralls.io/github/DimaKudosh/pydfs-lineup-optimizer?branch=master)\npydfs-lineup-optimizer is a tool for creating optimal lineups for daily fantasy sport. \n\n## Installation\nTo install pydfs-lineup-optimizer, simply run:\n```\n$ pip install pydfs-lineup-optimizer\n```\n\n## Support\nNow it supports following dfs sites:\n\nLeague | DraftKings | FanDuel | FantasyDraft | Yahoo | FanBall | DraftKings Captain Mode | FanDuel Single Game | DraftKings Tiers |\n------ | ---------- | ------- | ------------ | ----- | ------- | ----------------------- | ------------------- | ---------------- |\nNFL    | +          | +       | +            | +     | +       | +                       | +                   | +                |\nNBA    | +          | +       | +            | +     | -       | +                       | +                   | +                |\nNHL    | +          | +       | +            | +     | -       | +                       | +                   | +                |\nMLB    | +          | +       | +            | +     | -       | +                       | +                   | +                |\nWNBA   | +          | +       | -            | -     | -       | +                       | -                   | -                |\nGolf   | +          | +       | +            | +     | -       | -                       | -                   | -                |\nSoccer | +          | -       | -            | +     | -       | +                       | -                   | -                |\nCFL    | +          | -       | -            | -     | -       | -                       | -                   | -                |\nCFB    | +          | -       | -            | -     | -       | -                       | -                   | -                |\nLOL    | -          | +       | -            | -     | -       | +                       | +                   | -                |\nMMA    | +          | +       | -            | -     | -       | -                       | -                   | -                |\nNASCAR | +          | +       | -            | -     | -       | -                       | -                   | -                |\nTennis | +          | -       | -            | -     | -       | -                       | -                   | -                |\nCSGO   | +          | -       | -            | -     | -       | -                       | -                   | -                |\n\n## Documentation\nDocumentation is available at https://pydfs-lineup-optimizer.readthedocs.io/en/latest\n\n## Example\nHere is an example for evaluating optimal lineup for Yahoo fantasy NBA. It loads players list from \"yahoo-NBA.csv\" and select 10 best lineups.\n```python\nfrom pydfs_lineup_optimizer import Site, Sport, get_optimizer\n\n\noptimizer = get_optimizer(Site.YAHOO, Sport.BASKETBALL)\noptimizer.load_players_from_csv(\"yahoo-NBA.csv\")\nfor lineup in optimizer.optimize(10):\n    print(lineup)\n```\n"
    },
    {
        "repo": "/Rayhahah/EasySports",
        "language": "Java",
        "readme_contents": "[toc]\n# EasySports\n\n## \u58f0\u660e\n\u672c\u9879\u76ee\u90e8\u5206API\u6765\u81eaNBA\u4e2d\u6587\u5b98\u7f51\u4e0e\u864e\u6251\u4f53\u80b2\uff0c\u7eaf\u7ec3\u624b\u4e4b\u4f5c\uff0c\u4e2a\u4eba\u672a\u4ece\u4e2d\u83b7\u53d6\u4efb\u4f55\u5229\u76ca\uff0c\u5176\u6240\u6709\u5185\u5bb9\u5747\u53ef\u5728NBA\u4e2d\u6587\u5b98\u7f51\u4e0e\u864e\u6251\u4f53\u80b2\u83b7\u53d6\u3002\n\u6570\u636e\u7684\u83b7\u53d6\u4e0e\u5171\u4eab\u53ef\u80fd\u4f1a\u4fb5\u72af\u5230NBA\u4e2d\u6587\u5b98\u7f51\u4e0e\u864e\u6251\u4f53\u80b2\u7684\u6743\u76ca\uff0c\u82e5\u88ab\u544a\u77e5\u9700\u505c\u6b62\u5171\u4eab\u4e0e\u4f7f\u7528\uff0c\u672c\u4eba\u4f1a\u7acb\u5373\u5220\u9664\u6574\u4e2a\u9879\u76ee\u3002\n\n## \u7b80\u4ecb\n\u9879\u76ee\u91c7\u7528 MaterialDesign + MVP + Retrofit2 + RxJava\u5f00\u53d1\n\n\u5927\u90e8\u5206\u529f\u80fd\u5df2\u7ecf\u5b8c\u6210\uff0c\u5982\u679c\u5bf9\u4f60\u6709\u5e2e\u52a9\u7684\u8bdd\u4e0d\u59a8star\u4e00\u4e2ao(*\uffe3\u25bd\uffe3*)\u30d6\n\n\u4e0b\u9762\u6211\u5c31\u6765\u603b\u7ed3\u4e00\u4e0b\u5427\u54c8\u54c8\u54c8\u54c8\n\n## \u4e0b\u8f7d\u5730\u5740\n\u73b0\u5728\u5df2\u7ecf\u5728\u9177\u5b89\u7f51\u4e0a\u67b6\u5566\n\u53ec\u5524\u672f\uff1a[\u4f20\u9001\u95e8\uff01\uff01](https://www.coolapk.com/apk/173213)\n\n## \u5e94\u7528\u90e8\u5206\u622a\u56fe\n<img src=\"https://github.com/Rayhahah/EasySports/blob/master/screenshot/match.png?raw=true\" width=\"280\"/>\n<img src=\"https://github.com/Rayhahah/EasySports/blob/master/screenshot/match_data.png?raw=true\" width=\"280\"/>\n<img src=\"https://github.com/Rayhahah/EasySports/blob/master/screenshot/match_live.png?raw=true\" width=\"280\"/>\n<img src=\"https://github.com/Rayhahah/EasySports/blob/master/screenshot/news.png?raw=true\" width=\"280\"/>\n<img src=\"https://github.com/Rayhahah/EasySports/blob/master/screenshot/mine.png?raw=true\" width=\"280\"/>\n<img src=\"https://github.com/Rayhahah/EasySports/blob/master/screenshot/form_detail.png?raw=true\" width=\"280\"/>\n<img src=\"https://github.com/Rayhahah/EasySports/blob/master/screenshot/night_form.png?raw=true\" width=\"280\"/>\n<img src=\"https://github.com/Rayhahah/EasySports/blob/master/screenshot/night_news_detail.png?raw=true\" width=\"280\"/>\n\n## \u4e00\u4e9b\u6536\u83b7\n\u79fb\u52a8\u7aef\u548c\u540e\u7aef\u4e00\u628a\u6293\uff0c\u5b66\u4e60\u4e86\u5f88\u591a\n\n- \u5c3d\u53ef\u80fd\u7b80\u6d01\u5e72\u51c0\u7684\u7f16\u7801\u89c4\u8303\n- \u81ea\u8ba4\u4e3a\u826f\u597d\u7684\u4e1a\u52a1\u5206\u5305\u4e0e\u529f\u80fd\u89e3\u8026\uff0c\u6e05\u6670\u7684\u7f51\u7edc\u8bf7\u6c42\n- \u5bf9\u4e09\u65b9\u670d\u52a1\u548c\u6846\u67b6\u7684\u4e8c\u6b21\u5c01\u88c5\n- \u7b26\u5408Material Design\u7684\u754c\u9762\uff0c\u826f\u597d\u7684\u52a8\u753b\u8fc7\u5ea6\n\n### \u5c01\u88c5\n\u5bf9\u65b9\u6cd5\u7684\u4f7f\u7528\u6216\u8005\u7b2c\u4e09\u65b9\u670d\u52a1\u6216\u662f\u6846\u67b6\u7684\u4f7f\u7528\u90fd\u7528\u5230\u4e86\u5c01\u88c5\n\u8fd9\u91cc\u53ea\u8bf4\u5176\u4e2d\u51e0\u70b9\uff08\u4e5f\u5305\u62ec\u4e00\u4e0b\u81ea\u5b9a\u4e49View\uff09\n\n- \u4e00\u4e2a\u57fa\u4e8eMVP\u7684\u5feb\u901f\u5f00\u53d1\u57fa\u7c7b\u5e93`rbase`\n    - Activity\u548cFragment\u7684\u5e38\u7528\u5c01\u88c5\uff0c\u7ed3\u5408RxJava\n    - \u5f02\u5e38\u6536\u96c6\u7c7b\u7684\u5c01\u88c5\u5e76\u63d0\u4f9b\u5bf9\u5916\u7684\u670d\u52a1\u5668\u4e0a\u4f20\u5904\u7406\u63a5\u53e3\n    - \u5de5\u5177\u7c7b\u7684\u5c01\u88c5\uff1a`PermissionManager` \u3001`SPManager`\u7b49\n    - \u7f51\u7edc\u8bf7\u6c42\u7684\u7edf\u4e00\u7ba1\u7406\n- \u597d\u7528\u7684\u5f39\u7a97\u5e93\u7684\u5c01\u88c5`dialoglib`\n- \u7f51\u9875\u6d4f\u89c8\u7684\u5c01\u88c5`RWebActivity`,\u5176\u5185\u90e8\u96c6\u6210\u4e86\u817e\u8baf\u5f00\u6e90\u6846\u67b6[VasSonic](https://github.com/Tencent/VasSonic)\n- \u5bf9ZXing\u5e93\u7684\u4e8c\u6b21\u5c01\u88c5\u548c\u81ea\u5b9a\u4e49\u5b9e\u73b0\n- `ProgressLayout` \u5e38\u7528\u7684\u52a0\u8f7d\u3001\u9519\u8bef\u5e03\u5c40\n- `TitleItemDecoration` \u597d\u7528\u7684\u7c98\u6027\u5934\u90e8\n\n\n### \u7b2c\u4e09\u65b9\u670d\u52a1\n- [ShareSDK](http://www.mob.com/downloadDetail/ShareSDK/android)\n- [\u963f\u91cc\u70ed\u4fee\u590d](https://www.aliyun.com/product/hotfix?spm=5176.8142029.388261.353.152a1d0fzhdgPS)\n- [\u817e\u8baf\u76f4\u64ad](https://cloud.tencent.com/product/LVB)\n\nps:\u672c\u6765\u4e5f\u5f15\u5165\u4e86Bmob\u6784\u5efa\u7528\u6237\u7cfb\u7edf\u548c\u5f02\u5e38\u53cd\u9988\u7cfb\u7edf\uff0c\u5728\u5f15\u5165\u81ea\u5df1\u642d\u5efa\u7684\u540e\u53f0\u63a5\u53e3\u4ee5\u540e\u5c31\u5e9f\u5f03\u6389\u4e86\uff0cbmob\u8fd8\u662f\u6709\u70b9\u5751\u7239\u7684\u3002\n\n\n\n### \u6846\u67b6\n\u611f\u8c22\u8fd9\u4e9b\u5f00\u6e90\u6846\u67b6\u7684\u5927\u529b\u652f\u6301\n\n- [BRAVH](https://github.com/CymChad/BaseRecyclerViewAdapterHelper) \uff1a \u529f\u80fd\u5f3a\u5927\u7684RecyclerViewAdapter\u5c01\u88c5\u5e93\n- [glide](https://github.com/bumptech/glide) : \u56fe\u7247\u52a0\u8f7d\n- [GreenDAO](https://github.com/square/retrofit) : \u6570\u636e\u5e93\u6846\u67b6\n- [Retrofit](https://github.com/square/retrofit) : \u4ee3\u7801\u7b80\u6d01\uff0c\u63a5\u53e3\u89e3\u8026\n- [OkHttp](https://github.com/square/okhttp) : \u7f51\u7edc\u8bf7\u6c42\n- [RxJava](https://github.com/ReactiveX/RxJava) : \u5feb\u6377\u7684\u7ebf\u7a0b\u5207\u6362\uff0c\u7b80\u6d01\u7684\u4ee3\u7801\uff0c\u6e05\u6670\u7684\u903b\u8f91\uff0c\u548cRetrofit\u914d\u5408\u5f88\u723d\n- [photoView](https://github.com/chrisbanes/PhotoView) : \u56fe\u7247\u7684\u64cd\u4f5c\n- [eventbus](https://github.com/greenrobot/EventBus) \uff1a\u65f6\u95f4\u603b\u7ebf\uff0c\u7ec4\u4ef6\u4e4b\u95f4\u7684\u7b80\u4fbf\u901a\u4fe1\n- [gson](https://github.com/google/gson) \uff1a JSON\u5e8f\u5217\u5316\n- [VasSonic](https://github.com/Tencent/VasSonic) : Tecent\u5f00\u6e90\uff0c\u63d0\u5347web\u7684\u9996\u5c4f\u8bf7\u6c42\u901f\u5ea6\n- [stetho](https://github.com/facebook/stetho) : Facebook\u5f00\u6e90\u7684\u975e\u5e38\u597d\u7528\u8c03\u8bd5\u6846\u67b6\n- [BottomNavigation](https://github.com/Ashok-Varma/BottomNavigation) : \u5e95\u90e8\u5bfc\u822a\u680f\n- [JieCaoPlayer](https://github.com/lipangit/JiaoZiVideoPlayer) : \u64ad\u653e\u5668\uff0c\u5f15\u5165\u5230\u9879\u76ee\u4e2d\uff0c\u5e76\u5728\u5176\u57fa\u7840\u4e0a\u81ea\u5b9a\u4e49\u529f\u80fd\n### \u63a5\u53e3\n\u5e94\u7528\u7684\u6570\u636e\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u81ea\u5df1\u642d\u5efa\u548c\u6570\u636e\u6293\u53d6\uff08[\u6211\u7684\u535a\u5ba2\u7684\u6293\u53d6\u6559\u7a0b](http://rayhahah.com/2017/08/30/fiddler/)\uff09\n\n- \u81ea\u5df1\u642d\u5efa\u7684SSM\u540e\u53f0\u7cfb\u7edf[\u4f20\u9001\u95e8](https://github.com/Rayhahah/Raymall)\uff0c\u5e76\u4e14\u5df2\u7ecf\u53d1\u5e03\u5728\u963f\u91cc\u4e91\u670d\u52a1\u5668\u4e0a\u5566\uff0c\u5e72\u6d3b\u6ee1\u6ee1\u7684\u54df\uff08\u8981\u8138(\u273f\u25e1\u203f\u25e1)\uff09\n    - \u76f4\u64ad\u63a5\u5165\n    - \u7248\u672c\u66f4\u65b0\n    - \u7528\u6237\u7ba1\u7406\u7cfb\u7edf\n    - \u5d29\u6e83\u4fe1\u606f\u91c7\u96c6\n    - \u7528\u6237\u4fe1\u606f\u53cd\u9988\n- \u5269\u4e0b\u7684\u63a5\u53e3\u662f\u4ece\u864e\u6251\u4f53\u80b2\u3001\u817e\u8baf\u89c6\u9891\u4e2d\u722c\u53d6\u7684\uff0c\u76f8\u5f53\u96f6\u6563\uff0c\u76f8\u5f53\u7e41\u6742\uff0c\u5177\u4f53\u53ef\u4ee5\u770b`JsonParser.java`\uff0c\u91cc\u9762\u6709\u4e00\u4e9b\u5341\u5206\u5201\u94bb\u7684Json\u6570\u636e\u7684\u5904\u7406\n\n\n## TODO\n- \u6781\u5149\u63a8\u9001\u524d\u7aef\u548c\u540e\u7aef\u7684\u96c6\u6210\n- \u89c6\u9891\u64ad\u653e\u5668\u7684\u66ff\u6362\n- \u63d2\u4ef6\u5316\n\n## \u6700\u540e\n[\u4e2a\u4eba\u535a\u5ba2](http://rayhahah.com/)\n[\u672c\u9879\u76ee\u7684\u540e\u53f0](https://github.com/Rayhahah/Raymall)\n\n"
    },
    {
        "repo": "/SkalskiP/sport",
        "language": "Jupyter Notebook",
        "readme_contents": "# \u26bd  Football Players Tracking with YOLOv5 + ByteTrack\n\n[![YouTube](https://badges.aleen42.com/src/youtube.svg)](https://www.youtube.com/watch?v=QCG8QMhga9k)\n[![Roboflow](https://raw.githubusercontent.com/roboflow-ai/notebooks/main/assets/badges/roboflow-blogpost.svg)](https://blog.roboflow.com/track-football-players/)\n[![GitHub](https://badges.aleen42.com/src/github.svg)](https://github.com/roboflow-ai/notebooks/blob/main/notebooks/how-to-track-football-players.ipynb)\n\nI have long been fascinated by the use of Computer Vision in sports. After all, it is a combination of two things I love. Almost three years ago, I wrote a post on my personal blog in which I tried\u200a\u2014\u200aat that time, still using YOLOv3\u200a\u2014\u200ato [detect and classify basketball players on the court](https://towardsdatascience.com/chess-rolls-or-basketball-lets-create-a-custom-object-detection-model-ef53028eac7d).\n\nFIFA World Cup 2022 has motivated me to revisit this idea. This time I used a combination of [YOLOv5](https://github.com/ultralytics/yolov5) and [ByteTrack](https://github.com/ifzhang/ByteTrack) to track football players on the field. This blog post accompanies the Roboflow video where I talk through how to track players on a football field.\n\nhttps://user-images.githubusercontent.com/26109316/207858600-ee862b22-0353-440b-ad85-caa0c4777904.mp4\n\n# \ud83e\udd38  3D Football Players Pose Estimation with YOLOv7\n\n[![YouTube](https://badges.aleen42.com/src/youtube.svg)](https://www.youtube.com/watch?v=AWjKfjDGiYE)\n[![GitHub](https://badges.aleen42.com/src/github.svg)](https://github.com/SkalskiP/sport/tree/master/football-players-pose-estimation)\n\nI was watching a FIFA 2022 World Cup match the other day, and one of the things that caught my eye was VAR - Video Assistant Referee, or to be more precise, the part of it responsible for analyzing whether a player was on the offside. I did a little [research](https://www.youtube.com/watch?v=WycjDx6giVE) and found that the system performs pose estimation on multiple cameras at once. I decided to check how difficult it would be to reproduce it at home using two cameras and [YOLOv7](https://github.com/WongKinYiu/yolov7).\n\nhttps://user-images.githubusercontent.com/26109316/207677038-20f951a6-e469-4b3f-a934-66e036fcff69.mp4\n"
    },
    {
        "repo": "/kshvmdn/nba.js",
        "language": "JavaScript",
        "readme_contents": "## nba.js\n\n[![npm version](https://badge.fury.io/js/nba.js.svg)](https://badge.fury.io/js/nba.js)\n[![Build Status](https://travis-ci.org/kshvmdn/nba.js.svg?branch=master)](https://travis-ci.org/kshvmdn/nba.js)\n[![Coverage Status](https://coveralls.io/repos/github/kshvmdn/nba.js/badge.svg?branch=master)](https://coveralls.io/github/kshvmdn/nba.js?branch=master)\n[![Dependency Status](https://img.shields.io/david/kshvmdn/nba.js.svg)](https://david-dm.org/kshvmdn/nba.js)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n\n> A Node.js library for current and historical NBA stats, scores, and data.\n\n### Table of contents\n\n* [Installation](#installation)\n* [Usage](#usage)\n* [Examples](#examples)\n* [Contribute](#contribute)\n* [License](#license)\n\nFull documentation and usage guide can be found [here](docs).\n\n### Installation\n\nInstall via [npm](https://npmjs.com/packages/nba.js).\n\n```sh\n$ npm install --save nba.js\n```\n\n### Usage\n\n* This library provides access to data from 2 different APIs:\n\n  * [data.nba.net](http://data.nba.net)\n  * [stats.nba.com](http://stats.nba.com)\n\n* For the full usage guide, see [USAGE.md](docs/USAGE.md).\n\n* **Method & parameter reference**: [`nba.data`](docs/api/DATA.md),\n  [`nba.stats`](docs/api/STATS.md).\n\n### Examples\n\nSee [EXAMPLES.md](docs/EXAMPLES.md).\n\n### Contribute\n\nThis project is completely open source. Feel free to\n[open an issue](https://github.com/kshvmdn/nba.js/issues) or\n[make a pull request](https://github.com/kshvmdn/nba.js/pulls).\n\nFor more information, see [CONTRIBUTING.md](docs/CONTRIBUTING.md).\n\n### License\n\n[MIT](./LICENSE) \u00a9 [Kashav Madan](http://kshvmdn.com).\n"
    },
    {
        "repo": "/dsward2/LocalRadio",
        "language": "Objective-C",
        "readme_contents": "# LocalRadio\n\n\n<p align=\"center\">\n<img src=\"https://cdn.rawgit.com/dsward2/LocalRadio/d3eb87c/Documents/LocalRadio-animation.svg\">\n</p>\n\n<hr>\n\n### The latest pre-release alpha versions of the LocalRadio app are [available for download at this link](https://github.com/dsward2/LocalRadio/releases).\n\n<hr>\n\n**LocalRadio** is \"Radio for Cord-Cutters\", an experimental, GPL-2 licensed open-source application for listening to \"software defined radio\" on your Mac and mobile devices.  With an inexpensive RTL-SDR device plugged into the Mac's USB port, LocalRadio provides a casual listening experience for your favorite local FM broadcasts, free music, news, sports, weather, public safety and aviation scanner monitoring, and other radio sources.  \n\nLocalRadio's easy-to-use web interface allows the radio to be shared from a Mac to iPhones, iPads, Android devices, and other PCs on your home network.  No additional software or hardware is required for sharing with mobile devices, simply use the built-in mobile web browser to connect to LocalRadio and tune to your favorite stations.  You can also listen to LocalRadio audio on your Apple TV and other AirPlay-compatible devices. Recent versions of LocalRadio have added an option for stereo listening of FM broadcasts and audio devices.\n\n\nLocalRadio is intended for use as in-home entertainment, using a local area network with a private IP address.  It has not been tested with a public IP address, particularly for security testing, therefore it is not recommended for that purpose.  For simply listening to LocalRadio on the Mac with the RTL-SDR device plugged in, no network is required at all.\n\n<hr>\n\n[LocalRadio Screen Captures](https://github.com/dsward2/LocalRadio/blob/master/SCREENSHOTS.md)\n\n[LocalRadio Hardware Requirements](https://github.com/dsward2/LocalRadio/blob/master/HARDWARE.md)\n\n[LocalRadio Application Notes](https://github.com/dsward2/LocalRadio/blob/master/APPNOTES.md)\n\nProject page: [https://github.com/dsward2/LocalRadio](https://github.com/dsward2/LocalRadio)\n\n<hr>\n\n### A \u201cpre-release\u201d of LocalRadio v1.x is now available for download \u2013\n\n[https://github.com/dsward2/LocalRadio/releases](https://github.com/dsward2/LocalRadio/releases)\n\nIt is still experimental, with no independent testing yet.\n\nThe best way to report problems is at this GitHub Issues page \u2013\n\n[https://github.com/dsward2/LocalRadio/issues/2](https://github.com/dsward2/LocalRadio/issues/2)\n\n<hr>\n\nCopyright (c) 2017-2020 by ArkPhone, LLC.\n\nAll trademarks are the property of their respective holders.\n"
    },
    {
        "repo": "/metrica-sports/sample-data",
        "language": null,
        "readme_contents": "# Metrica Sports Sample Data\n\n## About the repo\nIn this repository you can find sample tracking and event data that exemplify the Elite data package we offer. The idea of this data is twofold: \n1. to allow potential clients to check out this data and get familiar with our formats and data quality. \n2. to provide some sample data to play around with to the broader football analytics community! \n\n## About the data\n- At the moment there are two games in our standard CSV format, in the coming days we will add the same data in the standar FIFA format. \n- The data of these two games is anonymized, meaning there are no references to the names of players, teams or competitions.\n- You'll see the data goes from 0 to 1 on each axis. The coordiante (0,0) is the top left, (1,1) is the bottom right, and (0.5,0.5) is the kick off point. \n- The dimensions of the field are the same for both games: 105x68 meters. \n- For the events, in the `documentation` folder you can find a pdf file with the definition and explanation of all our events types and subtypes. \n- Tracking and event data are synchronized.\n- [UPDATE 2021-04-15] A new game has been added: Sample Game 3. This game is in the new format (EPTS FIFA format for the tracking and metadata and json for the events). We recommend using [kloppy](https://github.com/PySport/kloppy/) to read this data.\n\n## Getting started\nLaurie Shaw (https://twitter.com/EightyFivePoint) form the Sports Analytics Lab of Harvard University has some great introductory python code to working with this data as part of the Friends of Tracking initiative. You can find it here: https://github.com/Friends-of-Tracking-Data-FoTD/LaurieOnTracking and watch his first lesson with this data here: https://youtu.be/8TrleFklEsE\n\n## Legal stuff\n- Please be responsible with the use of this data.\n- If you use it for anything public, please aknowledge the source.\n\n## Future plans\n- We will try to add data for more games in the future.\n- We will try to add (may be in another repo) scripts to get started analyzing this data.\n- To stay up to date with news and additions, follow https://twitter.com/brunodagnino\n\n## Other tracking data sources\n- 3 games from Hammarby by Signality as part of David Sumpter analytics course. Tracking and video (not synched), no events. https://uppsala.instructure.com/courses/28112/pages/4-player-movements-on-the-pitch\n- 9 games by Skillcorner as part of the Friends of Tracking initiative. Tracking from broadcast feed, no events, no videos. https://github.com/SkillCorner/opendata\n- 19 goals scored by Livepool FC in 2019 by Lastrowview / Ricardo Tavares. Tracking (players and ball), no events, no vides. https://github.com/Friends-of-Tracking-Data-FoTD/Last-Row\n\n## Events data sources\n- Statsbomb open data: https://github.com/statsbomb/open-data\n- Wyscout event data: https://figshare.com/collections/Soccer_match_event_dataset/4415000\n\n"
    },
    {
        "repo": "/pretrehr/Sports-betting",
        "language": "Python",
        "readme_contents": "[![forthebadge made-with-python](http://ForTheBadge.com/images/badges/made-with-python.svg)](https://www.python.org/)\n\n![Build windows](https://github.com/pretrehr/Sports-betting/workflows/Windows/badge.svg)\n![Build ubuntu](https://github.com/pretrehr/Sports-betting/workflows/Ubuntu/badge.svg)\n![Build mac os](https://github.com/pretrehr/Sports-betting/workflows/Mac%20OS/badge.svg)\n[![Requirements Status](https://requires.io/github/pretrehr/Sports-betting/requirements.svg?branch=master)](https://requires.io/github/pretrehr/Sports-betting/requirements/?branch=master)\n[![GitHub license](https://img.shields.io/github/license/pretrehr/Sports-betting.svg)](https://github.com/pretrehr/Sports-betting/blob/master/LICENSE)\n\n# Sports-betting\nSports betting assistant which optimizes earnings regarding odds and offers\n\n[(English version below)](#english-version)\n\nAssistant de paris sportifs avec optimisation des gains en fonction des cotes et des promotions\n\n<details>\n<summary>Sommaire</summary>\n\n* [Installation](#installation)\n* [Initialisation](#initialisation)\n* [Exemples d'utilisation](#exemples-dutilisation)\n  * [Exemple 1 : Bonus re\u00e7u dans tous les cas si l'on mise sur un match donn\u00e9](#exemple-1--bonus-re\u00e7u-dans-tous-les-cas-si-lon-mise-sur-un-match-donn\u00e9)\n  * [Exemple 2 : Bonus re\u00e7u dans tous les cas si l'on mise sur un match quelconque, \u00e9ventuellement d'une comp\u00e9tition donn\u00e9e / d'un sport donn\u00e9](#exemple-2--bonus-re\u00e7u-dans-tous-les-cas-si-lon-mise-sur-un-match-quelconque-\u00e9ventuellement-dune-comp\u00e9tition-donn\u00e9e--dun-sport-donn\u00e9)\n  * [Exemple 3 : Bonus re\u00e7u si au moins *n* matches gagn\u00e9s](#exemple-3--bonus-re\u00e7u-si-au-moins-n-matches-gagn\u00e9s)\n  * [Exemple 4 : Bonus re\u00e7u si un pari est perdant.](#exemple-4--bonus-re\u00e7u-si-un-pari-est-perdant)\n* [Conversion des freebets en cash](#conversion-des-freebets-en-cash)\n  * [M\u00e9thode 1 : Si l'on n'a que des freebets fractionnables](#m\u00e9thode-1--si-lon-na-que-des-freebets-fractionnables)\n  * [M\u00e9thode 2 : Si l'on a quelques freebets non fractionnables et suffisamment de freebets fractionnables](#m\u00e9thode-2--si-lon-a-quelques-freebets-non-fractionnables-et-suffisamment-de-freebets-fractionnables)\n  * [M\u00e9thode 3 : Si l'on dispose de freebets non fractionnables et pas assez de freebets fractionnables](#m\u00e9thode-3--si-lon-dispose-de-freebets-non-fractionnables-et-pas-assez-de-freebets-fractionnables)\n\n</details>\n\n## Pr\u00e9requis\n- Python 3.6 ou ult\u00e9rieur\n- Google Chrome\n\n## Installation\n- T\u00e9l\u00e9chargez ou clonez le d\u00e9p\u00f4t\n- Allez \u00e0 la racine du projet\n- Ex\u00e9cutez la commande\n```bash\npip install -r requirements.txt\n```\n\nSi vous choisissez d'utiliser l'interface utilisateur, il suffit alors de lancer la commande\n```bash\npython interface_pysimplegui.py\n```\n\nVous obtenez alors cette fen\u00eatre :\n![image](https://user-images.githubusercontent.com/43851883/82161447-08042c00-989d-11ea-96c9-5c2fb978ee4d.png)\n\nSinon, vous pouvez aussi utiliser le package en ligne de commande\n- Lancez python3\n```python\n>>> import sportsbetting\n>>> from sportsbetting.user_functions import *\n```\n- Vous pouvrez alors utiliser toutes les fonctions disponibles dans le fichier [user_functions.py](https://github.com/pretrehr/Sports-betting/blob/master/sportsbetting/user_functions.py).\n\n## Initialisation\nAvant de pouvoir pleinement utiliser toutes les fonctions du fichier [user_functions.py](https://github.com/pretrehr/Sports-betting/blob/master/sportsbetting/user_functions.py), il est n\u00e9cessaire d'initialiser la base de matches sur lesquels on peut potentiellement parier. Par exemple, si l'on veut uniquement se concentrer sur les matches de Ligue 1 Fran\u00e7aise, et que l'on veut seulement parier sur Betclic et Winamax, on \u00e9crira :\n```python\n>>> parse_competition(\"ligue 1 france\", \"football\", \"betclic\", \"winamax\")\n```\nOn notera que si vous ne pr\u00e9cisez pas de bookmaker, l'algorithme r\u00e9cup\u00e8rera les cotes des matches de la comp\u00e9tition sur la plupart des bookmakers agr\u00e9\u00e9s par l'ARJEL.\nSi vous n'avez pas de comp\u00e9tition ou de sport cible, il est conseill\u00e9 d'appeler\n```python\n>>> parse_football()\n```\nou, par exemple,\n```python\n>>> parse_football(\"betclic\", \"winamax\")\n```\nCes fonctions vont r\u00e9cup\u00e9rer les cotes des matches disponibles chez les diff\u00e9rents bookmakers pour les 5 grands championnats europ\u00e9ens de football (Ligue 1, Premier League, LaLiga, Serie A, Bundesliga), car ce sont ces comp\u00e9titions qui, g\u00e9n\u00e9ralement, g\u00e9n\u00e9rent le plus de rendement.\nOn pr\u00e9cisera que dans le cas du tennis o\u00f9 il n'y a pas de comp\u00e9tition fixe, il faut appeler la fonction:\n```python\n>>> parse_tennis()\n```\nou, par exemple,\n```python\n>>> parse_tennis(\"betclic\", \"winamax\")\n```\nCette commande aura pour effet de r\u00e9cup\u00e9rer les cotes de matches de tennis des comp\u00e9titions actuellement disput\u00e9es.\n\nVous trouverez ci-dessous un tableau r\u00e9capitulatif des diff\u00e9rents bookmakers agr\u00e9\u00e9s par l'ARJEL avec la cha\u00eene de caract\u00e8res associ\u00e9e dans le package.\n\n| Bookmaker  | Cha\u00eene de caract\u00e8res |\n| ------------- | ------------- |\n| [Betclic](https://www.betclic.fr/sport/)  | `\"betclic\"`  |\n| [Bwin](https://sports.bwin.fr/fr/sports)  | `\"bwin\"`  |\n| [France Pari](https://www.france-pari.fr/)  | `\"france_pari\"`  |\n| [JOA](https://www.joa-online.fr/fr/sport)  | `\"joa\"` |\n| [NetBet](https://www.netbet.fr/)  | `\"netbet\"` |\n| [Parions Sport](https://www.enligne.parionssport.fdj.fr/) |`\"parionssport\"` |\n| [PasinoBet](https://www.pasinobet.fr/) |`\"pasinobet\"` |\n| [PMU](https://paris-sportifs.pmu.fr/) |`\"pmu\"` |\n| [PokerStars](https://www.pokestarssport.fr/)  | `\"pokerstars\"`  |\n| [Unibet](https://www.unibet.fr/sport) |`\"unibet\"` |\n| [Winamax](https://www.winamax.fr/paris-sportifs/sports/) |`\"winamax\"` |\n| [Zebet](https://www.zebet.fr/fr/) |`\"zebet\"` |\n\n*Nota bene*: Il n'est pour l'instant pas possible d'utiliser le package pour les bookmakers suivant :\n- [Feelingbet](https://feelingbet.fr/) qui propose tr\u00e8s peu de promotions. Mais au besoin, les cotes disponibles sur ce site sont identiques \u00e0 celles disponibles sur [France Pari](https://www.france-pari.fr/)\n- [Genybet](https://sport.genybet.fr/) qui est davantage ax\u00e9 sur les paris hippiques plut\u00f4t que sportifs\n- [Vbet](https://www.vbet.fr/paris-sportifs) qui propose des promotions nombreuses mais tr\u00e8s restrictives et donc peu rentables\n\nLa r\u00e9cup\u00e9ration des cotes peut \u00eatre facilement utilis\u00e9e depuis l'interface sur l'onglet \"R\u00e9cup\u00e9ration des cotes\". Il suffit alors de choisir le sport, le (ou les) championnat(s) et le (ou les) bookmaker(s) souhait\u00e9s. Une barre de chargement appara\u00eet alors, la r\u00e9cup\u00e9ration des cotes est termin\u00e9e lorsque la barre dispara\u00eet.\n\n![image](https://user-images.githubusercontent.com/43851883/82161583-5534cd80-989e-11ea-928d-c94c821cd873.png)\n\n\u00c0 titre informatif, toutes les cotes r\u00e9cup\u00e9r\u00e9es sont consultables depuis l'onglet \"Cotes\" de l'interface. Dans cet onglet vous pouvez ainsi facilement comparer les cotes d'un m\u00eame match entre les diff\u00e9rents bookmakers. Vous avez \u00e9galement la possibilit\u00e9 de supprimer un match que vous ne souhaitez pas prendre en compte dans les calculs futurs.\n\n![image](https://user-images.githubusercontent.com/43851883/82209315-5e10b800-990d-11ea-9b5a-db1065d316eb.png)\n\n## Exemples d'utilisation\n\nLes bonus re\u00e7us sont quasi syst\u00e9matiquement des freebets (ou paris gratuits). Un tel bonus signifie que lorsque l'on mise, par exemple, sur une cote \u00e0 3 avec un freebet de 10\u20ac, si le pari s'av\u00e8re gagnant, alors on r\u00e9cup\u00e8re 3\u00d710-10 = 20\u20ac (contre 30\u20ac pour un pari standard), cela \u00e9quivaut donc \u00e0 miser avec un pari normal sur une cote r\u00e9duite de 1.\nOn verra plus tard qu'il est possible de r\u00e9cup\u00e9rer de mani\u00e8re certaine, 80% de la valeur d'un freebet. Ainsi, un freebet de 10\u20ac \u00e9quivaut \u00e0 10 \u00d7 0.8 = 8\u20ac.\n\nLes exemples ci-dessous sont des exemples de promotions qui reviennent r\u00e9guli\u00e8rement chez les diff\u00e9rents bookmakers. Vous y trouverez une description de comment exploiter au mieux ces promotions. Bien-s\u00fbr, cette liste n'est pas exhaustive et il vous appartient d'adapter ces exemples aux conditions des promotions que vous rencontrerez \u00e0 l'avenir.\nPour chacun des exemples, vous trouverez une explication de comment rentabiliser une promotion similaire en ligne de commande ou \u00e0 l'aide de l'interface.\n\n### Exemple 1 : Bonus re\u00e7u dans tous les cas si l'on mise sur un match donn\u00e9\nFrance-pari propose tr\u00e8s souvent une promotion qui consiste \u00e0 miser un pari de 20\u20ac sur un match pr\u00e9cis de Ligue 1 \u00e0 une cote minimale de 2 pour recevoir un freebet de 5\u20ac.\nPar exemple, pour la 20e journ\u00e9e de Ligue 1 2019/2020, le match propos\u00e9 \u00e9tait Toulouse - Brest.\nIl suffit alors d'ex\u00e9cuter:\n```python\n>>> parse_competition(\"ligue 1\", \"football\") #Si non ex\u00e9cut\u00e9 pr\u00e9c\u00e9demment\n>>> best_stakes_match(\"Toulouse - Brest\", \"france_pari\", 20, 2, \"football\")\n```\nSi la plus-value minimum est sup\u00e9rieure \u00e0 5 \u00d7 0.8 = 4\u20ac, alors cette promotion est rentable et on peut r\u00e9partir nos mises telles qu'elles sont d\u00e9crites.\n\nPour effectuer ce calcul depuis l'interface, il suffit de vous rendre sur l'onglet \"Pari sur un match donn\u00e9\" et de s\u00e9lectionner les param\u00e8tres souhait\u00e9s.\n![image](https://user-images.githubusercontent.com/43851883/82214782-a1bbef80-9916-11ea-8c4e-62f8187a09b5.png)\n\n### Exemple 2 : Bonus re\u00e7u dans tous les cas si l'on mise sur un match quelconque, \u00e9ventuellement d'une comp\u00e9tition donn\u00e9e / d'un sport donn\u00e9\nS'il n'y a aucune condition sur le match \u00e0 jouer, on peut \u00e9x\u00e9cuter\n```python\n>>> parse_football()\n```\ncar, comme dit plus haut, ce sont ces matches qui vont g\u00e9n\u00e9rer le plus de rendement.\n\nSi on doit miser sur un match de NBA, on peut ex\u00e9cuter\n```python\n>>> parse_competition(\"nba\", \"basketball\")\n```\n\nSi on doit miser sur un match de tennis, on peut ex\u00e9cuter\n```python\n>>> parse_tennis()\n```\n\nOn notera par ailleurs qu'il n'est en g\u00e9n\u00e9ral pas possible de r\u00e9cup\u00e9rer les cotes de tous les matches d'un sport donn\u00e9, car cela peu \u00eatre tr\u00e8s couteux en temps d'ex\u00e9cution. Il faut donc choisir la ou les comp\u00e9tition(s) la (les) plus populaire(s) pour le sport choisi, car ce sont ces matches qui g\u00e9n\u00e8reront le plus de rendement.\nLe tableau ci-dessous indique quelle fonction appeler pour chaque sport.\n\n\n\n| Sport  | Fonction \u00e0 appeler |\n| ------------- | ------------- |\n| Football  | `parse_football()`  |\n| Basketball  | `parse_nba()` (raccourci de `parse_competition(\"nba\", \"basketball\")`)|\n| Tennis  | `parse_tennis()`  |\n| Rugby  | `parse_competitions([\"top 14\", \"champions cup\", \"six nations\"], \"rugby\")`  |\n| Hockey sur glace  | `parse_nhl()`  (raccourci de `parse_competition(\"nhl\", \"hockey-sur-glace\")`)  |\n\nUne fois votre ensemble de matches choisi, on peut alors utiliser la fonction `best_match_under_conditions`\n\nPar exemple, France-pari propose r\u00e9guli\u00e8rement une promotion qui consiste \u00e0 rembourser, en freebet, 10% des mises engag\u00e9es sur des cotes sup\u00e9rieures \u00e0 1,70 et dans une limite de 100\u20ac rembours\u00e9s. L'objectif est alors de miser 1000\u20ac afin de r\u00e9cup\u00e9rer le bonus maximal. Ainsi, si l'on suppose que la promotion se d\u00e9roule entre le 3 janvier 2020 \u00e0 minuit et le 12 janvier 2020 \u00e0 23h59, on peut ex\u00e9cuter :\n```python\n>>> best_match_under_conditions(\"france_pari\", 1.7, 1000, \"football\", \"3/1/2020\", \"0h00\", \"12/1/2020\", \"23h59\")\n```\nSi la perte affich\u00e9e est inf\u00e9rieure \u00e0 100 \u00d7 0.8 = 80\u20ac, alors cette promotion est rentable et on peut r\u00e9partir nos mises telles qu'elles sont d\u00e9crites.\n\nDepuis l'interface, cela revient \u00e0 se rendre sur l'onglet \"Pari simple\" et rentrer les param\u00e8tres ad\u00e9quats.\n![image](https://user-images.githubusercontent.com/43851883/82214951-e21b6d80-9916-11ea-8c95-2c3daf1a5b03.png)\n\n\n### Exemple 3 : Bonus re\u00e7u si au moins *n* matches gagn\u00e9s\n*Nota bene*: \u00c0 partir de cet exemple, on supposera que l'on a pr\u00e9alablement appel\u00e9 une fonction d'initialisation des matches voulus (du type `parse_...`), en fonction des besoins de la promotion.\n\nParfois, il est n\u00e9cessaire de gagner un certain nombre de paris pour recevoir un bonus. Dans ces cas-l\u00e0, il faut miser sur le m\u00eame bookmaker sur chacune des issues d'un m\u00eame match. Betclic propose par exemple parfois de recevoir 10\u20ac de freebet pour 3 paris gagn\u00e9s, de 5\u20ac chacun, mis\u00e9s sur des cotes d'au moins 1.7 et plac\u00e9s sur 3 matches diff\u00e9rents. On peut alors ex\u00e9cuter\n```python\n>>> best_match_pari_gagnant(\"betclic\", 1.7, 5, \"tennis\")\n```\nCette fonction donnera le meilleur match sur lequel parier \u00e0 un instant donn\u00e9. Si la perte affich\u00e9e est inf\u00e9rieure \u00e0 (10 \u00d7 0.8)/3, alors on peut supposer que cette promotion est rentable et on peut r\u00e9partir nos mises telles qu'elles sont d\u00e9crites. Cela constituera le premier pari gagnant. Un peu plus tard (par exemple lorsque le match en question a \u00e9t\u00e9 jou\u00e9), on peut r\u00e9it\u00e9rer ce proc\u00e9d\u00e9 afin de savoir sur quel match doit on jouer pour gagner le 2\u00e8me pari de la s\u00e9rie et ainsi de suite jusqu'\u00e0 atteindre 3 paris gagnants. \u00c0 noter, que dans ce cas pr\u00e9cis, il est n\u00e9cessaire de r\u00e9-ex\u00e9cuter la fonction `parse_tennis` une fois qu'on a gagn\u00e9 un pari, car dans le cas contraire, le r\u00e9sultat renvoy\u00e9 par la fonction `best_match_pari_gagnant` serait identique au r\u00e9sultat de l'ex\u00e9cution pr\u00e9c\u00e9dente.\n\nDepuis l'interface, il vous suffit de vous rendre sur l'onglet \"Pari gagnant\" et de rentrer les param\u00e8tres voulus.\n![image](https://user-images.githubusercontent.com/43851883/82216530-5a832e00-9919-11ea-9e62-5e0eeb10fe3d.png)\n\nUne fois le pari plac\u00e9, vous avez la possibilit\u00e9 de supprimer le match obtenu de la base de donn\u00e9es depuis l'onglet \"Cotes\".\nDe cette mani\u00e8re, vous obtienez un r\u00e9sultat diff\u00e9rent lorsque vous r\u00e9ex\u00e9cutez le calcul depuis l'onglet \"Pari gagnant\".\n![image](https://user-images.githubusercontent.com/43851883/82234278-7bf01400-9931-11ea-836b-e0a53a31deb6.png)\n\n\n### Exemple 4 : Bonus re\u00e7u si un pari est perdant.\nIl s'agit d'un type de promotion tr\u00e8s courant, notamment en ce qui concerne les offres de bienvenue, mais pas seulement.\nPar exemple, \u00e0 l'\u00e9t\u00e9 2018, Winamax proposait \u00e0 ses utilisateurs de rembourser en cash (donc pas en freebet) 100% leur premier pari de 200\u20ac maximum si celui-ci est perdant. On notera par ailleurs que sur Winamax (comme sur la plupart des autres bookmakers), on ne peut parier que sur des cotes sup\u00e9rieures (ou \u00e9gales) \u00e0 1.10. On peut alors ex\u00e9cuter\n```python\n>>> best_match_cashback(\"winamax\", 1.1, 200, \"football\", freebet=False)\n```\n\nCe calcul est \u00e9galement accessible depuis l'interface, dans l'onglet \"Cashback\".\n![image](https://user-images.githubusercontent.com/43851883/82234484-c6719080-9931-11ea-8357-191bd9f58a78.png)\n\n\n## Conversion des freebets en cash\n### M\u00e9thode 1 : Si l'on n'a que des freebets fractionnables\nChez les bookmakers suivant : Betclic, Unibet, ParionsSport et Zebet, il est possible de fractionner les freebets gagn\u00e9s en plusieurs paris. Par exemple, si l'on a gagn\u00e9 10\u20ac de freebets, il est possible de miser 8\u20ac puis 2\u20ac.\nPour optimiser le gain, l'id\u00e9e va alors \u00eatre de couvrir toutes les issues avec des freebets sur un combin\u00e9 de 2 matches de football (ce qui repr\u00e9sente donc 9 issues \u00e0 couvrir).\nPar exemple, si on dispose de 10\u20ac de freebet, on va alors ex\u00e9cuter\n```python\n>>> best_matches_freebet_one_site(\"betclic\", 10)\n```\n\n\n\n### M\u00e9thode 2 : Si l'on a quelques freebets non fractionnables et suffisamment de freebets fractionnables\nChez tous les bookmakers sauf Betclic, Unibet, ParionsSport et Zebet, il n'est pas possible de s\u00e9parer un freebet en plusieurs paris. \nSupposons que l'on dispose de 100\u20ac de freebets fractionnables sur Betclic, 1 freebet de 10\u20ac sur Winamax et 2 freebets de 5\u20ac sur France-pari. \nL'id\u00e9e serait alors de r\u00e9partir nos 100\u20ac de freebets fractionnables sur un combin\u00e9 de 2 matches comme dans la m\u00e9thode 1, puis de remplacer (totalement ou en partie) certaines mises par des freebets non fractionnables des autres bookmakers. De cette mani\u00e8re on r\u00e9partit les freebets non fractionnables sur plusieurs issues d'un combin\u00e9 et on comble les diff\u00e9rences avec des freebets fractionnables. On aura donc vraisemblablement des issues couvertes uniquement par un freebet non fractionnable, d'autres couvertes en partie par un freebet non fractionnable et un freebet fractionnable, et d'autres couvertes uniquement en freebet fractionnable. Dans cet exemple, on ex\u00e9cute alors\n```python\n>>> best_matches_freebet([\"betclic\"], [[10, \"winamax\"], [5, \"france_pari\"], [5, \"france_pari\"]])\n```\n\nDepuis l'interface, l'onglet \"Freebets \u00e0 placer\" effectue le m\u00eame calcul, on obtient alors:\n![image](https://user-images.githubusercontent.com/43851883/82235094-924a9f80-9932-11ea-95d9-e6c49d25fc00.png)\n\n\nCette deuxi\u00e8me m\u00e9thode doit, lorsqu'elle est possible, \u00eatre celle \u00e0 privil\u00e9gier lorsque l'on dispose de freebets non fractionnables car c'est elle qui offre le meilleur rendement. La premi\u00e8re m\u00e9thode est elle aussi tr\u00e8s rentable mais il est pr\u00e9f\u00e9rable de conserver les freebets fractionnables pour justement appliquer la 2e m\u00e9thode lorsque l'on disposera de freebets non fractionnables.\n\n\n\n### M\u00e9thode 3 : Si l'on dispose de freebets non fractionnables et pas assez de freebets fractionnables\nPar ailleurs, chez tous les bookmakers sauf Betclic, Unibet et Zebet, les freebets ont une date limite d'utilisation, allant de 2-3 jours pour Bwin, \u00e0 1 mois pour France-pari. Il peut donc \u00eatre n\u00e9cessaire de les jouer rapidement et il se peut \u00e9galement que l'on n'ait pas assez de freebets fractionnables pour pouvoir appliquer la 2e m\u00e9thode. Dans cette situation, il est plus efficace de parier sur un unique match plut\u00f4t que sur un combin\u00e9. Il est \u00e9galement n\u00e9cessaire de couvrir un pari en freebet avec de l'argent r\u00e9el. De plus, avec cette m\u00e9thode, on ne peut jouer qu'un freebet \u00e0 la fois. Ainsi si l'on dispose d'un freebet de 15\u20ac chez Betstars, on ex\u00e9cute alors\n```python\n>>> best_match_freebet(\"betstars\", 15, \"football\")\n```\n*Nota bene* : Ne pas confondre `best_match_freebet` et `best_matches_freebet`.\n\nOn notera par ailleurs que certains sites comme NetBet ou PMU proposent parfois des freebets qui ne sont jouables que sur un unique sport. Auquel cas, il faut adapter le sport \u00e0 la situation.\n\n\nOn peut appliquer cette m\u00e9thode depuis l'interface dans l'onglet \"Freebet unique\".\n![image](https://user-images.githubusercontent.com/43851883/82234834-3122cc00-9932-11ea-8709-6dec63176058.png)\n\n\n\nCette m\u00e9thode est en moyenne beaucoup moins rentable et beaucoup plus volatile que les deux pr\u00e9c\u00e9dentes. Les deux premi\u00e8res m\u00e9thodes assurent un taux de revient situ\u00e9 entre 77 et 85% de la somme de freebets engag\u00e9s. Avec la 3\u00e8me m\u00e9thode, il faut s'attendre \u00e0 un taux de revient situ\u00e9 entre 55 et 70%.\n\n\n## Avertissement\nCe projet a pour but d'aider l'utilisateur \u00e0 d\u00e9gager de l'argent en se rapprochant au maximum de l'absence de risque. N\u00e9anmoins, il est important de pr\u00e9ciser que le risque z\u00e9ro n'existe pas et que les cotes publi\u00e9es par les bookmakers sont destin\u00e9es \u00e0 \u00e9voluer au cours du temps. Il est donc de votre ressort de vous assurer que les informations affich\u00e9es par l'application Sports-betting sont fiables. En tant que cr\u00e9ateur, je ne pourrai, en aucun cas, \u00eatre tenu responsable de toute perte de capital survenue lors de l'utilisation \nde ce projet.\n\n### *English version*\n\n<details>\n<summary>Table of contents</summary>\n\n- [Installation](#installation)\n- [Initialization](#initialization)\n- [Examples of use](#examples-of-use)\n  * [Example 1: Bonus received in all cases if you bet on a given match](#example-1-bonus-received-in-all-cases-if-you-bet-on-a-given-match)\n  * [Example 2: Bonus received in all cases if you bet on any match, possibly from a given competition / sport](#example-2-bonus-received-in-all-cases-if-you-bet-on-any-match-possibly-from-a-given-competition--sport)\n  * [Example 3: Bonus received if at least *n* matches are won](#example-3-bonus-received-if-at-least-n-matches-are-won)\n  * [Example 4: Bonus received if a bet is lost.](#example-4-bonus-received-if-a-bet-is-lost)\n- [Converting freebets to cash](#converting-freebets-to-cash)\n  * [Method 1: If you only have fractionable freebets](#method-1-if-you-only-have-fractionable-freebets)\n  * [Method 2: If you have a few non-fractionable freebets and enough fractionable freebets](#method-2-if-you-have-a-few-non-fractionable-freebets-and-enough-fractionable-freebets)\n  * [Method 3: If you have non-fractionable freebets and not enough fractionable freebets](#method-3-if-you-have-non-fractionable-freebets-and-not-enough-fractionable-freebets)\n</details>\n\n## Installation\n- Download the repository\n- Go to the root of the repository\n```bash\npip install -r requirements.txt\n```\n- Launch python3\n```python\n>>> import sportsbetting\n>>> from sportsbetting.user_functions import *\n```\n- You can now use any function from [user_functions.py](https://github.com/pretrehr/Sports-betting/blob/master/sportsbetting/user_functions.py)\n\n\n\n## Initialization\nBefore you can fully use all the functions in the [user_functions.py](https://github.com/pretrehr/Sports-betting/blob/master/sportsbetting/user_functions.py) file, it is necessary to initialize the database of matches you can potentially bet on. For example, if you only want to focus on French Ligue 1 matches, and you only want to bet on Betclic and Winamax, you would write :\n```python\n>>> parse_competition(\"ligue 1 france\", \"football\", \"betclic\", \"winamax\")\n```\nNote that if you do not specify a bookmaker, the algorithm will retrieve the odds of the matches of the competition from most of the bookmakers approved by the ARJEL (French Regulatory authority for online games).\nIf you do not have a specific competition or target sport, it is advisable to call\n```python\n>>> parse_football()\n```\nor, for example,\n```python\n>>> parse_football(\"betclic\", \"winamax\")\n```\nThese functions will retrieve the odds of the matches available at the various bookmakers for the 5 major European football championships (Ligue 1, Premier League, LaLiga, Serie A, Bundesliga), as these competitions generally generate the highest returns.\nIt should be pointed out that in the case of tennis where there is no fixed competition, it is necessary to call the function:\n```python\n>>> parse_tennis()\n```\nor, for example,\n```python\n>>> parse_tennis(\"betclic\", \"winamax\")\n```\nThis command will retrieve the odds of tennis matches from the competitions currently being played.\n\nYou will find below a summary table of the different French bookmakers with the associated string in the package.\n\n| Bookmaker | String |\n| ------------- | ------------- |\n| [Betclic](https://www.betclic.fr/sport/) | ``\"betclic\"\" |\n| [BetStars](https://www.betstars.fr/) | ``betstars\"` |\n| [Bwin](https://sports.bwin.fr/fr/sports) | \"bwin\" |\n| [France Pari](https://www.france-pari.fr/) | `\"france_pari\"` |\n| [JOA](https://www.joa-online.fr/fr/sport) | \"joa\"` |\n| [NetBet](https://www.netbet.fr/) | `\"netbet\"` |\n| [Pariels Sport](https://www.enligne.parionssport.fdj.fr/) |\n| [PasinoBet](https://www.pasinobet.fr/) ||\"pasinobet\"` |\n| [PMU](https://paris-sportifs.pmu.fr/) |\"pmu\"` |\n| [Unibet](https://www.unibet.fr/sport) |\n| [Winamax](https://www.winamax.fr/paris-sportifs/sports/) |\n| [Zebet](https://www.zebet.fr/fr/) |\n\n*Note bene*: It is currently not possible to use the package for the following bookmakers:\n- [Feelingbet](https://feelingbet.fr/) which offers very few promotions. But if necessary, the odds available on this site are identical to those available on [France Pari](https://www.france-pari.fr/).\n- [Genybet](https://sport.genybet.fr/) which focuses more on horse betting rather than sports betting.\n- Vbet](https://www.vbet.fr/paris-sportifs) which offers numerous but very restrictive and therefore unprofitable promotions.\n\n\n## Examples of use\n\nThe bonuses received are almost always freebets (or paris gratuits). Such a bonus means that when you bet, for example, on an odds equals to 3 with a \u20ac10 freebet, if the bet turns out to be winning, then you get 3\u00d710-10 = \u20ac20 (compared to \u20ac30 for a standard bet), so it is equivalent to betting with a normal bet on an odds reduced by 1.\nWe will see later that it is possible to win back 80% of the value of a freebet with certainty. Thus, a \u20ac10 freebet is equivalent to 10 \u00d7 0.8 = \u20ac8.\n\nThe examples below are examples of promotions that regularly appear at the different bookmakers. You will find a description of how to get the most out of these promotions. This list is naturally not exhaustive and it is up to you to adapt these examples to the conditions of the promotions you will encounter in the future.\n### Example 1: Bonus received in all cases if you bet on a given match\nFrance-pari very often offers a promotion which consists in betting a \u20ac20 bet on a specific Ligue 1 match at a minimum odds of 2 to receive a \u20ac5 freebet.\nFor example, for the 20th round of Ligue 1 2019/2020, the proposed match was Dijon - Metz.\nYou just have to execute:\n```python\n>>> parse_competition(\"ligue 1\", \"football\") #If not previously executed\n>>> best_stakes_match(\"Dijon - Metz\", \"france_pari\", 20, 2, \"football\")\n```\nIf the minimum raise is more than 5 \u00d7 0.8 = \u20ac4, then this promotion is profitable and we can split our bets as specified.\n\n\n### Example 2: Bonus received in all cases if you bet on any match, possibly from a given competition / sport\nIf there are no conditions on the game to be played, we can execute\n```python\n>>> parse_football()\n```\nbecause, as mentioned above, it is these matches that will generate the most returns.\n\nIf we're betting on an NBA game, we can execute...\n```python\n>>> parse_competition(\"nba\", \"basketball\")\n```\n\nIf we're going to bet on a tennis match, we can execute\n```python\n>>> parse_tennis()\n```\n\nIt should also be noted that it is generally not possible to retrieve the odds of all the matches of a given sport, as this can be very costly in terms of execution time. It is therefore necessary to choose the most popular competition(s) for the chosen sport, as it is these matches that will generate the most returns.\nThe table below indicates which function to call for each sport.\n\n\n\n| Sport | Function to call |\n| ------------- | ------------- |\n| Football | `parse_football()` |\n| Basketball | `parse_nba()` (short for `parse_competition(\"nba\", \"basketball\")`)|\n| Tennis | `parse_tennis()` |\n| Rugby | `parse_competitions([\"top 14\", \"champions cup\", \"six nations\"], \"rugby\")` |\n| Ice Hockey | `parse_nhl()` (short for `parse_competition(\"nhl\", \"hockey-sur-glace\")`) |\n\nOnce you have chosen your set of matches, you can then use the `best_match_under_conditions` function.\n\nFor example, France-pari regularly offers a promotion which consists in reimbursing, in freebet, 10% of the stakes engaged on odds higher than 1.70 and within a limit of \u20ac100 reimbursed. The objective is then to bet \u20ac1000 in order to recover the maximum bonus. Thus, if we assume that the promotion takes place between January 3, 2020 at midnight and January 12, 2020 at 11:59 pm, we can execute :\n```python\n>>> best_match_under_conditions(\"france_pari\", 1.7, 1000, \"football\", \"3/1/2020\", \"0h00\", \"12/1/2020\", \"23h59\")\n```\nIf the displayed loss is less than 100 \u00d7 0.8 = \u20ac80, then this promotion is profitable and we can distribute our stakes as described.\n\n### Example 3: Bonus received if at least *n* matches are won\nPlease note: From this example, we'll assume that we previously called a function to initialize the desired matches (of the type `parse_...`), according to the needs of the promotion.\n\nSometimes it is necessary to win a certain number of bets to receive a bonus. In these cases, it is necessary to bet on the same bookmaker on each of the outcomes of the same match. For example, Betclic sometimes offers to receive a \u20ac10 freebet for 3 bets won, of \u20ac5 each, bet on odds of at least 1.7 and placed on 3 different matches. You can then execute\n```python\n>>> best_match_pari_gagnant(\"betclic\", 1.7, 5, \"tennis\")\n```\nThis feature will give you the best match to bet on at any given time. If the displayed loss is less than (10 \u00d7 0.8)/3, then we can assume that this promotion is profitable and we can distribute our stakes as described. This will be the first winning bet. A little later (e.g. when the match in question has been played), we can repeat this procedure to find out which match we need to play to win the 2nd bet in the series and so on until we reach 3 winning bets. Note that in this case, it is necessary to re-execute the `parse_tennis` function once you have won a bet, because otherwise the result returned by the `best_match_pari_gagnant` function would be identical to the result of the previous execution.\n\n### Example 4: Bonus received if a bet is lost.\nThis is a very common type of promotion, especially but not only for welcome offers.\nFor example, in the summer of 2018, Winamax offered its users to pay back in cash (not freebet) 100% of their first bet of \u20ac200 maximum if they lost. It should also be noted that on Winamax (as on most other bookmakers), you can only bet on odds greater than (or equal to) 1.10. You can then run\n```python\n>>> best_match_cashback(\"winamax\", 1.1, 200, \"football\", freebet=False)\n```\n\n## Converting freebets to cash\n### Method 1: If you only have fractionable freebets\nAt the following bookmakers: Betclic, Unibet, ParionsSport and Zebet, it is possible to split the won freebets into several bets. For example, if you have won \u20ac10 in freebets, you can bet \u20ac8 and then \u20ac2.\nTo optimize the win, the idea will be to cover all the outcomes with freebets on a combination of 2 football matches (which represents 9 outcomes to cover).\nFor example, if you have \u20ac10 of freebet, you will then run\n```python\n>>> best_matches_freebet_one_site(\"betclic\", 10)\n```\n\n### Method 2: If you have a few non-fractionable freebets and enough fractionable freebets\nAt all bookmakers except Betclic, Unibet, ParionsSport and Zebet, it is not possible to split a freebet into several bets. \nLet's suppose that you have \u20ac100 fractionable freebets on Betclic, 1 freebet of \u20ac10 on Winamax and 2 freebets of \u20ac5 on France-pari. \nThe idea would then be to spread our \u20ac100 of fractionable freebets over a combination of 2 games as in method 1, then replace (totally or partially) some stakes with non-fractionable freebets from other bookmakers. In this way we spread the non-fractionable freebets over several outcomes of a handset and compensate the differences with fractionable freebets. So you are likely to have some outcomes covered only by a non-fractionable freebet, others covered partly by a non-fractionable freebet and a fractionable freebet, and others covered only by a fractionable freebet. In this example, we then execute\n```python\n>>> best_matches_freebet([\"betclic\"], [[10, \"winamax\"], [5, \"france_pari\"], [5, \"france_pari\"])\n```\nThis second method should, where possible, be the preferred method when non-fractionable freebets are available, as it offers the best return. The first method is also very profitable but it is preferable to keep the fractionable freebets in order to apply the second method when you have non-fractionable freebets.\n\n### Method 3: If you have non-fractionable freebets and not enough fractionable freebets\nAt all bookmakers except Betclic, Unibet and Zebet, freebets have a time limit, ranging from 2-3 days for Bwin, to 1 month for France-pari. It may therefore be necessary to bet them quickly and there may not be enough fractionable freebets to be able to apply the 2nd method. In this situation, it is more efficient to bet on a single match rather than on a combination. It is also necessary to cover a freebet with real money. Furthermore, with this method, you can only play one freebet at a time. So if you have a \u20ac15 freebet at Betstars, then you can execute\n```python\n>>> best_match_freebet(\"betstars\", 15, \"football\")\n```\nPlease note: Be careful not to confuse `best_match_freebet` with `best_matches_freebet`.\n\nNote that some sites like NetBet or PMU sometimes offer freebets that are only playable on a single sport. In this case, you have to adapt the sport to the situation.\nThis method is on average much less profitable and much more volatile than the first two. The first two methods ensure a return rate of between 77 and 85% of the sum of freebets placed.  With the third method, a return rate between 55 and 70% is to be expected.\n\n\n## Disclaimer\nThis project aims to help the user to free up money by getting as close as possible to the absence of risk. Nevertheless, it is important to specify that zero risk does not exist and that the odds published by bookmakers are intended to evolve over time. It is therefore your responsibility to make sure that the information displayed by the Sports-betting application is reliable. As the creator, I cannot be held responsible for any loss of capital that may occur during the use of the application.\n"
    },
    {
        "repo": "/llSourcell/ChatGPT_Sports_Betting_Bot",
        "language": "Jupyter Notebook",
        "readme_contents": "# ChatGPT Sports Betting Bot\n\nThis is the code for the \"ChatGPT Sports Betting Bot\" Video by Siraj Raval on Youtube. This repository is a starter template for you to build your own sports betting bot.\n\n## Setup Instructions (easy mode)\n\nIf you just want to run a sports betting bot in the cloud without having to install any dependencies or deploy your own version, run either of the\ntwo colab notebooks below.\n\n1. [Version 1: Arbitrage Bot](https://colab.research.google.com/drive/1asMXW_1wcL0G0mcgttF955qrDah9HubF?usp=sharing)\n2. [Version 2: Deep Learning Bot](https://colab.research.google.com/drive/1DbPgAVf0D_Q_bmYM20R5zxgKsqftWjgt?usp=sharing)\n\nAnd get API keys from\n- [OpenAI](https://openai.com/api/)\n- [Twitter](https://developer.twitter.com/en/docs/twitter-api)\n- [The Odds](https://the-odds-api.com/)\n\nMake Bets with Predictions here:\n\n- [DexSport](https://dexsport.io/)\n- [Get Metamask](https://metamask.io/)\n\n\n## Setup Instructions (hard mode)\n\nIf you want to deploy your own sports betting bot and have it make predictions consistently, follow the setup instructions below to initialize your firebase app template for vercel deployment. The app still needs to fetch predictions from the python back-end and display it on the react front end, I just did it manually for the video. It also doesn't yet make bets programmatically, I have to do that manually. It was difficult for me to find a programmatic betting API.  \n\n## Credits\n\nRyankrumenacker, kyleskom, React Native Market, OpenAI, Twitter\n\n## How to use\n\n1. Download or clone this repo.\n\n2. Install dependencies.\n\n```js\nnpm install\n// or\nyarn install\n```\n\n3. Go to `src/core/config.js` and replace `FIREBASE_CONFIG` with your own firebase config.\n\n```js\nexport const FIREBASE_CONFIG = {\n  apiKey: 'xxx-yyy-zzz', // etc.\n  // rest of your firebase config\n}\n```\n\n4. Turn on **Google and Facebook Providers** inside your Firebase Project:\n   ![providers](https://storage.googleapis.com/nativeforms-labs.appspot.com/providers.png)\n\n5. **Google Sign In** configuration:\n\n   1. Follow official Expo docs on Google Sign In: https://docs.expo.io/versions/latest/sdk/google/#using-it-inside-of-the-expo-app\n   2. Go to `src/core/config.js` and replace `ANDROID_GOOGLE_CLIENT_ID` and `IOS_GOOGLE_CLIENT_ID` with your own generated IDs.\n   3. Before submitting your app to Google Play, make sure to follow these docs: https://docs.expo.io/versions/latest/sdk/google/#deploying-to-a-standalone-app-on-android\n   4. Before submitting your app to App Store, make sure to follow these docs: https://docs.expo.io/versions/latest/sdk/google/#deploying-to-a-standalone-app-on-ios\n\n6. **Facebook Login** configuration:\n\n   1. Follow official Expo docs on Facebook Login: https://docs.expo.io/versions/latest/sdk/facebook/#registering-your-app-with-facebook\n   2. Go to `app.json` and replace `facebookScheme`, `facebookAppId` and `facebookDisplayName` with your own generated IDs/names.\n\n7. Run project on iOS / Android.\n\n```js\n npm run ios // npm run android\n // or\n yarn ios // yarn android\n```\n\n## Preview\n\n![start](https://raw.githubusercontent.com/venits/react-native-market/master/assets/firebase-app-template/start.png)\n![login](https://raw.githubusercontent.com/venits/react-native-market/master/assets/firebase-app-template/login.png)\n![register](https://raw.githubusercontent.com/venits/react-native-market/master/assets/firebase-app-template/register.png)\n![forgot](https://raw.githubusercontent.com/venits/react-native-market/master/assets/firebase-app-template/forgot-password.png)\n![home](https://raw.githubusercontent.com/venits/react-native-market/master/assets/firebase-app-template/home.png)\n![drawer](https://raw.githubusercontent.com/venits/react-native-market/master/assets/firebase-app-template/drawer.png)\n![profile](https://raw.githubusercontent.com/venits/react-native-market/master/assets/firebase-app-template/profile.png)\n"
    },
    {
        "repo": "/zengm-games/zengm",
        "language": "TypeScript",
        "readme_contents": "# Basketball GM, Football GM, ZenGM Baseball, and ZenGM Hockey\n\nSingle-player sports simulation games. Make trades, set rosters, draft players,\nand try to build the next dynasty, all from within your web browser. The games\nare implemented entirely in client-side JavaScript, backed by IndexedDB.\n\nCopyright (C) ZenGM, LLC. All rights reserved.\n\nEmail: jeremy@zengm.com\n\nWebsite: <https://zengm.com/>\n\nDevelopment: <https://github.com/zengm-games/zengm>\n\nDiscussion:\n\n* <https://www.reddit.com/r/BasketballGM/>\n* <https://www.reddit.com/r/Football_GM/>\n* <https://www.reddit.com/r/ZenGMBaseball/>\n* <https://www.reddit.com/r/ZenGMHockey/>\n* <https://zengm.com/discord/>\n\n**This project is NOT open source, but it is also not completely closed. Please\nsee [LICENSE.md](LICENSE.md) for details.**\n\n## Development Info\n\nIf you just want to play the game, go to <https://zengm.com/>. Instructions\nbelow are for developers who want to run a copy locally so they can make changes\nto the code.\n\nIf you want to contribute but get stuck somewhere, please contact me! I'm happy\nto help.\n\n### License and Contributor License Agreement\n\n**This project is NOT open source, but it is also not completely closed. Please\nsee LICENSE.md for details.**\n\nIf you want to contribute code to this project, you must sign a contributor\nlicense agreement. There are separate forms for individuals and entities (such\nas corporations):\n\n* [Individual CLA](CLA-individual.md) (this is probably what you want)\n* [Entity CLA](CLA-entity.md)\n\nMake a copy of the form, fill in your information at the bottom, and send an\nemail to jeremy@zengm.com with the subject line, \"Contributor License Agreement\nfrom YOUR_NAME_HERE (GITHUB_USERNAME_HERE)\".\n\n### Step 1 - Installing\n\nMake sure you're using a recent version of [Node.js](https://nodejs.org/), older\nversions probably won't work. Then, all of the tooling used in development can\nbe set up by simply installing [Yarn 1](https://classic.yarnpkg.com/) and\nrunning:\n\n    yarn install\n\nfrom within this folder.\n\n### Step 2 - Building\n\nTo build the app along with all its assets, run\n\n    yarn run build\n\nHowever during development, you probably would rather do\n\n    yarn run start-watch\n\nwhich will start the server and watch JS and CSS files for changes and\nrecompile. This simply runs both `yarn run start` and `yarn run watch` together,\nwhich alternatively can be run separately if you wish.\n\nBy default this will build the basketball version of the game. For other sports,\nset the SPORT environment variable to \"football\", \"baseball\", or \"hockey\", like:\n\n    SPORT=football yarn run start-watch\n\nOpen `package.json` to see all available development scripts.\n\n### Step 3 - Running\n\nTo run the game locally, you need some way of running a web server to display\nthe content. There are currently two ways to do it. It doesn't matter which you\nuse as long as you can get it to run on your computer.\n\n#### 1. Node.js (easiest)\n\nRun\n\n    yarn run start\n\nand point your browser to <http://localhost:3000/>. If you use the command `yarn\nrun start-watch` from above, then running the command `yarn run start` is not\nnecessary.\n\n#### 2. Apache\n\nThe mod_rewrite rules in `.htaccess` let the game run in Apache. Everything\nshould work if you point it at the `build` folder with mod_rewrite enabled.\n\n### Step 4 - Testing\n\nTypeScript and ESLint are used to enforce some coding standards. To run them on\nthe entire codebase, run\n\n    yarn run lint\n\nIntegration and unit tests spread out through the codebase in *.test.ts files.\nCoverage is not great. They can be run from the command line with\n\n    yarn test\n\nThere is also a single end-to-end test which creates a league and simulates a\nseason. To execute the end-to-end test, run\n\n    yarn run test-e2e\n\nFor the end-to-end test, by default it is basketball. If you want it to do\nfootball, stick `SPORT=football ` in front.\n\n### Code Overview\n\nThis is a single-page app that runs almost entirely client-side by storing data\nin IndexedDB. The core of the game runs inside a Shared Worker (or a Web Worker\nin crappy browsers that don't support Shared Workers), and then each open tab\nruns only UI code that talks to the worker. The UI code is in the `src/ui`\nfolder and the core game code is in the `src/worker` folder. They communicate\nthrough the `toUI` and `toWorker` functions.\n\nThe UI is built with React and Bootstrap.\n\nIn the worker, data is ultimately stored in IndexedDB, but for performance and\ncross-browser compatibility reasons, a cache (implemented in\n`src/worker/db/Cache.ts`) sits on top of the database containing all commonly\naccessed data. The idea is that IndexedDB should only be accessed for uncommon\nsituations, like viewing stats from past seasons. For simulating games and\nviewing current data, only the cache should be necessary.\n\nThe cache is overly complicated because (1) the values it returns are mutable,\nso you better not mess with them accidentally, and (2) when you do purposely\nmutate a value (like updating a player's stats), you need to remember to always\nwrite it back to the cache manually by calling `idb.cache.*.put`.\n\nIn both the worker and UI processes, there is a global variable `self.bbgm`\nwhich gives you access to many of the internal functions of the game from\nwithin your browser.\n\n### Shared Worker Debugging\n\nAs mentioned above, the core of a game runs in a Shared Worker. This makes\ndebugging a little tricky. For instance, in Chrome, if you `console.log`\nsomething inside the Shared Worker, you won't see it in the normal JS console.\nInstead, you need to go to chrome://inspect/#workers and click \"Inspect\" under\n<http://localhost/gen/worker.js>.\n\nIn any browser, if you have two tabs open and you reload one of them, the worker\nprocess will not reload. So make sure you close all tabs except one before\nreloading if you want to see changes in the worker.\n\n### Service Worker\n\nThis only applies if you use Apache, not if you use `yarn run start`!\n\nA service worker is used for offline caching. This can make development tricky,\nbecause if you load the game in your browser, make a change, wait for\nbuild/watch to finish, and then reload... you will not see your change because\nit will cache the original version and then not update it on a reload. This is\nthe normal behavior for service workers (they only switch to a new version when\nyou actually close the website and reopen it, not on a reload), but it makes\ndevelopment annoying.\n\nTo work around that, in Chrome you can [use the \"Update on reload\" option][1]\nand keep your devtools open. Then reloading will always get you the latest\nversion.\n\nEven with that, ctrl+shift+r may be a good idea to make sure you're seeing your\nlatest changes.\n\n[1]: https://developers.google.com/web/fundamentals/primers/service-workers/lifecycle#update_on_reload\n\n### Git Workflow\n\nIf you want to contribute changes back to the project, first create a fork on\nGitHub. Then make your changes in a new branch. Confirm that the tests\n(hopefully including new ones you wrote!) and ESLint all pass. Finally, send me\na pull request.\n\nIt's also probably a good idea to create an [issue on\nGitHub](https://github.com/zengm-games/zengm/issues) before you start working\non something to keep me in the loop.\n\n## Less Important Development Info\n\n### Sport-specific stuff\n\nAbbreviations of stats should be done like basketball-reference.com and\nfootball-reference.com stat pages. For instance, \"defensive rebounds\" is \"drb\".\n\n### Thank you BrowserStack\n\nShout out to [BrowserStack](https://www.browserstack.com/) for helping with\ncross-browser testing.\n"
    },
    {
        "repo": "/CTHRU/Hitrava",
        "language": "Python",
        "readme_contents": "[![Hitrava](images/Hitrava_Logo_With_Name.png)](https://cthru.hopto.org/hitrava-web)  \n\n[![nposl3.0][shield nposl3.0]][tldrlegal nposl3.0]\n[![GitHub release (latest by date)][shield release]][latest release]\n[![GitHub Release Date][shield release date]][latest release]\n[![PayPal][shield paypal]][paypal]\n[![Buy me a coffee][shield buymeacoffee]][buymeacoffee]\n\n\n----------\n## Introduction\nHitrava converts health activities registered using a Honor or Huawei activity tracker or smartwatch in the \n[`Huawei Health`](https://play.google.com/store/apps/details?id=com.huawei.health) app into a file format that can be \ndirectly uploaded to [`Strava`](https://strava.com).\n\n----------\n### Hitrava Web\n[![Hitrava](images/Hitrava_Web_Screenshot_Small.png)](https://cthru.hopto.org/hitrava-web)  \n  \nAn alpha release of [Hitrava Web](https://cthru.hopto.org/hitrava-web) is now available. If you prefer on-line conversion in a web app with GUI over a script, \nlearn more on [https://cthru.hopto.org](https://cthru.hopto.org/hitrava-web).\n(Note: my website is not up all the time, plan your visit between 08:15 and 22:45 CET)\n\n----------\n\n## Table of Contents\n- [Introduction](#introduction)  \n    - [Hitrava Web](#Hitrava-Web)\n- [Features](#features)  \n- [Installation](#installation)  \n- [How To Convert](#how-to-convert-your-health-activities-and-import-them-in-strava)   \n  -[Windows Users](#windows-users---encrypted-zip-conversion-procedure)  \n  -[macOS / Linux / UNIX Users](#other-operating-systems-users-macos-linux-unix)  \n- [Usage](#usage)  \n    - [Command Line Arguments](#command-line-arguments-overview)  \n    - [Examples](#usage-examples)\n- [Release Notes](#release-notes)  \n- [Copyright and License](#copyright-and-license)\n\n## Features\n- Recognizes and converts the following activity types from Huawei Health to Strava:\n    - Running: both outdoor and indoor running (treadmill run)\n    - Cycling: both outdoor and indoor cycling\n    - Swimming: both pool swimming and open water swimming\n    - Walking\n    - Hiking\n    - Cross-country run\n    - Cross Trainer (Elliptical)\n    - Crossfit\n- Conversion contains generic activity information such as GPS track, distance, duration, calorie consumption (as\navailable during recording of the activity).\n- When available and depending on the activity type, conversion includes health data from your Huawei or Honor smartwatch / fitness band:\n    - Heart rate\n    - Cadence\n- Conversion is done using the centralized data from Huawei Health. In principle, any recent Huawei or Honor smartwatch\nor fitness band should be supported, if you see the data in Huawei Health, e.g. \n    - Huawei smartwatches: e.g. Huawei Watch GT2 \n    - Huawei fitness bands: e.g. Huawei Band 4, Huawei Band 4 Pro\n    - Honor smartwatches: e.g. Honor MagicWatch 2\n    - Honor fitness bands: e.g. Honor Band 4, Honor Band 5\n    \n## Installation\n### Requirements\nTo use Hitrava, you need:\n- [`Python 3.7.x`](https://www.python.org/downloads/) or higher.\n    - Python 3.7.6 is the lowest recommended version (developed and tested on this version).\n    - Python 3.5.1 is the lowest minimum required version (compatibility tested on this version). \n- A Huawei account to request your health data.\n- 7-Zip stand-alone version to convert directly from an encrypted Huawei Health ZIP file. Currently, this method is only \nsupported on Windows operating systems.\n\n### Installation Procedure\n#### Step 1 - Install Python\nOnly required if you don't have a (suitable) python installation on your system.\n- Download the latest Python version for your operating system from the [`Python website`](https://www.python.org/downloads/).\n- Run the Python installer (Windows) or follow the instructions for your operating system. \n\n#### Step 2 - Download and Extract Hitrava\n- Go to the [Releases page][latest release] to download the source code of the latest Hitrava release.\n- On the [Releases page][latest release], in the _Assets_ section, click on the _Source code (zip)_ link to download \n  the sources.\n- Save the ZIP file with the sources on your system.\n- Extract all contents of the ZIP file with the sources to a location of your choice on your system.\n\n#### Step 3 - Download and Extract Stand-alone 7-Zip\nNOTE: This step is required to convert **encrypted** Huawei Health ZIP files.\n\n- Download the latest 7-zip **stand-alone** console version from the [`7-Zip website`](https://www.7-zip.org/download.html).\nThe stand-alone version can be identified by the description below:\n> 7-Zip Extra: standalone console version, 7z DLL, Plugin for Far Manager\n- Extract the file _7za.exe_ from the downloaded archive and place it in your Hitrava installation folder from step 2 \nabove. Your Hitrava installation folder should now contain at least the following files.\n> Hitrava.py  \n> 7za.exe  \n> Run_Hitrava_Decrypt.cmd\n\n## How to convert your health activities and import them in Strava\nAll users can use conversion from a **[ZIP](#Windows-Users---Encrypted-ZIP-conversion-procedure)** file or a **[JSON](#JSON-file-conversion-example)** file.  \nFor users with rooted phones, legacy **[file](#single-file-conversion-examples)** and \n**[tar](#tar-file-conversion-examples)** options are still available.\n\n### Windows Users - Encrypted ZIP conversion procedure\nNOTE: As of late October 2020, the latest version of the Huawei Health app obliges you to provide a password with which \nyour data in the ZIP file will be encrypted. If you need to convert from an older non-encrypted ZIP file, please refer \nto the **[corresponding example](#zip-file-conversion-example)**.\n \nActivities can be mass converted using the data in a ZIP file that you can request in the Huawei Health app.\n\nThe procedure below assumes that you [installed Hitrava](#installation) and are logged in with your Huawei account in\nthe Huawei Health app. If you don't have a Huawei account, you can create one in the app.  \n\n#### Step 1 - Request your data in the Huawei Health app\n- On your phone, open the Huawei Health app.\n- Tap the **'Me'** button in the lower right-hand corner of the main screen.\n- Now tap on your account name on top of the screen.\n- Tap on **'Privacy Center'**. \n- Tap **'Request Your Data'**. \n- Select **'Health'** from the list and confirm your selection.\n- You will be obligated to enter a password to encrypt the requested data with. You will need this password later in\nstep 3 below.   \n- Follow any further in-app instructions.\n- Wait for the mail from Huawei to arrive with a link to download the data (ZIP file). \n\n#### Step 2 - Download your requested data\n- In the mail from Huawei, click on the link to download your data and follow the instructions.\n- Put (a copy of) the downloaded ZIP file in the Hitrava installation folder and rename it to _HiZip.zip_. \n\n#### Step 3 - Convert the data with Hitrava\n\n>**Tip**: If you're on Windows, and you're not familiar with the Command Prompt or just want to do a quick\n> conversion with default arguments, you can use the _Run_Hitrava_Decrypt.cmd_ batch file.\n>- Open the _Run_Hitrava_Decrypt.cmd_ file with a text editor and change the password 123456 to the password you \n>provided in step 2 above. \n>- double-click the _Run_Hitrava_Decrypt.cmd_ file in the installation folder of Hitrava.  \n> This will convert all available activities in the ZIP file from the previous step.                                                                                                                   \n\n- Open a Command Prompt and change the directory to the installation folder of Hitrava.\n- In the Command Prompt, run Hitrava.py with the --zip command line argument. You can start from the default example \ncommand below or [add / change command line arguments](#command-line-arguments-overview) as you need.  \n\n**IMPORTANT**: You must replace the password 123456 with the password you provided in step 2 above.\n  ```\n  Hitrava.py --zip HiZip.zip --password 123456 --json_export\n  ```\n  The above command will generate both the original HiTrack files and the converted TCX files for ALL activities to the\n  _output_ subfolder of the Hitrava installation folder. In this folder:\n  - Files without an extension are the Huawei HiTrack files which contain the raw unconverted data of an activity. \n  - Files with the _.json_ extension represent an exported copy of the JSON data of a single activity. \n  - Files with the **_.tcx_** extension are the **converted files** suitable for upload to Strava.\n\n#### Step 4 - Upload your data to Strava\nYou can now go to the Strava website to import your data.\n- Go to the **[`'Upload and Sync Your Activities'`](https://www.strava.com/upload/select)** page on Strava. \n- Log in with your Strava account. \n- Once logged in, use the **'Browse...'** button on the page and select the converted TCX files (with the _.tcx_ \nextension, up to 25 at once) to upload. \n\n### Other Operating Systems Users (macOS, Linux, UNIX)\n#### Step 1 - Request your data\nFollow the same procedure as for Windows users explained [above](#step-1---request-your-data-in-the-huawei-health-app).\n\n#### Step 2 - Download and extract your data\n- In the mail from Huawei, click on the link to download your data and follow the instructions.\n- Extract the following file from the downloaded ZIP file using an unzip tool for your operating system that supports\n AES encrypted ZIP files.\n  > Motion path detail data & description/motion path detail data.json\n- Put (a copy of) the extracted file in the Hitrava installation folder and rename it to HiJson.json.\n\n#### Step 3 - Convert the JSON file with Hitrava\n- Open a Terminal window and change the directory to the installation folder of Hitrava.\n- In the terminal Prompt, run Hitrava.py with the --json command line argument. You can start from the default example\n  command below or [add / change command line arguments](#command-line-arguments-overview) as you need.\n  ```\n  python3 Hitrava.py --json HiJson.json --json_export\n  ```\n  The above command will generate both the original HiTrack files and the converted TCX files for ALL activities to the\n  _output_ subfolder of the Hitrava installation folder. In this folder:\n  - Files without an extension are the Huawei HiTrack files which contain the raw unconverted data of an activity.\n  - Files with the _.json_ extension represent an exported copy of the JSON data of a single activity.\n  - Files with the **_.tcx_** extension are the **converted files** suitable for upload to Strava.\n\n#### Step 4 - Upload your data\nFollow the same procedure as for Windows users explained [above](#step-4---upload-your-data-to-strava).\n\n## Usage\n### Command Line Arguments Overview\n```\nusage: Hitrava.py [-h] [-z ZIP] [-p PASSWORD] [-j JSON] [--json_export] [-f FILE]\n                  [-s {Walk,Run,Cycle,Swim_Pool,Swim_Open_Water}] [-t TAR]\n                  [--from_date FROM_DATE] [--pool_length POOL_LENGTH]\n                  [--tcx_insert_altitude_data] [--output_dir OUTPUT_DIR]\n                  [--use_original_filename]\n                  [--output_file_prefix OUTPUT_FILE_PREFIX]\n                  [--suppress_output_file_sequence] [--validate_xml]\n                  [--log_level {INFO,DEBUG}]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --log_level {INFO,DEBUG}\n                        Set the logging level.\n\nJSON options:\n  -z ZIP, --zip ZIP     The filename of the Huawei Cloud ZIP file containing\n                        the JSON file with the motion path detail data to\n                        convert. The JSON file will be extracted to the\n                        directory in the --output_dir argument and conversion\n                        will be performed.\n  -p PASSWORD, --password PASSWORD\n                        The password of the encrypted Huawei Cloud ZIP file.\n                        Required for encrypted ZIP files only.\n  -j JSON, --json JSON  The filename of a Huawei Cloud JSON file containing\n                        the motion path detail data to convert or the filename\n                        of the Huawei Cloud ZIP file containing the JSON file\n                        with the motion path detail data (this will work\n                        identical to --zip argument above).\n  --json_export         Exports a file with the JSON data of each single\n                        activity that is converted from the JSON file in the\n                        --json argument. The file will be exported to the\n                        directory in the --output_dir argument with a .json\n                        file extension. The exported file can be reused in the\n                        --json argument to e.g. run the conversion again for\n                        the JSON activity or for debugging purposes.\n\nFILE options:\n  -f FILE, --file FILE  The filename of a single HiTrack file to convert.\n  -s {Walk,Run,Cycle,Swim_Pool,Swim_Open_Water}, --sport {Walk,Run,Cycle,Swim_Pool,Swim_Open_Water}\n                        Force sport for the conversion. Sport will be auto-\n                        detected when this option is not used.\n\nTAR options:\n  -t TAR, --tar TAR     The filename of an (unencrypted) tarball with HiTrack\n                        files to convert.\n\nDATE options:\n  --from_date FROM_DATE\n                        Applicable to --json and --tar options only. Only\n                        convert HiTrack information from the JSON file or from\n                        HiTrack files in the tarball if the activity started\n                        on FROM_DATE or later. Format YYYY-MM-DD\n\nSWIM options:\n  --pool_length POOL_LENGTH\n                        The pool length in meters to use for swimming\n                        activities. If the option is not set, the estimated\n                        pool length derived from the available speed data in\n                        the HiTrack file will be used. Note that the available\n                        speed data has a minimum resolution of 1 dm/s.\n\nTCX options:\n  --tcx_insert_altitude_data\n                        When an activity has altitude information, inserts the\n                        last known altitude in every track point of the\n                        generated TCX file.\n  --tcx_use_raw_distance_data\n                        In JSON or ZIP mode, when using this option the\n                        converted TCX files will use the raw distance data as\n                        calculated from the raw HiTrack data. When not\n                        specified (default), all distances in the TCX files\n                        will be normalized to match the original Huawei\n                        distance.\n\nOUTPUT options:\n  --output_dir OUTPUT_DIR\n                        The path to the directory to store the output files.\n                        The default directory is ./output.\n  --use_original_filename\n                        In single FILE or TAR mode, when using this option the\n                        converted TCX files will have the same filename as the\n                        original input file (except from the file extension).\n  --output_file_prefix OUTPUT_FILE_PREFIX\n                        Adds the strftime representation of this argument as a\n                        prefix to the generated TCX XML file(s). E.g. use\n                        %Y-%m-%d- to add human readable year-month-day\n                        information in the name of the generated TCX file.\n  --suppress_output_file_sequence\n                        Suppresses the sequence number suffix in the filenames\n                        of converted TCX files when converting activities in\n                        ZIP or JSON mode.\n  --validate_xml        Validate generated TCX XML file(s). NOTE: requires\n                        xmlschema library and an internet connection to\n                        retrieve the TCX XSD.\n```\n                        \n### Usage Examples\n#### Encrypted ZIP file conversion example\nUse the command below to convert all activities available in the **encrypted** ZIP file with the Huawei \nPrivacy data (here with filename _HiZip.zip_) that were started on October, 3rd, 2019 or later.  \nThe ZIP file was encrypted with password 123456 provided in the Huawei Health app.  \nThe following files will be generated in folder _./my_output_dir_:  \n- JSON files with the raw JSON data of a single activity (_.json_ file extension).\n- HiTrack files with the unconverted source data of a single activity (no extension, filenames start with _HiTrack__).\n- Converted TCX files for upload to Strava (_.tcx_ file extension).\n \n```\n python Hitrava.py --zip HiZip.zip --password 123456 --json_export --from_date 2019-10-03 --output_dir my_output_dir\n```\n\n#### ZIP file conversion example\nUse the command below to convert all activities available in the ZIP file with the Huawei \nPrivacy data (here with filename _HiZip.zip_) that were started on October, 3rd, 2019 or later. The following files will\nbe generated in folder _./my_output_dir_:  \n- JSON files with the raw JSON data of a single activity (_.json_ file extension).\n- HiTrack files with the unconverted source data of a single activity (no extension, filenames start with _HiTrack__).\n- Converted TCX files for upload to Strava (_.tcx_ file extension).\n \n```\n python Hitrava.py --zip HiZip.zip --json_export --from_date 2019-10-03 --output_dir my_output_dir\n```\n\n#### JSON file conversion example\nUse the command below to convert all activities available in the motion path JSON file from the requested Huawei \nPrivacy data that were started on October, 3rd, 2019 or later. Source HiTrack files and converted TCX files will be \ngenerated in folder _./my_output_dir/json_ \n```\n python Hitrava.py --json \"motion path detail data.json\" --from_date 2019-10-03 --output_dir my_output_dir/json\n```\nSame as above, but also create an additional export file for each converted activity containing the raw JSON data of\nthat activity from the motion path JSON file.\n``` \npython Hitrava.py --json \"motion path detail data.json\" --json_export --from_date 2019-10-03 --output_dir my_output_dir/json\n```\n\n#### Single file conversion examples\nThe example below converts extracted file HiTrack_12345678901212345678912 to HiTrack_12345678901212345678912.tcx in \nthe ./output directory\n```\npython Hitrava.py --file HiTrack_12345678901212345678912\n```\nThe next example converts extracted file HiTrack_12345678901212345678912 to HiTrack_12345678901212345678912.tcx in \nthe _./my_output_dir_ directory. The program logging level is set to display debug messages. The converted file is \nvalidated against the TCX XSD schema (requires xmlschema library and an internet connection). \n```\npython Hitrava.py --file HiTrack_12345678901212345678912 --output_dir my_output_dir --validate_xml --log_level DEBUG\n```\nThe following example converts an extracted file HiTrack_12345678901212345678912 to HiTrack_12345678901212345678912.tcx \nin the _./output_ directory and forces the sport to 'walking'. \n```\npython Hitrava.py --file HiTrack_12345678901212345678912 --sport Walk\n```\nThe next example converts an indoor swimming activity in an extracted file HiTrack_12345678901212345678912 to \nHiTrack_12345678901212345678912.tcx. The length of the pool in meters is specified to have a more accurate swimming data\ncalculation.  \n```\npython Hitrava.py --file HiTrack_12345678901212345678912 --pool_length 25\n```\n \n#### Tar file conversion examples\nThe first example extracts and converts any HiTrack file found in tar file com.huawei.health.tar into the _./output_ \ndirectory. The output directory will contain both the extracted HiTrack file and the converted TCX XML file. \n```\npython Hitrava.py --tar com.huawei.health.tar\n```\nIn the example below, only activities in the com.huawei.health.tar tarball that were started on August 20th, 2019 or \nlater will be extracted and converted to the _./output_ directory.\n```\npython Hitrava.py --tar com.huawei.health.tar --from_date 2019-08-20\n```\n  \n## Release Notes\nFor a full changelog of all versions, please look in [`CHANGELOG.md`](./CHANGELOG.md).\n\n## Copyright and License\n[![nposl3.0][shield nposl3.0]][tldrlegal nposl3.0]  \n\nCopyright (c) 2019-2023 Christoph Vanthuyne\n\nLicensed under the Non-Profit Open Software License version 3.0 from Hitrava version 3.1.1 onward.  \n\nRead the full license information [`here`](./LICENSE.md).\n\nIf you're more into a TL;DR approach, start [`here`][tldrlegal nposl3.0].\n\n[shield nposl3.0]: https://img.shields.io/badge/license-nposl--3.0-blue\n[tldrlegal nposl3.0]: https://tldrlegal.com/license/non-profit-open-software-license-3.0-(nposl-3.0)\n[nposl3.0]: https://opensource.org/licenses/NPOSL-3.0\n[shield release]: https://img.shields.io/github/v/release/CTHRU/Hitrava?color=orange\n[shield release date]: https://img.shields.io/github/release-date/CTHRU/Hitrava?color=orange\n[latest release]: https://github.com/CTHRU/Hitrava/releases/latest\n[shield buymeacoffee]: https://www.buymeacoffee.com/assets/img/guidelines/download-assets-sm-2.svg\n[buymeacoffee]: https://www.buymeacoffee.com/CTHRU\n[shield paypal]: https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif\n[paypal]: https://www.paypal.com/donate/?hosted_button_id=SSSHR299GZEKQ\n"
    },
    {
        "repo": "/mov-cli/mov-cli",
        "language": "Python",
        "readme_contents": "\n<!-- Improved compatibility of back to top link: See: https://github.com/othneildrew/Best-README-Template/pull/73 -->\n<a name=\"readme-top\"></a>\n<!--\n*** Thanks for checking out the Best-README-Template. If you have a suggestion\n*** that would make this better, please fork the repo and create a pull request\n*** or simply open an issue with the tag \"enhancement\".\n*** Don't forget to give the project a star!\n*** Thanks again! Now go create something AMAZING! :D\n-->\n\n\n\n<!-- PROJECT SHIELDS -->\n<!--\n*** I'm using markdown \"reference style\" links for readability.\n*** Reference links are enclosed in brackets [ ] instead of parentheses ( ).\n*** See the bottom of this document for the declaration of the reference variables\n*** for contributors-url, forks-url, etc. This is an optional, concise syntax you may use.\n*** https://www.markdownguide.org/basic-syntax/#reference-style-links\n-->\n[![Stargazers][stars-shield]][stars-url]\n[![Issues][issues-shield]][issues-url]\n[![MIT License][license-shield]][license-url]\n\n\n<!-- PROJECT LOGO -->\n<br />\n<div align=\"center\">\n  <a href=\"https://github.com/mov-cli/mov-cli\">\n    <img src=\"https://github.com/mov-cli/mov-cli/assets/132799819/a23bec13-881d-41b9-b596-b31c6698b89e\" alt=\"Logo\" width=\"80\" height=\"80\">\n  </a>\n\n  <p align=\"center\">\n    A cli tool to browse and watch Movies/Shows/TV/Sports. \n    <br />\n    <br />\n    <a href=\"https://github.com/mov-cli/mov-cli/issues\">Report Bug</a>\n    \u00b7\n    <a href=\"https://github.com/mov-cli/mov-cli/issues\">Request Feature</a>\n  </p>\n</div>\n\n<!-- TABLE OF CONTENTS -->\n### Table of Contents\n<ol>\n  <li>\n    <a href=\"#about-the-project\">About The Project</a>\n  </li>\n  <li>\n    <a href=\"#getting-started\">Getting Started</a>\n    <ul>\n      <li><a href=\"#prerequisites\">Prerequisites</a></li>\n      <li><a href=\"#installation\">Installation</a></li>\n      <ul>\n        <li><a href=\"#windows--linux\">Windows / Linux</a></li>\n        <li><a href=\"#linux\">Linux Builds</a></li>\n        <li><a href=\"#android\">Android</a></li>\n        <li><a href=\"#ios\">iOS</a></li>\n      </ul>\n    </ul>\n  </li>\n  <li><a href=\"#usage\">Usage</a></li>\n  <li><a href=\"#disclaimer\">Disclaimer</a></li>\n  <li><a href=\"#contributing\">Contributing</a></li>\n  <li><a href=\"#contact\">Contact</a></li>\n  <li><a href=\"#inspiration\">inspiration</a></li>\n</ol>\n\n\n<!-- ABOUT THE PROJECT -->\n## About The Project\n\nThe new and improved mov-cli is here.\n\nmov-cli is a Commandline Tool to watch and download shows and movies.\n\nShows and Movies are sourced from Streaming Sites.\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p\n\n<!-- GETTING STARTED -->\n## Getting Started\n\n\n\n### Prerequisites\n\n- [`mpv`](https://mpv.io) - player used for Windows, Linux and Android\n- [`iina`](https://iina.io) - player used for MacOS\n- [`Outplayer`](https://outplayer.app/) - player used for iOS\n- [`ffmpeg`](https://github.com/FFmpeg/FFmpeg) - For downloads \n- [`fzf`](https://github.com/junegunn/fzf) - The selection Menu\n\n\n## Installation\n<!-- WIN AND LINUX -->\n### Windows / Linux\n  - Run this Command inside your Terminal\n    ``` \n    pip install mov-cli\n    ```\n  - Optional \n    ```\n    pip install lxml\n    ```\n<!-- LINUX -->\n### Linux\nThere are MPR and AUR Builds.\n\n- [MPR Build](https://mpr.makedeb.org/packages/mov-cli)\n- [AUR Build](https://aur.archlinux.org/packages/mov-cli-git)\n\n#### Disclaimer: They are not maintained by us.\n\n\n<!-- ANDROID --> \n### Android               \n  - Make sure [MPV](https://play.google.com/store/apps/details?id=is.xyz.mpv) and [Termux](https://play.google.com/store/apps/details?id=com.termux) are installed.\n  \n  - Install ``mov-cli``.\n    ```\n    pip install mov-cli\n    ```\n  \n  - Optional\n    ```\n    apt-get install libxml2 libxslt\n    pip install lxml\n    ```\n\n\n<!-- IOS -->\n### iOS\n  - Make sure [Outplayer](https://apps.apple.com/us/app/outplayer/id1449923287) and [iSH](https://apps.apple.com/us/app/ish-shell/id1436902243) are installed.\n\n  - Run following commands (Note: this may take a while)\n    ```\n    apk update && apk upgrade\n    apk add python3 fzf\n    python3 -m ensurepip\n    mkdir /home/root && mkdir /home/root/.config\n    pip3 install mov-cli\n    ```\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n\n\n<!-- USAGE EXAMPLES -->\n## Usage\n\nType: ```mov-cli``` into your Commandline.\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n\n<!-- DISCLAIMER -->\n## Disclaimer\n\nThis project is to be used at the user\u2019s own risk, based on their government and laws.\n\nThis project has no control on the content it is serving, using copyrighted content from the providers is not going to be accounted for by the developer. It is the user\u2019s own risk.\n\n[More on That](https://github.com/mov-cli/mov-cli/blob/v3/disclaimer.org)\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n<!-- Feature -->\n## Feature\n\nIf you want a feature, create an [issue](https://github.com/mov-cli/mov-cli/issues/new) or create the feature and make a pull request.\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n<!-- CONTRIBUTING -->\n## Contributing\n\n\nPull requests are welcome and _appreciated_. For major changes, please open an issue first to discuss what you would like to change.\n\nContributors:\n\n<a href = \"https://github.com/mov-cli/mov-cli/graphs/contributors\">\n  <img src = \"https://contrib.rocks/image?repo=mov-cli/mov-cli\"/>\n</a>\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n\n<!-- CONTACT -->\n## Contact\n\nAuthor: Poseidon444 | ```Discord: pain444```\n\nMaintainer: HLOAnanas | ```Discord: r3tr0ananas```\n\nProject Link: [https://github.com/mov-cli/mov-cli](https://github.com/mov-cli/mov-cli)\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n<!-- Inspiration -->\n## Inspiration\n\nHeavily inspired from [ani-cli](https://github.com/pystardust/ani-cli)\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n\n\n<!-- MARKDOWN LINKS & IMAGES -->\n<!-- https://www.markdownguide.org/basic-syntax/#reference-style-links -->\n[contributors-shield]: https://img.shields.io/github/contributors/mov-cli/mov-cli.svg?style=for-the-badge\n[contributors-url]: https://github.com/mov-cli/mov-cli/graphs/contributors\n[forks-shield]: https://img.shields.io/github/forks/mov-cli/mov-cli.svg?style=for-the-badge\n[forks-url]: https://github.com/mov-cli/mov-cli/network/members\n[stars-shield]: https://img.shields.io/github/stars/mov-cli/mov-cli.svg?style=for-the-badge\n[stars-url]: https://github.com/mov-cli/mov-cli/stargazers\n[issues-shield]: https://img.shields.io/github/issues/mov-cli/mov-cli.svg?style=for-the-badge\n[issues-url]: https://github.com/mov-cli/mov-cli/issues\n[license-shield]: https://img.shields.io/github/license/mov-cli/mov-cli.svg?style=for-the-badge\n[license-url]: https://github.com/mov-cli/mov-cli/blob/master/LICENSE.txt\n"
    },
    {
        "repo": "/gtoderici/sports-1m-dataset",
        "language": null,
        "readme_contents": "The YouTube Sports-1M Dataset\n-----------------------------\n\nWe provide links to 1,133,158 YouTube videos annotated with 487 sports labels.\nThe annotations were generated automatically using the the YouTube Topics,\nwhich has a public API accessible at:\n\nhttps://developers.google.com/youtube/v3/guides/searching_by_topic\n\nCompression: in order to save space, we compressed all the text files referenced\nbelow via gzip. To decompress run gzip -d <filename.gz> in order to obtain the\noriginal filename that we refer to below.\n\nThe files included in this package are:\n\noriginal/test_partition.txt - this contains the testing partition.\noriginal/train_partition.txt - this contains the training partition.\n\nThe format for the training/testing partitions is as follows:\nURL<space><CSV of Label Indices>\n\nFor example, the following line is a valid input:\nhttps://www.youtube.com/watch?v=UDqivjS-lpI 168,169\n\nThis assigns labels 168, and 169 to the video found at given URL.\n\nlabels.txt - this file contains the human-readable labels for the train/test\npartitions. The first line in the file is assumed to correspond to label 0\n(boomerang), and the last corresponds to index 486 (model aircraft).\n\nsports_mids.txt - this file  contains the Machine IDs necessary to retrieve\nvideos from youtube.com via the topics search API. Each line contains the\nhuman-readable class name, and the YouTube topic ID, which may be used to\ndirectly retrieve videos for the given class using the API below:\n\nhttps://developers.google.com/youtube/v3/guides/searching_by_topic\n\nExtra files:\ncross-validation/all_urls.txt - all URLs and labels bundled together (good\nstarting point if you want to make cross-validation partitions). The format is\nas explained above.\n\ncross-validation/sportsX_train.txt & cross-validation/sportsX_test.txt for X\nhaving values from 0 to 9. These are partitions for 10-fold cross-validation.\nSince a video may have more than one label, it may appear both in training and\nin testing. For example, video ABPsSSS2uY0 appears in fold 0 with class 49 for\ntraining and class 26 for testing.\n\nAdditional Information\n----------------------\n\nWiki page: https://github.com/gtoderici/sports-1m-dataset/blob/wiki/ProjectHome.md\n\nCitation: \n@inproceedings{KarpathyCVPR14,\n  title     = {Large-scale Video Classification with Convolutional Neural Networks},\n  author    = {Andrej Karpathy and George Toderici and Sanketh Shetty and Thomas Leung and Rahul Sukthankar and Li Fei-Fei},\n  year      = {2014},\n  booktitle = {CVPR}\n}\n\nSupplemental materials:\nhttp://cs.stanford.edu/people/karpathy/deepvideo/\n\nLicense\n-------\n\nThis data set is made available under a Creative Commons License:\n  http://creativecommons.org/licenses/by/3.0/\n\nAttribution 3.0 Unported (CC BY 3.0) Human-Readable Summary\n===========================================================\n\nYou are free:\n - to Share -- to copy, distribute and transmit the work;\n - to Remix -- to adapt the work;\nand to make commercial use of the work.\n\n\nUnder the following conditions:\n\n* Attribution -- You must attribute the work in the manner specified\nby the author or licensor (but not in any way that suggests that\nthey endorse you or your use of the work).\n\n\nWith the understanding that:\n\n* Waiver -- Any of the above conditions can be waived if you get\npermission from the copyright holder.\n\n* Public Domain -- Where the work or any of its elements is in\nthe public domain under applicable law, the status is in no way\naffected by the license.\n\n* Other Rights -- In no way are any of the following rights\naffected by the license:\n\n - Your fair dealing or fair use rights, or other applicable\ncopyright exceptions and limitations;\n\n - The author's moral rights;\n\n - Rights other persons may have either in the work itself or\nin how the work is used, such as publicity or privacy rights.\n\n* Notice -- For any reuse or distribution, you must make clear\nto others the license terms of this work.  The best way to do\nthis is with a link to this web page:\n  http://creativecommons.org/licenses/by/3.0/\n"
    },
    {
        "repo": "/dsxNiubility/SXFiveScoreShow",
        "language": "Objective-C",
        "readme_contents": "# SXFiveScoreShow\n\u5b9e\u73b0\u7c7b\u4f3c\u4e8e\u5b9e\u51b5\u8db3\u7403\u91cc\u7403\u5458\u4e94\u9879\u80fd\u529b\u503c\u5c55\u793a\u7684\u4e94\u8fb9\u5f62\u3002\n\n---\n\n>\u8fd9\u4e2a\u7a0b\u5e8f\u662f\u5173\u4e8e\u7ed8\u5236\u56fe\u8868\u7684\u3002\u4f20\u5165\u4e94\u4e2a\u53c2\u6570\u503c0~5.0\uff0c\u4f1a\u6839\u636e\u6bd4\u4f8b\u8ba1\u7b97\u5e76\u7ed8\u5236\u51fa\u4e94\u8fb9\u5f62\u7684\u6548\u679c\u56fe\uff0c\u5e76\u4e14\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u6bd4\u8f83\u503c\u7ed8\u5236\u51fa\u53e6\u4e00\u4e2a\u6548\u679c\u56fe\uff08\u7eff\u8272\u56fe\uff09\u4e0e\u81ea\u5df1\u7684\u5206\u6570\u6bd4\u8f83\uff0c\u4e5f\u8bbe\u7f6e\u4e86\u52a8\u753b\u6269\u5f20\u6548\u679c\uff0c\u89c6\u89c9\u6548\u679c\u66f4\u597d\u3002\u7528\u6237\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\u5730\u65b9\u5f88\u591a\uff0c\u73b0\u5df2\u63d0\u4f9b\u4e09\u79cd\u7ef4\u5ea6\uff0c\u6839\u636e\u4f60\u60f3\u4f20\u51e0\u4e2a\u503c\u6765\u5224\u65ad\u753b\u4e09\u89d2\u5f62\uff0c\u56db\u8fb9\u5f62\u8fd8\u662f\u4e94\u8fb9\u5f62\u3002\n\n![image](https://github.com/dsxNiubility/SXFiveScoreShow/raw/master/screenshots/five1.png)\n\n\u9996\u9875\u7684demo\u793a\u4f8b\u7a0b\u5e8f\uff0c\u81ea\u5df1\u642d\u5efa\u4e86\u4e00\u4e2a\u8f83\u4e3a\u5b8c\u6574\u7684\u793a\u4f8b\uff0c\u4e00\u822c\u5f15\u7528\u4e86\u672c\u7b2c\u4e09\u65b9\u5e93\u6700\u7ec8\u5927\u81f4\u53ef\u4ee5\u5f04\u6210\u8fd9\u6837\u3002\n#### \u4e24\u79cd\u6837\u5f0f\n\u5185\u90e8\u63d0\u4f9b\u4e86\u53ef\u8bbe\u7f6e\u7684\u5c5e\u6027\uff0c\u901a\u8fc7\u63a7\u5236showType\u4e3a1\u6216\u662f2\u53ef\u4ee5\u4f7f\u4e94\u8fb9\u5f62\u663e\u793a\u6210\u5b9e\u8272\u6216\u8fb9\u6846\u3002\n\n#### \u4e09\u79cd\u7ef4\u5ea6\n\n![image](https://github.com/dsxNiubility/SXFiveScoreShow/raw/master/screenshots/five2.png)\n\n\u793a\u4f8b\u7a0b\u5e8f\u4e2d\u662f\uff0c\u7b2c\u4e00\u4e2a\u9875\u9762\u7ed9\u4e94\u4e2a\u7ef4\u5ea6\u7684\u5206\u6570\uff0c\u548c\u4e94\u4e2a\u7ef4\u5ea6\u7684\u5bf9\u6bd4\u5206\u6570\u90fd\u4f20\u4e86\u503c\uff0c\u7ef4\u5ea6\u4e94\u5c31\u662f\u7528\u8fd9\u4f20\u8fdb\u6765\u7684\u503c\u7ed8\u5236\u7684\uff08\u4f20\u5165\u7684\u662f\u4e00\u4e2a\u6570\u7ec4\uff09\u3002\u7136\u540e\u7ef4\u5ea6\u4e09\u548c\u7ef4\u5ea6\u56db\u90fd\u662f\u53d6\u4e86\u524d\u9762\u7684\u4e09\u4e2a\u503c\u548c\u56db\u4e2a\u503c\u7ed8\u5236\u51fa\u56fe\u3002\n\n#### \u4f7f\u7528\u65b9\u6cd5\uff1a\n\t1.\u5c06\u4ee3\u7801\u4e2dresource\u6587\u4ef6\u5939\u4e2d\u7684SXFiveScore\u62d6\u5165\u9879\u76ee\u4e2d\n\t2.\u5f15\u5165\u4e3b\u5934\u6587\u4ef6#import \"SXFiveScoreCell.h\"\n\t3.\u6709\u4e24\u79cd\u4f7f\u7528\u65b9\u6cd5\uff0c\u4e00\u79cd\u662f\u7528SXFiveScoreCell\u52a0\u5728tableView\u4e2d\u6765\u5c55\u793a\uff0c\u4e00\u79cd\u662f\u76f4\u63a5\u5c06\tSXAnimateView\u52a0\u5728ViewController\u4e2d\u663e\u793a\u3002\u4f46\u6682\u65f6\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u5c01\u88c5\u7684\u8fd8\u4e0d\u662f\u5f88\u5b8c\u5584\uff0c\u6682\u65f6\u5efa\u8bae\u7b2c\u4e00\u79cd\u3002\n\t4.\u5728tableView\u7684\u6570\u636e\u6e90\u65b9\u6cd5\u4e2d \u4f7f\u7528SXFiveScoreCell\u7c7b\u6765\u521b\u5efacell\u3002\n\t5.\u83b7\u5f97\u6570\u636e\uff0c\u53ef\u4ee5\u662f\u8fd9\u4e2a\u9875\u9762\u53d1\u8bf7\u6c42\u5f97\u5230\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u524d\u4e00\u4e2a\u9875\u9762\u4f20\u5f97\uff0c\u603b\u4e4b\u8981\u5f97\u52303~5\u4e2a0~5.0\u4e4b\u95f4\u6570\u503c\uff0c\u5e76\u6574\u5408\u6210\u4e00\u4e2a\u6570\u7ec4\u3002\uff08\u5982\u679c\u60f3\u8981\u8bbe\u7f6e\u5bf9\u6bd4view\u90a3\u5c31\u8981\u5199\u4e24\u4e2a\u6570\u7ec4\uff09\n\t6.\u7136\u540e\u4e3acell\u7684\u4e24\u4e2a\u6210\u5458\u53d8\u91cf\u4f20\u503c \n        cell.scores = mScoreArray;\n        cell.compareScores = mCompareArray;\n        \uff08\u73b0\u5728\u5c31\u9ed8\u8ba4\u4e86\u4e3b\u8981\u5206\u6570\u662f\u6854\u8272\uff0c\u5bf9\u6bd4\u5206\u6570\u662f\u7eff\u8272\uff0c\u540e\u7eed\u4f1a\u628a\u989c\u8272\u7684\u63a5\u53e3\u5f00\u653e\u5230\u524d\u9762\u53ef\u4ee5\u81ea\u884c\u8bbe\u7f6e\uff09\n\t7.\u5982\u679c\u60f3\u8981\u8bbe\u7f6e\u8fdb\u5165\u9875\u9762\u540e\u81ea\u52a8\u4ea7\u751f\u52a8\u753b\uff0c\u53ef\u53c2\u89c1demo\u4e2d\u4f7f\u7528\u6210\u5458\u53d8\u91cf\u5e76\u5728viewdidappear\u4e2d\u63a7\u5236\u7684\u65b9\u6cd5\u3002"
    },
    {
        "repo": "/andrewcooke/choochoo",
        "language": "Python",
        "readme_contents": "\n# Choochoo (ch2)\n\nAn **open**, **hackable** and **free** training diary.\n\nOriginally I hoped that anyone could run this code by installing a Python\npackage.  When it became clear that was too complex and error-prone I moved to\na Docker image.  However, the Docker approach is also complex (and growing in\ncomplexity - currently it requires three Docker images running in parallel) so\nI am now looking at web hosting (for paid use to cover costs).\n\nAs a consequence of all this, the [install and startup\ninstructions](https://andrewcooke.github.io/choochoo/) are limited and, for a\ntime (until plans change or I get web hosting working), this project will be\nmore difficult to use.  I'm sorry about this, but it's clearly not sustainable\nin its current form.  Hopefully it will continue to evolve until it reaches a\nmore useful state.\n\n[![web diary](docs/teasers/web-diary-sq.png)](docs/teasers/web-diary.png)\n[![jupyter details](docs/teasers/jupyter-details-sq.png)](docs/teasers/jupyter-details.png)\n[![web kit statistics](docs/teasers/web-kit-statistics-sq.png)](docs/teasers/web-kit-statistics.png)\n[![jupyter calendar](docs/teasers/jupyter-calendar-sq.png)](docs/teasers/jupyter-calendar.png)\n[![web analysis](docs/teasers/web-analysis-sq.png)](docs/teasers/web-analysis.png)\n[![jupyter all activities](docs/teasers/jupyter-all-activities-sq.png)](docs/teasers/jupyter-all-activities.png)\n[![search](docs/teasers/search-sq.png)](docs/teasers/search.png)\n\n(c) 2018-2020 Andrew Cooke + contributors\n\nContact andrew@acooke.org.\n"
    },
    {
        "repo": "/mustfaibra/RoFFu",
        "language": "Kotlin",
        "readme_contents": "# Table of content\n1. [RoFFu](#roffu)\n2. [Demo](#demo)\n3. [Want to try it?](#want-to-try-it)\n4. [Screenshots](#screenshots)\n5. [Tech Used](#tech-used)\n6. [Want to connect?](#do-you-want-more)\n7. [You liked this?](#you-like-what-iam-doing)\n\n\n# \ud83d\udc5fRoFFu\n\nRoFFu is an online store specialized in sports shoes & Sneakers of many famous companies like Nike & Adidas, with a modern UI & beautiful animations like adding products to cart, bookmarking and change the sizes \ud83e\udd29\ud83d\udd25\n\n\n# \ud83e\udd33\ud83c\udffeDemo\n\n<img src=\"https://github.com/mustfaibra/RoFFu/blob/master/app/demo/ruffo_demo.gif\" width=\"200\">\n\n\n# \ud83e\uddd0Want to try it?\n\nYou can download the demo from [here](https://github.com/mustfaibra/RoFFu/blob/master/app/release/roffu.apk).\n\n\n# \ud83d\udcf8Screenshots\n\n<img src=\"https://github.com/mustfaibra/RoFFu/blob/master/app/screenshots/splash.jpg\" width=\"200\">\n<img src=\"https://github.com/mustfaibra/RoFFu/blob/master/app/screenshots/landing.jpg\" width=\"200\">\n<img src=\"https://github.com/mustfaibra/RoFFu/blob/master/app/screenshots/home.jpg\" width=\"200\">\n<img src=\"https://github.com/mustfaibra/RoFFu/blob/master/app/screenshots/details.jpg\" width=\"200\">\n<img src=\"https://github.com/mustfaibra/RoFFu/blob/master/app/screenshots/cart.jpg\" width=\"200\">\n<img src=\"https://github.com/mustfaibra/RoFFu/blob/master/app/screenshots/login.jpg\" width=\"200\">\n<img src=\"https://github.com/mustfaibra/RoFFu/blob/master/app/screenshots/checkout.jpg\" width=\"200\">\n<img src=\"https://github.com/mustfaibra/RoFFu/blob/master/app/screenshots/profile.jpg\" width=\"200\">\n<img src=\"https://github.com/mustfaibra/RoFFu/blob/master/app/screenshots/history.jpg\" width=\"200\">\n\n\n# \ud83e\uddd1\ud83c\udffe\u200d\ud83d\udcbbTech used\n\n* [Jetpack compose](https://developer.android.com/jetpack/compose) for UI\n* Compose [Navigation](https://developer.android.com/jetpack/compose/navigation)\n* [Hilt](https://developer.android.com/training/dependency-injection/hilt-jetpack) for dependency Injection\n* [Room](https://developer.android.com/training/data-storage/room) for storing complex data locally\n* [DataStore](https://developer.android.com/topic/libraries/architecture/datastore) for shared preferences like app's launch state and language, etc.\n* [MacroBenchmark](https://developer.android.com/topic/performance/benchmarking/macrobenchmark-overview) for measuring app performance.\n* [Baseline Profiles](https://developer.android.com/topic/performance/baselineprofiles) to optimize performance to fasten up the startup process and also reducing heavy animations junk.\n* [LottieFiles](https://github.com/airbnb/lottie/blob/master/android-compose.md) for loading animations with Compose.\n* [Animations & Transitions](https://developer.android.com/jetpack/compose/animation) (Updated & Infinite)\n* [Timber](https://github.com/JakeWharton/timber) for logging (Specially for lazy developers \ud83e\udd23)\n* [Coil](https://coil-kt.github.io/coil/compose/) for loading images with Jetpack Compose.\n* Accompanist [Pager layout](https://google.github.io/accompanist/pager/)\n* Accompanist [Placeholder](https://google.github.io/accompanist/placeholder/)\n* [WhatIf](https://github.com/skydoves/WhatIf) for handling single if-else statements, nullable, collections, and boolean smoothly and in readable & cleaner way.\n\n\n# \ud83d\udd17Do you Want more?\n\nFeel free to connect or to follow me here \ud83d\udc47\ud83c\udffe\n\n[![linkedin](https://img.shields.io/badge/linkedin-0A66C2?style=for-the-badge&logo=linkedin&logoColor=white)](https://www.linkedin.com//in/mustafa-ibrahim-58b918206/)\n\n[![twitter](https://img.shields.io/badge/twitter-1DA1F2?style=for-the-badge&logo=twitter&logoColor=white)](https://twitter.com/mustfaibra)\n\nAlso, don't forget to \u2b50 this repository \ud83d\ude01\n\n\n# \ud83d\ude0dYou like what Iam doing?\n\nHow about buying me a coffee so that I keep doing it \ud83d\ude01\ud83d\udc47\ud83c\udffe\n\n[\u2615 Buy me a coffee](https://www.buymeacoffee.com/mustfaibra)\n"
    },
    {
        "repo": "/Runalyze/Runalyze",
        "language": "PHP",
        "readme_contents": "# [RUNALYZE](https://runalyze.com) - Discontinued as OpenSource\n\nThe OpenSource version of RUNALYZE is abandoned, see our [official announcement](https://blog.runalyze.com/allgemein-en/changes-opensource-alignment/).\n\nYou are welcome to use our official version at [RUNALYZE.com](https://runalyze.com/). \n"
    },
    {
        "repo": "/xoco70/laravel-tournaments",
        "language": "PHP",
        "readme_contents": "<h1 align=\"center\">\n<br>\n<img src=\"https://raw.githubusercontent.com/xoco70/laravel-tournaments/master/resources/assets/images/logo.png\" alt=\"Laravel Tournaments\">\n<br>\nLaravel Tournaments\n<br>\n</h1>\n\n<h4 align=\"center\">A Laravel plugin that generate tournaments out of the box</h4>\n\n\n<p align=\"center\">\n<a href=\"https://packagist.org/packages/xoco70/laravel-tournaments\"><img src=\"https://poser.pugx.org/xoco70/laravel-tournaments/v/stable\" alt=\"Latest Stable Version\"></a>\n<a href=\"https://packagist.org/packages/xoco70/laravel-tournaments\"><img src=\"https://poser.pugx.org/xoco70/laravel-tournaments/downloads\" alt=\"Total Downloads\"></a>\n<a href=\"https://scrutinizer-ci.com/g/xoco70/laravel-tournaments/?branch=master\"><img src=\"https://scrutinizer-ci.com/g/xoco70/laravel-tournaments/badges/quality-score.png?b=master\" alt=\"Scrutinizer Code Quality\" data-canonical-src=\"https://scrutinizer-ci.com/g/xoco70/laravel-tournaments/badges/quality-score.png?b=master\" style=\"max-width:100%;\"></a>\n<a href=\"https://travis-ci.org/xoco70/laravel-tournaments\"><img src=\"https://travis-ci.org/xoco70/laravel-tournaments.svg?branch=master\" alt=\"Build Status\" data-canonical-src=\"https://travis-ci.org/xoco70/laravel-tournaments.svg?branch=master\" style=\"max-width:100%;\"></a>\n<a href=\"https://scrutinizer-ci.com/g/xoco70/laravel-tournaments/?branch=master\"><img src=\"https://scrutinizer-ci.com/g/xoco70/laravel-tournaments/badges/coverage.png?b=master\" alt=\"Code Coverage\" data-canonical-src=\"https://scrutinizer-ci.com/g/xoco70/laravel-tournaments/badges/coverage.png?b=master\" style=\"max-width:100%;\"></a>\n\n</p>\n<h1 align=\"center\">\n<br>\n<img src=\"https://raw.githubusercontent.com/xoco70/laravel-tournaments/master/resources/assets/images/laravel-tournaments.gif\" alt=\"Laravel Tournaments Demo\">\n</h1>\n\n* [Features](#features)\n* [Installation](#installation)\n* [Demo](#demo)\n* [Usage](#usage)\n* [Data Model](#data-model)\n* [Models](#models)\n* [Include views](#include-views)   \n* [Limitations](#limitations)\n* [Troubleshooting](#troubleshooting)\n* [Changelog](#changelog)\n\n## Features\n\n- Single Elimination Trees Generation\n- Single Elimination with Preliminary Round Generation\n- Playoff Generation\n- Third place fight\n- List of Fights Generation\n- Customize Preliminary Round Size\n- Customize area number (1,2,4,8)\n- Modify Single Elimination Tree generation on the fly\n- Use teams instead of competitors\n\n## Installation\n> **NOTE**: Depending on your version of Laravel, you should install a different\n> version of the package:\n> \n> | Laravel Version | Laravel Tournament Version |\n> |:---------------:|:--------------------------:|\n> |        8        |            0.17            |\n> |    5.8 -> 7     |            0.16            |\n> |       5.7       |            0.15            |\n> |       5.6       |            0.14            |\n> |       5.5       |            0.13            |\n\nFirst, you'll need to install the package via Composer:\n\n```php\ncomposer require \"xoco70/laravel-tournaments\"\n```\n\nFinally, from the command line again, publish the default configuration file:\n\n```php\nphp artisan vendor:publish --tag=laravel-tournaments --force\n```\n\n## Demo\n\nTo run the demo, you need to generate Tournaments, Championships, Users, Competitors and Settings\n\nRun Migrations:\n```php\nphp artisan migrate\ncomposer dump-autoload\n```\n\nSeed dummy data:\n```php\nphp artisan db:seed --class=LaravelTournamentSeeder\n\n```\n> **WARNING**: Don't do this in production, it would wipe all your data. Use this line for demo purpose only\n\nAdd TreeController ( you can find it in [demo repository](https://github.com/xoco70/laravel-tournaments-demo/blob/master/app/Http/Controllers/TreeController.php))\n\nAdd your custom routes\n\n```php\nRoute::get('/', 'App\\Http\\Controllers\\TreeController@index')->name('tree.index');\nRoute::post('/championships/{championship}/trees', 'App\\Http\\Controllers\\TreeController@store')->name('tree.store');\nRoute::put('/championships/{championship}/trees', 'App\\Http\\Controllers\\TreeController@update')->name('tree.update');\n```\n\n```php\nphp artisan db:seed --class=LaravelTournamentSeeder\n\n```\n\nYou will be able to access the demo at `http://yourdomain.com/`\n\n## Usage\n```php\n// Create a tournament\n\n$tournament = factory(Tournament::class)->create(['user_id' => Auth::user()->id]);\n\n$championsip = factory(Championship::class)->create(['$tournament_id' => $tournament->id]);\n\n// Optional, if not defined, it will take default in ChampionshipSettings\n\n$settings = factory(ChampionshipSettings::class)->create(['championship_id' => $championship->id]);\n\n// Add competitors to championship\n\n$competitors = factory(\\App\\Competitor::class,10)->create([\n    'championship_id' => $championship->id,\n     'user_id' => factory(User::class)->create()->id\n]);\n\n// Define strategy to generate\n\n$generation = $championship->chooseGenerationStrategy();\n\n// Generate everything\n\n$generation->run();\n\n// Just generate Tree\n\n$this->generateAllTrees();\n\n// Just generate Fight List\n\n$this->generateAllFights();\n\n```\n## Data model\n![Database Model](https://raw.githubusercontent.com/xoco70/laravel-tournaments/master/resources/assets/images/laravel-tournaments-database-model.png)\n\n## Models\n### Tournament\n\n```php\n$tournament->owner; // get owner\n$tournament->venue; // get venue\n$tournament->championships; // get championships \n```\n\nCheck tournament type: \n```php\n$tournament->isOpen()\n$tournament->needsInvitation()\n```\n\nCheck tournament level:\n```php\n$tournament ->isInternational()\n$tournament->isNational() \n$tournament->isRegional()\n$tournament->isEstate()\n$tournament->isMunicipal()\n$tournament->isDistrictal()\n$tournament->isLocal()\n$tournament->hasNoLevel()\n```\n## Championship\n\n```php\n$championship->competitors; // Get competitors\n$championship->teams; // Get teams\n$championship->fighters; // Get fighters\n$championship->category; // Get category\n$championship->tournament; // Get tournament\n$championship->users; // Get users\n$championship->settings; // Get settings\n$championship->fightersGroups; // Get groups \n$championship->groupsByRound($numRound = 1); // Get groups for a specific round\n$championship->groupsFromRound($numRound = 1); // Get groups from a specific round\n$championship->fights; // Get fights\n$championship->firstRoundFights; // Get fights for the first round only ( Useful when has preliminary )\n$championship->fights($numRound = 1); // Get fights for a specific round\n```\n> **NOTE**: $fighter can be an instance of `Team` or `Competitor`\n\n\nDetermine strategy:\n```php\n$championship->isPlayoffCompetitor()\n$championship->isPlayoffTeam()\n$championship->isSingleEliminationCompetitor()\n$championship->isSingleEliminationTeam()\n```\n\nDetermine group size:\n```php\n$championship->getGroupSize()\n```\n\nDetermine championship type: \n```php\n$championship->hasPreliminary()\n$championship->isPlayOffType()\n$championship->isSingleEliminationType()\n```\n\n\n### FightersGroup\n\n```php\n$group->championship; // Get championship\n$group->fights; // Get fights\n$group->fighters; // Get fighters\n$group->teams; // Get teams\n$group->competitors; // Get competitors\n$group->users; // Get users\n```\n> **NOTE**: $fighter can be an instance of `Team` or `Competitor`\n\nTo get the instance name:\n```php\n$group->getFighterType() // Should return Team::class or Competitor::class\n```\n\n> **NOTE**: This plugin use <a href=\"https://github.com/lazychaser/laravel-nestedset\">laravel-nestedset</a>. \nThis means you can navigate with `$group->children()` or `$group->parent()` or use any methods available in this great plugin.  \n\n### Competitor\n\n```php\n$competitor->user; // Get user\n```\n\n### Team\n```php\n// Create a team\n\n$team = factory(Team::class)\n    ->create([ championship_id' => $championship->id]);\n```\n\n```php\n// Add competitor to team \n\n$team->competitors()->attach($competitor->id);\n\n// Remove competitor from a team \n\n$team->competitors()->detach($competitor->id);\n\n```\n\n### Fight \n\n```php\n$fight->group; // Get group\n$fight->competitor1; // Get competitor1\n$fight->competitor2; // Get competitor2\n$fight->team1; // Get team1\n$fight->team2; // Get team2\n```\n\n## Views\nPreliminary tree\n```php\n@include('laravel-tournaments::partials.tree.preliminary') // Preliminary table\n```\n\nSingle Elimination tree\n```php\n@include('laravel-tournaments::partials.tree.singleElimination', ['hasPreliminary' => 0]) \n```\n\nFight List\n```php\n@include('laravel-tournaments::partials.fights')\n```\n\n## Run Functional Tests\n\nvendor/bin/phpunit tests\n\n## Limitations\n\nThis is a work in progress, and tree creation might be very complex, so there is a bunch of things to achieve.  \n\n- Seed fighter\n- Manage more than 1 fighter out of preliminary round\n- Modify Preliminary Round generation on the fly\n- Use any number of area ( restricted to 1,2,4,8)\n- Manage n+1 case : When for instance, there is 17 competitors in a direct elimination tree, there will have 15 BYES.\nWe can improve that making the first match with 3 competitors.\n- Double elimination\n \n## Troubleshooting\n\n### Specified key was too long error\nFor those running MariaDB or older versions of MySQL you may hit this error when trying to run migrations:\nAs outlined in the <a href=\"https://laravel.com/docs/master/migrations#creating-indexes\">Migrations guide</a> to fix this all you have to do is edit your AppServiceProvider.php file and inside the boot method set a default string length:\n```php\nuse Illuminate\\Support\\Facades\\Schema;\n\npublic function boot()\n{\nSchema::defaultStringLength(191);\n}\n```\n### With this configuration, you must have at least...\nThis error means you don't have enough competitors / teams to create given tree\nTry to increase competitor number, decrease areas or preliminary group size, if preliminary round is active \n\n## ChangeLog:\n\n- v0.17: Update to Laravel 8\n- v0.16: Update to Laravel 5.8\n- v0.15: Update to Laravel 5.7\n- v0.14: Update to Laravel 5.6 / PHP 7.2 support\n- v0.13: Manage third place fight\n- v0.12: Update to Laravel 5.5\n- v0.11: Initial Version\n\n"
    },
    {
        "repo": "/sportdb/sport.db",
        "language": "Ruby",
        "readme_contents": "# sport.db - open sports database (e.g. football.db, formula1.db etc.) command line tool and libraries\r\n\r\nGem Family:\r\n\r\n- [**sportdb**](sportdb) - open sports database (e.g. football.db, formula1.db etc.) command line tool\r\n- [**sportdb-models**](sportdb-models) - sport.db schema 'n' models for easy (re)use\r\n- [**sportdb-readers**](sportdb-readers) - sport.db readers for leagues, seasons, clubs, match schedules and results, and more\r\n- [**sportdb-importers**](sportdb-importers) - - tools 'n' scripts for importing sports (football) data in alternate (text) formats incl. comma-separated values (csv) format\r\n\r\n\r\n\r\n<!--\r\n- [sportdb-config](sportdb-config) - sport.db configuration settings and built-in defaults\r\n\r\n- [sportdb-update](sportdb-update) - sport.db addon for auto-updates (e.g. pulling n merging updates from upstream sources)\r\n- [sportdb-keys](sportdb-keys) - sport.db addon for well known keys (e.g. EURO, EN, etc.) and model finder shortcuts, etc.\r\n- [sportdb-compat](sportdb-compat) - sport.db addon for backward compatibility (compat)\r\n-->\r\n\r\n\r\n\r\n## License\r\n\r\n![](https://publicdomainworks.github.io/buttons/zero88x31.png)\r\n\r\nThe `sportdb` scripts are dedicated to the public domain.\r\nUse it as you please with no restrictions whatsoever.\r\n\r\n\r\n## Questions? Comments?\r\n\r\nSend them along to the\r\n[Open Sports & Friends Forum/Mailing List](http://groups.google.com/group/opensport).\r\nThanks!\r\n"
    },
    {
        "repo": "/mcekovic/tennis-crystal-ball",
        "language": "Java",
        "readme_contents": "# Ultimate Tennis Statistics and Tennis Crystal Ball\n\n[![Build Status](https://travis-ci.org/mcekovic/tennis-crystal-ball.svg?branch=master)](https://travis-ci.org/mcekovic/tennis-crystal-ball)\n[![Build Status](https://github.com/mcekovic/tennis-crystal-ball/workflows/build/badge.svg)](https://github.com/mcekovic/tennis-crystal-ball/actions?query=workflow%3Abuild)\n[![Web Site](https://img.shields.io/website/https/www.ultimatetennisstatistics.com.svg)](https://www.ultimatetennisstatistics.com)\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=mcekovic_tennis-crystal-ball&metric=alert_status)](https://sonarcloud.io/dashboard?id=mcekovic_tennis-crystal-ball)\n[![License](https://img.shields.io/badge/license-Apache%202.0-blue.svg?maxAge=2592000)](http://www.apache.org/licenses/LICENSE-2.0)\n[![Top Language](https://img.shields.io/github/languages/top/mcekovic/tennis-crystal-ball)](https://github.com/mcekovic/tennis-crystal-ball/search?l=java)\n\n![Logo](https://raw.githubusercontent.com/mcekovic/tennis-crystal-ball/master/tennis-stats/src/main/resources/static/images/uts-logo.png)\n**Ultimate Tennis Statistics** is a Tennis Big Data Analysis tool with a nice web GUI.\n**Tennis Crystal Ball** is a set of Match Prediction and Tournament Forecasts algorithms powered by AI and machine learning.\n\n## Features\n\n- 'GOAT' List - A.k.a. 'GOATometer' - Best players of Open Era ranked by 'GOAT' points with customizable weights (overall and by surface)\n- Player Profile - Player information, season summary, tournament results, matches, timeline, rivalries, ranking, performance indicators and statistics with charts, 'GOAT' points breakdown and records\n- Timelines - Dominance ('GOAT' points distribution among top players and seasons), Grand Slam, Tour Finals, Masters, Olympics, Davis Cup, Team Cups, Top Rankings and Surface timeline\n- Head-to-Head - Head-to-head between two players with H2H matches, season summary, performance and statistics comparison, ranking, performance and statistics charts, 'GOAT' points breakdown and Hypothetical Matchup prediction based on the Neural Network Match Prediction Algorithm\n- Heads-to-Heads - Heads-to-heads clusters among several players (i.e. among 'Big 4')\n- Greatest Rivalries - Explore greatest rivalries, overall or by season, tournament level, surface or round\n- Greatest Matches - Explore greatest matches ranked by special Match Greatness Score formula\n- Ranking Tables - Player weekly ranking tables\n- EloRatings - Player weekly [Elo rating](https://en.wikipedia.org/wiki/Elo_rating_system) tables (overall, by surface, outdoor or indoor, set or game) using customized Elo rating formula\n- Ranking Charts - Player ranking and ranking point charts, compare players by constructing custom charts\n- Peak Elo Ratings - Peak Elo ratings list for comparing players in their peaks (overall, by surface, set, service/return game and tie-break)\n- Titles and Results - Titles and other results, filtered by various filters\n- Titles and Results Charts - Titles and results charts, filtered by level, surface and seasons\n- Top Performers - Find top performers in both performance and pressure situations categories\n- Performance Charts - Performance charts for various performance categories, filtered by seasons\n- Mental Toughness - Compare players by mental toughness using special mental toughness formula, filtered by various filters\n- Statistics Leaders - Find statistics leaders in different statistical categories (100+), including dominance and break points ratios\n- Top Match Stats - Top single match statistics figures filtered by various filters\n- Statistics Charts - Statistics charts for various statistical categories, including dominance and break points ratios\n- Seasons - Browse seasons and check season records, tournaments, rankings, performance, statistics and 'GOAT' points distribution among top players\n- Best Seasons - Find which are the players' best seasons of the Open Era based on 'GOAT' points (overall and by surface)\n- Tournaments - Browse tournaments, see players with most titles, historical tournament levels and surfaces and average participation\n- Tournaments Events - Browse all Open Era tournament events, see tournament event draw, performance, statistics, historical winners and records\n- Tournament Forecasts - Tournament Event Forecasts for in-progress tournaments driven by Neural Network Match Prediction Algorithm\n- Records Book - Various match, tournament result and ranking records, famous and infamous (the best player that never...)\n- Live Scores - Live Scores via [Enetscores](https://www.enetscores.com) by Enetpulse\n\n### Web Site\nhttps://www.ultimatetennisstatistics.com\n\n### Data Loaders\n- For Jeff Sackmann ATP CSV repository: https://github.com/JeffSackmann/tennis_atp (as of commit cf2201c on 2 dec 2019)\n- Database setup instructions: [#232](https://github.com/mcekovic/tennis-crystal-ball/issues/232)\n- Docker image [mcekovic/uts-database](https://hub.docker.com/r/mcekovic/uts-database) with PostgreSQL database pre-populated with ATP tennis data as of season 2019: [#337](https://github.com/mcekovic/tennis-crystal-ball/issues/337) \n\n### Technology\nPostgreSQL, Java, Spring Boot, Thymeleaf, JQuery, Bootstrap, Google Charts, Groovy...\n\n### Architecture\n```mermaid\nflowchart LR\n  user((User)) --> tn\n  subgraph uts[Tennis Stats]\n    direction TB\n    subgraph app[Spring Boot Java App]\n      direction TB\n      cc[Caffeine<br>Cache]\n      mvc(Spring<br>MVC) --> tcb(Tennis<br>Crystal Ball<br>Predictor) & elo(Elo Ratings<br>Manager)\n      mvc & tcb & elo --> cc\n    end\n    tn[[Tomcat<br>Native]] --> mvc\n    app --> cb[Let's Encrypt<br>Certbot] -- SSL certificate ---> tn\n  end\n  subgraph dl[Data Load]\n    direction TB\n    load(Data Load<br>Groovy Script) --> gd[[Selenium<br>Geckodriver]] --> ff[Headless<br>Firefox]\n  end\n  app -- spawn ---> load\n  app & load ---> db[(<br>PostgreSQL<br>DB)]\n  load --> repo[Jeff Sackman<br>Tennis Repo]\n  ff --> www([www])\n  \n  style uts fill:DimGray\n  style app fill:CadetBlue\n  style mvc fill:Indigo\n  style elo fill:DarkOrchid\n  style tcb fill:DarkMagenta\n  style cc fill:Maroon\n  style tn fill:ForestGreen\n  style cb fill:Crimson\n  style dl fill:DimGray\n  style load fill:RoyalBlue\n  style gd fill:IndianRed\n  style ff fill:OrangeRed\n  style db fill:SteelBlue\n  style repo fill:DarkSlateGray\n  \n  click mvc href \"https://github.com/mcekovic/tennis-crystal-ball/tree/master/tennis-stats/src/main/java/org/strangeforest/tcb/stats/controller\" _blank\n  click elo href \"https://github.com/mcekovic/tennis-crystal-ball/tree/master/tennis-stats/src/main/java/org/strangeforest/tcb/stats/model/elo\" _blank\n  click tcb href \"https://github.com/mcekovic/tennis-crystal-ball/tree/master/tennis-stats/src/main/java/org/strangeforest/tcb/stats/model/prediction\" _blank\n  click cc href \"https://github.com/ben-manes/caffeine\" _blank\n  click tn href \"https://tomcat.apache.org/native-doc\" _blank\n  click cb href \"https://certbot.eff.org\" _blank\n  click load href \"https://groovy-lang.org\" _blank\n  click gd href \"https://github.com/mozilla/geckodriver\" _blank\n  click ff href \"https://www.mozilla.org/en-US/firefox\" _blank\n  click db href \"https://www.postgresql.org\" _blank\n  click repo href \"https://github.com/JeffSackmann/tennis_atp\" _blank\n```\n\n### Screenshots\n\n##### Home Page\n![Home Page](https://raw.githubusercontent.com/mcekovic/open-box/master/HomePage.png)\n\n##### GOAT List\n![GOAT List](https://raw.githubusercontent.com/mcekovic/open-box/master/GOATList.png)\n\n##### Player Profile\n![Player Profile](https://raw.githubusercontent.com/mcekovic/open-box/master/PlayerProfile.png)\n\n##### Player Tournaments\n![Player Tournaments](https://raw.githubusercontent.com/mcekovic/open-box/master/PlayerTournaments.png)\n\n##### Player Timeline\n![Player Timeline](https://raw.githubusercontent.com/mcekovic/open-box/master/PlayerTimeline.png)\n\n##### Player Rivalries\n![Player Rivalries](https://raw.githubusercontent.com/mcekovic/open-box/master/PlayerRivalries.png)\n\n##### Player GOAT Points\n![Player GOAT Points](https://raw.githubusercontent.com/mcekovic/open-box/master/PlayerGOATPoints.png)\n\n##### Dominance Timeline\n![Dominance Timeline](https://raw.githubusercontent.com/mcekovic/open-box/master/BigGunsTimeline.png)\n\n##### Surface Timeline\n![Surface Timeline](https://raw.githubusercontent.com/mcekovic/open-box/master/SurfaceTimeline.png)\n\n##### Greatest Rivalries\n![Greatest Rivalries](https://raw.githubusercontent.com/mcekovic/open-box/master/GreatestRivalries.png)\n\n##### Ranking Charts\n![Ranking Points Chart](https://raw.githubusercontent.com/mcekovic/open-box/master/RankingChart.png)\n\n![GOAT Points Chart](https://raw.githubusercontent.com/mcekovic/open-box/master/RankingChart2.png)\n\n##### Peak Elo Ratings\n![Peak Elo Ratings](https://raw.githubusercontent.com/mcekovic/open-box/master/PeakEloRatings.png)\n\n##### Top Performers\n![Top Performers](https://raw.githubusercontent.com/mcekovic/open-box/master/TopPerformers.png)\n\n##### Statistics Leaders\n![Statistics Leaders](https://raw.githubusercontent.com/mcekovic/open-box/master/StatisticsLeaders.png)\n\n##### Seasons\n![Seasons](https://raw.githubusercontent.com/mcekovic/open-box/master/Seasons.png)\n\n##### Best Seasons\n![Best Seasons](https://raw.githubusercontent.com/mcekovic/open-box/master/BestSeasons.png)\n\n##### Tournaments\n![Tournaments](https://raw.githubusercontent.com/mcekovic/open-box/master/Tournaments.png)\n\n##### Records Book\n![Records Book](https://raw.githubusercontent.com/mcekovic/open-box/master/RecordsBook.png)\n\n### License\n\nTennis Crystal Ball and Ultimate Tennis Statistics source code is licensed under [Apache 2.0 License](http://www.apache.org/licenses/LICENSE-2.0).\n\n[![Creative Commons License](https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png)](http://creativecommons.org/licenses/by-nc-sa/4.0/)\n\n'GOAT' Formula, customizations of Elo Ratings for tennis, Match Prediction, Tournament Forecasts and other algorithms by Ultimate Tennis Statistics are licensed under a [Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License](http://creativecommons.org/licenses/by-nc-sa/4.0/).\n\nIn short: Attribution is required. Non-commercial use only.\n"
    },
    {
        "repo": "/tormoder/fit",
        "language": "Go",
        "readme_contents": "# fit\n\n[![license](http://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/tormoder/fit/raw/master/LICENSE)\n[![GoDoc](https://godoc.org/github.com/tormoder/fit?status.svg)](https://godoc.org/github.com/tormoder/fit)\n[![Build](https://github.com/tormoder/fit/workflows/Build/badge.svg)](https://github.com/tormoder/fit/actions?query=workflow%3ABuild)\n\n<img src=\"https://raw.githubusercontent.com/hackraft/gophericons/master/png/2.png\" width=\"225\" align=\"right\" hspace=\"25\" />\n\nfit is a [Go](http://www.golang.org/) package that implements decoding and\nencoding of the [Flexible and Interoperable Data Transfer (FIT)\nProtocol](http://www.thisisant.com/resources/fit). Fit is a \"compact binary\nformat designed for storing and sharing data from sport, fitness and health\ndevices\". Fit files are created by newer GPS enabled Garmin sport watches and\ncycling computers, such as the Forerunner/Edge/Fenix series.\n\nThe two latest versions of Go is supported. The core decoding package has no\nexternal dependencies. The latest release of Go and a few external dependencies\nare required for running the full test suite and benchmarks.\n\n**Latest release:** 0.15.0\n\n### Version Support\n\nThe current supported FIT SDK version is **21.115**.\n\nDeveloper data fields are currently only _partially_ supported.\nAt the moment the decoder parses Developer Data Field Descriptions, Developer Data ID Messages and Field Description Messages.\nThe decoder currently discards developer data fields found in records. \n\nThe encoder will currently (silently) ignore anything related to Developer data fields,\nThis also means that encoding will not fail if protocol version 2 is specified for a file header.\n\nDeveloper data fields support is tracked by\n[#21](https://github.com/tormoder/fit/issues/21)\nand\n[#64](https://github.com/tormoder/fit/issues/64).\n\n### Features\n\n* Supports all FIT file types.\n* Accessors for scaled fields.\n* Accessors for dynamic fields.\n* Field components expansion.\n* Go code generation for custom FIT product profiles.\n\n### Installation\n\nUsing Go modules:\n\n```\n$ go get github.com/tormoder/fit@v0.15.0\n```\n\nUsing `$GOPATH`:\n\n```\n$ go get github.com/tormoder/fit\n```\n\n### About fit\n\n- [Example Usage](https://github.com/tormoder/fit/wiki/Example-Usage)\n- [Data Types](https://github.com/tormoder/fit/wiki/Data-Types)\n- [Main API Reference](https://github.com/tormoder/fit/wiki/Main-Api-Reference)\n- [Custom Product Profiles](https://github.com/tormoder/fit/wiki/Custom-Product-Profiles)\n- [Upcoming Features](https://github.com/tormoder/fit/wiki/Upcoming-Features)\n- [Contributing](https://github.com/tormoder/fit/blob/master/CONTRIBUTING.md)\n- [License](https://github.com/tormoder/fit/wiki/License)\n\n### Contributors\n\n- [usedbytes](https://github.com/usedbytes)\n- [colinrgodsey](https://github.com/colinrgodsey)\n- [bpg](https://github.com/bpg)\n- [pieterclaerhout](https://github.com/pieterclaerhout)\n- [beyoung](https://github.com/beyoung)\n- [cloudlena](https://github.com/cloudlena)\n- [dudanian](https://github.com/dudanian)\n"
    },
    {
        "repo": "/georgedouzas/sports-betting",
        "language": "Python",
        "readme_contents": "[scikit-learn]: <http://scikit-learn.org/stable/>\n[black badge]: <https://img.shields.io/badge/%20style-black-000000.svg>\n[black]: <https://github.com/psf/black>\n[docformatter badge]: <https://img.shields.io/badge/%20formatter-docformatter-fedcba.svg>\n[docformatter]: <https://github.com/PyCQA/docformatter>\n[ruff badge]: <https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v1.json>\n[ruff]: <https://github.com/charliermarsh/ruff>\n[mypy badge]: <http://www.mypy-lang.org/static/mypy_badge.svg>\n[mypy]: <http://mypy-lang.org>\n[mkdocs badge]: <https://img.shields.io/badge/docs-mkdocs%20material-blue.svg?style=flat>\n[mkdocs]: <https://squidfunk.github.io/mkdocs-material>\n[version badge]: <https://img.shields.io/pypi/v/sports-betting.svg>\n[pythonversion badge]: <https://img.shields.io/pypi/pyversions/sports-betting.svg>\n[downloads badge]: <https://img.shields.io/pypi/dd/sports-betting>\n[gitter]: <https://gitter.im/sports-betting/community>\n[gitter badge]: <https://badges.gitter.im/join%20chat.svg>\n[discussions]: <https://github.com/georgedouzas/sports-betting/discussions>\n[discussions badge]: <https://img.shields.io/github/discussions/georgedouzas/sports-betting>\n[ci]: <https://github.com/georgedouzas/sports-betting/actions?query=workflow>\n[ci badge]: <https://github.com/georgedouzas/sports-betting/actions/workflows/ci.yml/badge.svg?branch=main>\n[doc]: <https://github.com/georgedouzas/sports-betting/actions?query=workflow>\n[doc badge]: <https://github.com/georgedouzas/sports-betting/actions/workflows/doc.yml/badge.svg?branch=main>\n\n# sports-betting\n\n[![ci][ci badge]][ci] [![doc][doc badge]][doc]\n\n| Category          | Tools    |\n| ------------------| -------- |\n| **Development**   | [![black][black badge]][black] [![ruff][ruff badge]][ruff] [![mypy][mypy badge]][mypy] [![docformatter][docformatter badge]][docformatter] |\n| **Package**       | ![version][version badge] ![pythonversion][pythonversion badge] ![downloads][downloads badge] |\n| **Documentation** | [![mkdocs][mkdocs badge]][mkdocs]|\n| **Communication** | [![gitter][gitter badge]][gitter] [![discussions][discussions badge]][discussions] |\n\n## Introduction\n\nPython sports betting toolbox.\n\nThe `sports-betting` package is a collection of tools that makes it easy to create machine learning models for sports betting and\nevaluate their performance. It is compatible with [scikit-learn].\n\n## Daily bet tips\n\nThis section will contain **daily** updated value bets of a betting strategy based on a machine learning model. You can read the\nquick start guide below to understand the details or reproduce the results. Alternatively, you can visit regularly this page to\nuse the predictions for your own betting.\n\n**Value bets**\n\n| Date       | League   | Home Team          | Away Team      |   Home Win |   Draw |   Away Win |   Over 2.5 |   Under 2.5 |\n|:-----------|:---------|:-------------------|:---------------|-----------:|-------:|-----------:|-----------:|------------:|\n| 2023-10-14 | England  | Grimsby            | Accrington     |       2.36 |   4.08 |       3.52 |       1.86 |        2.16 |\n| 2023-10-14 | England  | Forest Green       | Colchester     |       2.62 |   4.08 |       2.78 |       1.86 |        2.17 |\n| 2023-10-14 | England  | Lincoln            | Burton         |       2.29 |   4.08 |       3.55 |       1.91 |        2.09 |\n| 2023-10-14 | England  | Notts County       | Mansfield      |       2.41 |   3.71 |       3.5  |       1.84 |        2.19 |\n| 2023-10-14 | England  | AFC Wimbledon      | Bradford       |       2.78 |   4.01 |       3.53 |       1.87 |        2.15 |\n| 2023-10-14 | England  | Crewe              | Tranmere       |       2.04 |   4.08 |       3.55 |       1.87 |        2.16 |\n| 2023-10-14 | England  | Doncaster          | Sutton         |       2.29 |   4.08 |       3.55 |       1.86 |        2.17 |\n| 2023-10-14 | England  | Milton Keynes Dons | Barrow         |       2.36 |   4.08 |       3.33 |       1.99 |        2.01 |\n| 2023-10-14 | England  | Harrogate          | Stockport      |       2.66 |   4.61 |       2.45 |       1.9  |        2.11 |\n| 2023-10-14 | England  | Blackpool          | Stevenage      |       2.38 |   4.12 |       3.52 |       1.88 |        2.13 |\n| 2023-10-14 | England  | Swindon            | Newport County |       2.1  |   4.14 |       3.94 |       1.83 |        2.21 |\n| 2023-10-14 | England  | Walsall            | Gillingham     |       2.6  |   4.1  |       3.37 |       1.92 |        2.09 |\n| 2023-10-14 | England  | Wrexham            | Salford        |       1.91 |   2.38 |       4.17 |       1.88 |        2.14 |\n| 2023-10-14 | England  | Cambridge          | Shrewsbury     |       2.36 |   4.08 |       3.53 |       1.9  |        2.11 |\n| 2023-10-14 | England  | Carlisle           | Leyton Orient  |       2.62 |   4.22 |       3.52 |       1.88 |        2.13 |\n| 2023-10-14 | Spain    | Mirandes           | Tenerife       |       2.63 |   4.03 |       3.48 |       1.93 |        2.07 |\n| 2023-10-14 | Spain    | Espanol            | Valladolid     |       2.24 |   4.08 |       3.59 |       1.85 |        2.18 |\n| 2023-10-14 | Spain    | Sp Gijon           | Zaragoza       |       2.37 |   4    |       3.65 |       1.97 |        2.03 |\n| 2023-10-14 | Spain    | Cartagena          | Santander      |       2.38 |   4.55 |       3.64 |       1.76 |        2.32 |\n| 2023-10-15 | Spain    | Eibar              | Huesca         |       1.64 |   4.18 |       5    |       2    |        2    |\n| 2023-10-15 | Spain    | Eldense            | Elche          |       2.6  |   4.12 |       3.42 |       1.92 |        2.09 |\n| 2023-10-15 | Spain    | Leganes            | Amorebieta     |       2.11 |   4.09 |       4.11 |       1.97 |        2.03 |\n| 2023-10-15 | Spain    | Burgos             | Villarreal B   |       2.35 |   3.94 |       3.79 |       1.93 |        2.07 |\n| 2023-10-15 | Spain    | Andorra            | Alcorcon       |       2.36 |   4.38 |       3.67 |       1.96 |        2.05 |\n| 2023-10-16 | Spain    | Levante            | Ferrol         |       2.1  |   4.08 |       4.22 |       1.86 |        2.16 |\n\n**Backtesting results**\n\n| Training Start      | Training End        | Training Period    | Testing Start       | Testing End         | Testing Period    |   Start Value |   End Value |   Total Return [%] |   Total Bets |   Win Rate [%] |   Best Bet [%] |   Worst Bet [%] |   Avg Winning Bet [%] |   Avg Losing Bet [%] |   Profit Factor |   Sharpe Ratio |   Avg Bet Yield [%] |   Std Bet Yield [%] |\n|:--------------------|:--------------------|:-------------------|:--------------------|:--------------------|:------------------|--------------:|------------:|-------------------:|-------------:|---------------:|---------------:|----------------:|----------------------:|---------------------:|----------------:|---------------:|--------------------:|--------------------:|\n| 2016-01-08 00:00:00 | 2017-09-25 00:00:00 | 626 days 00:00:00  | 2017-09-25 00:00:00 | 2018-11-25 00:00:00 | 427 days 00:00:00 |          1000 |     1000    |              0     |            0 |       nan      |        nan     |         nan     |              nan      |             nan      |       nan       |      inf       |          nan        |            nan      |\n| 2016-01-08 00:00:00 | 2018-11-25 00:00:00 | 1052 days 00:00:00 | 2018-11-25 00:00:00 | 2020-01-24 00:00:00 | 426 days 00:00:00 |          1000 |     1204.4  |             20.44  |          680 |        48.3824 |        674     |        -175     |               80.0253 |             -64.0311 |         1.1945  |        1.52356 |            6.13755  |             97.9237 |\n| 2016-01-08 00:00:00 | 2020-01-24 00:00:00 | 1477 days 00:00:00 | 2020-01-24 00:00:00 | 2021-04-24 00:00:00 | 457 days 00:00:00 |          1000 |     1626.66 |             62.666 |         1641 |        48.9336 |        857.143 |        -181.818 |               83.8059 |             -68.3494 |         1.2479  |        2.92606 |            6.14726  |            102.423  |\n| 2016-01-08 00:00:00 | 2021-04-24 00:00:00 | 1933 days 00:00:00 | 2021-04-24 00:00:00 | 2022-08-16 00:00:00 | 480 days 00:00:00 |          1000 |     1551.96 |             55.196 |         1490 |        49.7987 |        536.667 |        -185.714 |               80.3641 |             -65.3676 |         1.23447 |        2.56372 |            7.29261  |             97.4973 |\n| 2016-01-08 00:00:00 | 2022-08-16 00:00:00 | 2412 days 00:00:00 | 2022-08-16 00:00:00 | 2023-10-09 00:00:00 | 420 days 00:00:00 |          1000 |     1350.43 |             35.043 |         1444 |        48.0609 |        522     |        -186.667 |               75.4121 |             -68.3366 |         1.15157 |        1.70726 |            0.845068 |             93.7018 |\n\n## Quick start\n\n`sports-betting` supports all common sports betting needs i.e. fetching historical and fixtures data as well as backtesting of\nbetting strategies.\n\n### Parameters\n\nAssume that we would like to fetch historical data of various leagues for specific years, including the maximum odds of the market\nand dropping columns that contain more than 20% of missing values:\n\n```python\nleagues = ['England', 'Scotland', 'Germany', 'Italy', 'Spain', 'France', 'Netherlands', 'Belgium', 'Portugal', 'Turkey', 'Greece']\nyears = [2017, 2018, 2019, 2020, 2021, 2022, 2023]\nodds_type = 'market_maximum'\ndrop_na_thres = 0.8\n```\n\nWe would like also to use a `GradientBoostingClassifier` to support our betting strategy:\n\n```python\nfrom sklearn.compose import make_column_transformer\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.multioutput import MultiOutputClassifier\nfrom sportsbet.evaluation import ClassifierBettor\n\nclassifier = make_pipeline(\n  make_column_transformer(\n    (OneHotEncoder(handle_unknown='ignore'), ['league', 'home_team', 'away_team']), remainder='passthrough'\n  ),\n  SimpleImputer(),\n  MultiOutputClassifier(GradientBoostingClassifier(random_state=5)),\n)\n```\n\nFinally, our backtesting parameters would include a 5-fold time ordered cross-validation and initial portfolio value of 1000:\n\n```python\nfrom sklearn.model_selection import TimeSeriesSplit\ntscv = TimeSeriesSplit(5)\ninit_cash = 1000\n```\n\n### Process\n\nUsing the above selections, the betting process is the following:\n\n- Create a dataloader that is used to fetch the training and fixtures data.\n\n```python\nfrom sportsbet.datasets import SoccerDataLoader\ndataloader = SoccerDataLoader({'league': leagues, 'year': years})\nX_train, Y_train, O_train = dataloader.extract_train_data(drop_na_thres=drop_na_thres, odds_type=odds_type)\nX_fix, _, O_fix = dataloader.extract_fixtures_data()\n```\n\n- Create a bettor that selects and configures the betting strategy.\n\n```python\nfrom sportsbet.evaluation import ClassifierBettor\nbettor = ClassifierBettor(classifier)\n```\n\n- Backtest the bettor on the training data to evaluate the betting strategy:\n\n```python\nbettor.backtest(X_train, Y_train, O_train, tscv=tscv, init_cash=init_cash)\nbettor.backtest_results_[['Sharpe Ratio', 'Total Return [%]', 'Testing Period']].mean()\n```\n\n- Predict the value bets:\n\n```python\nbettor.bet(X_fix, O_fix)\n```\n\n## Sports betting in practice\n\nYou can think of any sports betting event as a random experiment with unknown probabilities for the various outcomes. Even for the\nmost unlikely outcome, for example scoring more than 10 goals in a soccer match, a small probability is still assigned. The\nbookmaker estimates this probability P and offers the corresponding odds O. In theory, if the bookmaker offers the so-called fair\nodds O = 1 / P in the long run, neither the bettor nor the bookmaker would make any money.\n\nThe bookmaker's strategy is to adjust the odds in their favor using the over-round of probabilities. In practice, it offers odds\nless than the estimated fair odds. The important point here is that the bookmaker still has to estimate the probabilities of\noutcomes and provide odds that guarantee them long-term profit.\n\nOn the other hand, the bettor can also estimate the probabilities and compare them to the odds the bookmaker offers. If the\nestimated probability of an outcome is higher than the implied probability from the provided odds, then the bet is called a value\nbet.\n\nThe only long-term betting strategy that makes sense is to select value bets. However, you have to remember that neither the\nbettor nor the bookmaker can access the actual probabilities of outcomes. Therefore, identifying a value bet from the side of the\nbettor is still an estimation. The bettor or the bookmaker might be wrong, or both of them.\n\nAnother essential point is that bookmakers can access resources that the typical bettor is rare to access. For instance, they have\nmore data, computational power, and teams of experts working on predictive models. You may assume that trying to beat them is\npointless, but this is not necessarily correct. The bookmakers have multiple factors to consider when they offer their adjusted\nodds. This is the reason there is a considerable variation among the offered odds. The bettor should aim to systematically\nestimate the value bets, backtest their performance, and not create arbitrarily accurate predictive models. This is a realistic\ngoal, and `sports-betting` can help by providing appropriate tools.\n\n## Installation\n\nFor user installation, `sports-betting` is currently available on the PyPi's repository, and you can install it via `pip`:\n\n```bash\npip install sports-betting\n```\n\nDevelopment installation requires to clone the repository and then use [PDM](https://github.com/pdm-project/pdm) to install the\nproject as well as the main and development dependencies:\n\n```bash\ngit clone https://github.com/georgedouzas/sports-betting.git\ncd sports-betting\npdm install\n```\n\n## Usage\n\nYou can use the Python API or the CLI to access the full functionality of `sports-betting`. Nevertheless, it is recommended to be\nfamiliar with the Python API since it is still needed to write configuration files for the CLI.\n\n### API\n\nThe `sports-betting` package makes it easy to download sports betting data:\n\n```python\nfrom sportsbet.datasets import SoccerDataLoader\ndataloader = SoccerDataLoader(param_grid={'league': ['Italy'], 'year': [2020]})\nX_train, Y_train, O_train = dataloader.extract_train_data(odds_type='market_maximum', drop_na_thres=1.0)\nX_fix, Y_fix, O_fix = dataloader.extract_fixtures_data()\n```\n\n`X_train` are the historical/training data and `X_fix` are the test/fixtures data. The historical data can be used to backtest the\nperformance of a bettor model:\n\n```python\nfrom sportsbet.evaluation import ClassifierBettor\nfrom sklearn.dummy import DummyClassifier\nbettor = ClassifierBettor(DummyClassifier())\nbettor.backtest(X_train, Y_train, O_train)\n```\n\nWe can use the trained bettor model to predict the value bets using the fixtures data:\n\n```python\nbettor.bet(X_fix, O_fix)\n```\n\n### CLI\n\nThe command `sportsbet` provides various sub-commands to download data and predict the value bets. For any sub-command you may\nadd the `--help` flag to get more information about its usage.\n\n#### Configuration\n\nIn order to use the commands, a configuration file is required. You can find examples of such configuration files in\n`sports-betting/configs/`. The configuration file should have a Python file extension and contain a dictionary `CONFIG`:\n\n```python\nCONFIG = {\n  'data': {\n    'dataloader': ...,\n    'param_grid': {\n\n    },\n    'drop_na_thres': ...,\n    'odds_type': ...\n  },\n  'betting': {\n    ...: ...,\n    'bettor': ...,\n    'tscv': ...,\n    'init_cash': ...\n  }\n}\n```\n\nThe dictionary `CONFIG` has the following structure:\n\n- Two mandatory keys `'data'` and `'betting'` that configure the data extraction and betting strategy, respectively and contain\n  other nested dictionaries as values.\n- The `'data'` key has a nested dictionary as a value with a mandatory key '`dataloader`' and the optional keys `'param_grid'`,\n  `'drop_na_thres'` and `'drop_na'`. You can refer to the [API](api/datasets) for more details about their values.\n- The `'betting'` key has a nested dictionary as a value with a mandatory key '`bettor`' and the optional keys `'tscv'`, and\n  `'inti_cash'`. You can refer to the [API](api/datasets) for more details about their values.\n\n#### Dataloader\n\nShow available parameters for dataloaders:\n\n```bash\nsportsbet dataloader params -c config.py\n```\n\nShow available odds types:\n\n```bash\nsportsbet dataloader odds-types -c config.py\n```\n\nExtract training data and save them as CSV files:\n\n```bash\nsportsbet dataloader training -c dataloader_config.py -d /path/to/directory\n```\n\nExtract fixtures data and save them as CSV files:\n\n```bash\nsportsbet dataloader fixtures -c config.py -d /path/to/directory\n```\n\n#### Bettor\n\nBacktest the bettor and save the results as CSV file:\n\n```bash\nsportsbet bettor backtest -c config.py -d /path/to/directory\n```\n\nGet the value bets and save them as CSV file:\n\n```bash\nsportsbet bettor bet -c config.py -d /path/to/directory\n```"
    },
    {
        "repo": "/mitthu786/TS-JioTV",
        "language": "PHP",
        "readme_contents": "<p align='center'><img src=\"https://ik.imagekit.io/techiesneh/tv_logo/jtv-plus_TMaGGk6N0.png\" width=\"120\"></p>\r\n\r\n<!--\r\n* Copyright 2021-2023 SnehTV, Inc.\r\n* Licensed under MIT (https://github.com/mitthu786/TS-JioTV/blob/main/LICENSE)\r\n* Created By : TechieSneh\r\n-->\r\n\r\n<h4 align='center'>\ud83d\udcfa The PHP Script For Grab Streaming Links and Play it ,<br> This Works Only on Android & Android TV\r\nThrough LocalHost <br><br>\ud83c\udf1f Star This Repository Before Forking \ud83d\ude0e<br>Don't Edit This Script\r\n\ud83d\ude08</h4>\r\n<br>\r\n\r\n<h3>\u267b\ufe0f JOIN FOR UPDATES :</h3>\r\n\r\n- JOIN TELEGRAM CHANNEL\r\n- https://bit.ly/3qzL7uD\r\n\r\n<h3>\ud83d\ude07 SCRIPT FEATURES :</h3>\r\n\r\n- New UI & Design\r\n- Dropdown Filters Added\r\n- Will Works In All Qualities\r\n- Multi Audio Stream Support\r\n- Web Play with Quality Change Supports\r\n- Works on Mobile, AndroidTV or PC Browser Perfect\r\n\r\n<h3>\ud83d\udc96 PLAYER FEATURES :</h3>\r\n\r\n- Search Feature Added<br>\r\n\r\n1. \ud83d\udd0d SEARCH BY CHANNEL NAME\r\n\r\n```\r\ne.g.  Sony,Zee,Star ...\r\n```\r\n\r\n2. \ud83d\udd0d SEARCH BY GENRE\r\n\r\n```\r\ne.g.  Entertainment,Kids,Movies,Music ...\r\n```\r\n\r\n3. \ud83d\udd0d SEARCH BY LANGUAGE\r\n\r\n```\r\ne.g.  Hindi,Tamil,Kannada,Odia ...\r\n```\r\n\r\n<br>\r\n\r\n<h3>\ud83d\udcf8 MOBILE : </h3>\r\n\r\n<p align=\"left\">\r\n  <img src=\"https://i.ibb.co/Nx8mMLR/main-mob.png\" width=\"100\">\r\n  <img src=\"https://i.ibb.co/3B9RGp4/play-mob.png\" width=\"100\">\r\n</p>\r\n\r\n<h3>\ud83d\udcf8 PC WEB : </h3>\r\n\r\n<img src=\"https://i.ibb.co/wr2sDTG/main.png\" width=\"200\" height=\"100\"><br>\r\n<img src=\"https://i.ibb.co/xYJNzw3/play.png\" width=\"200\" height=\"100\">\r\n\r\n<br>\r\n\r\n<h2>\ud83c\udf41 HOW TO USE : </h2>\r\n\r\n## \ud83d\udd10 Login Method 1 :\r\n\r\n### First Download This Application\r\n\r\n- KSWEB PRO ( Php Web Server ) <br>\r\n\r\n```bash\r\ni. https://dl1.apkhome.net/2019/6/KSWEB-3.93%20Pro.apk\r\n\r\nii. https://oceanofapk.com/ksweb-server-php-mysql-v3-961-pro-apk-free-download/\r\n\r\niii. https://s3.dlandroid.com/apps/KSWEB-server[dlandroid.com].apk\r\n```\r\n\r\n### Then Download This Zip File\r\n\r\n- [TS-JioTV Zip](https://tsnehcors.mitthu.workers.dev/?https://github.com/mitthu786/TS-JioTV/blob/main/TS-JioTV.zip?raw=true) <br>\r\n\r\n1. Locate & Extract all Files in LocalHost (Htdocs) Root Folder. <br>\r\n2. Open KSWEB app & start the server. <br>\r\n3. Now Open [JIOTV WEB] Below Link :\r\n\r\n```py\r\nhttp://localhost:8080/TS-JioTV/\r\n```\r\n\r\n4. First Login with your credentials.\r\n5. Now, You Will See all Jio Channels. <br>\r\n6. Click on Channel and Play. <br>\r\n\r\n## \ud83d\udd10 Login Method 2 :\r\n\r\n- Follow Above Instructions First & Then Try To Login with this Method.\r\n\r\n1. Put Your E-Mail or Mobile Number without +91 & Password in Below Link <br>\r\n\r\n```py\r\nhttp://localhost:8080/TS-JioTV/login_direct.php?user=`NUMBER`&pass=`PASSWORD`\r\n```\r\n\r\n2. Now Open [JIOTV WEB] Below Link :\r\n\r\n```py\r\nhttp://localhost:8080/TS-JioTV/\r\n```\r\n\r\n3. Now, You Will See all Jio Channels. <br>\r\n4. Click On Channel and Play <br>\r\n\r\n## \u25b6\ufe0f PlayList Methods :\r\n\r\n\u2022 In Tivimate or OTT Navigator Player Put Links Format Like Below :<br>\r\n\r\n```py\r\nhttp://localhost:8080/TS-JioTV/app/playlist.php\r\n```\r\n\r\n\u2022 Hurrah !! Now Play & Enjoy with your Jio Channels .\r\n\r\n<!--\r\n* Copyright 2021-2023 SnehTV, Inc.\r\n* Licensed under MIT (https://github.com/mitthu786/TS-JioTV/blob/main/LICENSE)\r\n* Created By : TechieSneh\r\n-->\r\n\r\n### \ud83d\ude1b GENERATE CREDS.JSON (OTP USERS):\r\n\r\n1. \u270d\ufe0f FOR SSO TOKEN : [JioLogin](http://jiologin.unaux.com)\r\n2. For This You Need JioID Number and Password\r\n3. You Can Also get Data with OTP\r\n\r\n- `user` = Username / Mobile No.\r\n- `pass` = Password\r\n\r\n<h3>\ud83d\udeb8 WARNINGS :</h3>\r\n\r\n- This is Just For Educational Purpose\r\n- Don't Sell this Script, This is \ud83d\udcaf% Free\r\n\r\n<h3>\ud83e\udd17 CONTACT US : </h3>\r\n\r\n- TELEGRAM CHANNEL [JOIN NOW](https://bit.ly/3qzL7uD)\r\n- FOR ANY QUERY CONTACT US ON [ProtonMail](mailto:techiesneh@protonmail.com)\r\n\r\n<br>\r\n\r\n---\r\n\r\n<h4 align='center'>\u00a9 2021-23 Techie Sneh</h4>\r\n\r\n<!-- DO NOT REMOVE THIS CREDIT -->\r\n<!-- \u00a9 2021-23 TechieSneh -->\r\n"
    },
    {
        "repo": "/whatadewitt/yahoo-fantasy-sports-api",
        "language": "JavaScript",
        "readme_contents": "# Yahoo! Fantasy API Node Module\n\nThis is a node module created to wrap the Yahoo! Fantasy Sports API ([link](https://developer.yahoo.com/fantasysports/guide/index.html)). At the moment, not all subresources are available, nor are any of the 'collection' elements. I do hope to add them, and they have been added to the code, but as of now this project is very much in an open beta phase.\n\nThe API is designed to act as a helper for those interacting with the Y! Fantasy API. The goal is for ease of use for the user, both in terms of querying endpoints and parsing responses. I've noticed that in working with the API, the data is not always the easiest to understand, so hopefully what I have created here will help people out.\n\n## Installation\n\nYou can install the module via npm by running:\n\n    $ npm install yahoo-fantasy\n\n## Licence\n\nThis module is available under the [MIT Licence](http://opensource.org/licenses/MIT)\n\n## Documentation\n\nMore complete documentation can be found using the application sandbox ([Link](https://yahoo-fantasy-node-docs.vercel.app/)). This sandbox is always a work in progress, if I've learned anything it's that nothing is ever complete.\n\nThe API can be used by simply importing the module and querying data, since version 4.0 the authentication flow has been built into the library to make things easier for users.\n\n    // import the library\n    const YahooFantasy = require('yahoo-fantasy');\n\n    // you can get an application key/secret by creating a new application on Yahoo!\n    const yf = new YahooFantasy(\n      Y!APPLICATION_KEY, // Yahoo! Application Key\n      Y!APPLICATION_SECRET, // Yahoo! Application Secret\n      tokenCallbackFunction, // callback function when user token is refreshed (optional)\n      redirectUri // redirect endpoint when user authenticates (optional)\n    );\n\n    // you can authenticate a user by setting a route to call the auth function\n    // note: from v4.0 on, public queries are now supported; that is, you can query\n    // public resources without authenticating a user (ie/ game meta, player meta,\n    // and information from public leagues)\n    yf.auth(\n      response // response object to redirect the user to the Yahoo! login screen\n    )\n\n    // you also need to set up the callback route (defined as the redirect uri above)\n    // note: this will automatically set the user and refresh token if the request is\n    // successful, but you can also call them manually, described below\n    yf.authCallback(\n      request, // the request will contain the auth code from Yahoo!\n      callback // callback function that will be called after the token has been retrieved\n    )\n\n    // if you're not authenticating via the library you'll need to set the Yahoo!\n    // token for the user\n    yf.setUserToken(\n      Y!CLIENT_TOKEN\n    );\n\n    // you can do the same for the refresh token...\n    // if you set this and the token expires (lasts an hour) then the token will automatically\n    // refresh and call the above \"tokenCallbackFunction\" that you've specified to persist the\n    // token elsewhere\n    yf.setRefreshToken(\n      Y!CLIENT_REFRESH_TOKEN\n    );\n\n    // query a resource/subresource\n    yf.{resource}.{subresource} (\n      {possible argument(s)},\n      function cb(err, data) {\n        // handle error\n        // callback function\n        // do your thing\n      }\n    );\n\n### Starting with v3.1.0 you can also use a promise chain to query resources and subresources\n\n    yf.{resource}.{subresource} (\n      {possible argument(s)}\n    )\n    .then(data => // do your thing)\n    .catch(err => // handle error)\n\n### This also opens the door to use async/await in version of node that support it\n\n    try {\n      let data = await yf.{resource}.{subresource} (\n        {possible argument(s)}\n      )\n\n      // do your thing\n    } catch(err) {\n      // handle error\n    }\n\n## Bugs & Issues\n\nThis project is very much still a work in progress, please report any issues via the [GitHub issues page](https://github.com/whatadewitt/yfsapi/issues).\n\n## Changelog\n\n### 5.2.2\n\n- Fixed a bug where transactions somehow didn't have players and would cause a crash\n\n### 5.2.1\n\n- Dependabot alert fixes\n\n### 5.2.0\n\n- Add support for `lastweek` and `lastmonth` as arguments in `player.stats` resource (Thanks to [nosecreek](https://github.com/nosecreek)!)\n\n### 5.1.0\n\n- Cleaned up the `user.game_leagues` function to have the `game.league` array be an array of objects instead of an array of a single array holding an object.\n\n### 5.0.0\n\n- My NextJS docs site was giving me grief about ESM/CJS imports so I made some changes that should work for whatever import method you want to use\n- Updated the `mapScoreboard` function that is used by the league resource to simplify the `stat_winners` array to show the winning `stat_id` and `team_key` (or `is_tied`), rather than having them nested inside a `stat_winner` object\n\n### 4.2.0\n\n- Fixed a bug where querying player stats for a given week wasn't working.\n- Updated the `player.stats` function to accept a week OR a date (format `yyyy-mm-dd`) as the 2nd param.\n- Fixed a bug that would cause the function to fail silently if trying to request stats for a given `week` for players outside of the NFL (for this you can just get the weeks from the game settings and make multiple queries for each day of the week).\n- Fixes [Issue #79](https://github.com/whatadewitt/yahoo-fantasy-sports-api/issues/79) (Big thanks to [jimweigandt](https://github.com/jimweigandt) and [rdbaron](https://github.com/rdbaron) for the help finding / debugging the issue)\n\n### 4.1.5\n\n- Fixed a bug where certain league settings were not loading properly for some older leagues. (merge [PR #80](https://github.com/whatadewitt/yahoo-fantasy-sports-api/pull/80)) (Thanks [connor4312](https://github.com/connor4312))\n\n### 4.1.4\n\n- Fixed a bug where the response from the token refresh was not being included in the promise chain. (merge [PR #78](https://github.com/whatadewitt/yahoo-fantasy-sports-api/pull/78)) (Thanks [connor4312](https://github.com/connor4312))\n\n### 4.1.3\n\n- Fixed a bug where Yahoo! apparently no longer requires `;type=week` when building a URL for team.stats and player.stats, leading to no stats coming back for those resources ([Issue #70](https://github.com/whatadewitt/yfsapi/issues/70\"))\n\n#### 4.1.2\n\n- Fixed bug where \"selected position\" was no longer working due to a change in the data format coming from Yahoo! (merge [PR #69](https://github.com/whatadewitt/yahoo-fantasy-sports-api/pull/69)) (Thanks [brisberg](https://github.com/brisberg))\n\n#### 4.1.1\n\n- Small change to the way the resource and collection files are being imported as it was causing issues on some hosts...\n\n#### 4.1.0\n\n- Maybe would have made sense as a 5.0.0 as there may be breaking changes, but I haven't been able to find any yet...\n- the authCallback() function will now return an object with the user's access_token and refresh_token\n- the auth() function will accept a \"state\" string, allowing for state persistence through the authentication process\n- re-enabled the transactions.fetch() collection call\n- cleaned up the \"wavier_days\" and \"stat_categories\" objects on league resources\n- added deprecation warnings to the game.leagues and game.players functions as they're not very useful in that context\n\n#### 4.0.0\n\n- Added auth(), authCallback, setRefreshToken() functions to the library\n- Automatically handle refreshing of the token and call a user defined function when the token has expired\n- Added support for public queries\n- General cleanup\n\n#### 3.2.0\n\n- Added \"players\" subresource to \"league\" in order to obtain weekly / season stats for a player based on league settings\n- Fixed a bug where the starting status wasn't properly being returned due to a shift in how the data was being returned\n- Removed use of \"request\" library for size and performance reasons\n- General code optimizations and improvements\n\n#### 3.1.2\n\n- Updated outdated dependencies\n\n#### 3.1.1\n\n- Resolve error when no team logo is present ([Issue #42](https://github.com/whatadewitt/yfsapi/issues/42))\n\n#### 3.1.0\n\n- Introduced `promise` based flow for all endpoints as an alternative to callbacks. Thanks [Marois](https://github.com/ryus08)!\n\n#### 3.0.4\n\n- Fixed a bug in the players.league collection call where it was trying to use split on an array... ([Issue #46](https://github.com/whatadewitt/yfsapi/pull/46\")).\n- Fixed similar bugs in other places...\n\n#### 3.0.3\n\n- Added the ability to specify a date or week when querying the `team.stats` resource.\n- Unit test fixes ([Issue #42](https://github.com/whatadewitt/yfsapi/issues/42)). Thanks [Marios](https://github.com/ryus08)!\n- Updated \"vulnerable\" dependencies.\n\n#### 3.0.2\n\n- Fixed an issue with the `user.game_leagues` resource, where the data was not at all user friendly (renamed `leagues` to `games` at the top level of the return object)\n\n#### 3.0.1\n\n- Fixed some typos in some import statements which caused issues on some servers\n\n#### 3.0.0\n\n- Major refactor to use ES6?... 2015? ...2018? Whatever the hell they're calling it now...\n- Using ES Modules (mjs) files where possible\n- Removed transactions collections (they'll be back!)\n\n#### 2.0.4\n\n- Added a fix to give a cleaner value for the new \"batting order\" attribute in the player oject.\n\n#### 2.0.3\n\n- Fixed a bug where the league players collection was not properly parsing the ownership subresource\n\n#### 2.0.2\n\n- Fixed a bug where \"mapTeamPoints\" helper function was not defining \"self\". Thanks [platky](https://github.com/platky)!\n\n#### 2.0.1\n\n- Removed the code that added a \"reason\" to errors coming from Yahoo! as it was breaking other errors. Retry notifications should now be handled within the application using the module.\n\n#### 2.0.0\n\n- Moved to Yahoo!'s OAuth2.0 authentication mechanism.\n\n#### 1.0.2\n\n- Fixed game resource roster postions callback bug.\n\n#### 1.0.1\n\n- Fixed a typo that was breaking team mapping.\n\n#### 1.0.0\n\n- Breaking changes\n- Fixed NFL scoreboard/matchups bug ([Issue #19](https://github.com/whatadewitt/yfsapi/issues/19))\n- In fixing this bug I realized that my \"team\" set up was really only useful for MLB fantasy, so I rewrote team mapping to work better across all sports and give additional details that weren't previously reported. This will cause errors if you are using the team.manager attribute in your code.\n\n#### 0.5.3\n\n- Fixed a bug where leagueFetch was throwing an error, thanks [danielspector](https://github.com/danielspector)!\n\n#### 0.5.2\n\n- Fixed a bug where player stats by week url was not being created properly, thanks [withsmilo](https://github.com/withsmilo)!\n\n#### 0.5.1\n\n- Fixed a bug where collections that contained subresources would return no data.\n\n#### 0.5.0\n\n- Added \"Transactions\" collection with functionality to add players, drop players, and add/drop players, thanks again [githubsmilo](https://github.com/githubsmilo)!\n\n#### 0.4.4\n\n- Fixed a bug in player.draft_analysis, thanks [githubsmilo](https://github.com/githubsmilo)!\n\n#### 0.4.3\n\n- Added weeks param for league.scoreboard\n- Added weeks param for team.matchups\n- Fixed a bug where individual players weren't mapping properly\n- Minor code cleanup\n\n#### 0.4.2\n\n- Added the ability to specify a date or week when querying the roster resource.\n- Cleaned up the player normalization model\n- Fixed a bug where the team.roster call was erroring\n\n#### 0.4.1\n\n- Fixes to how POST data is handled\n\n#### 0.4.0\n\n- Significantly restructured the code to have more consistency and set it up better for future plans, namely POST methods and proper unit testing\n- Removed the \"refresh user token\" and instead return the error to the user who can handle the refresh within their application.\n\n#### 0.3.1\n\n- Additional player attributes added, thanks [ryus08](https://github.com/ryus08)!\n\n#### 0.3.0\n\n- Added a method to refresh the user's token if it has expired.\n\n#### 0.2.2\n\n- Hotfix to fix \"Teams\" collection - use error first convention\n\n#### 0.2.0\n\n- Made helper classes more consistent\n- Added collections for games, leagues, players, and teams\n- Moved to error first convention because JavaScript\n\n#### 0.1.2\n\n- Added 'Team Matchups' subresource\n- Added 'League Scoreboard' subresource\n- Minor code cleanup and improvements\n\n#### 0.1.1\n\n- Refactored module to fix a bug where user sessions were not necessarily unique because of require caching.\n\n#### 0.1\n\n- Initial release.\n"
    },
    {
        "repo": "/lbenz730/ncaahoopR",
        "language": "R",
        "readme_contents": "# ncaahoopR <img src=\"figures/logo.png\" align=\"right\" />\n\n`ncaahoopR` is an R package for working with NCAA Basketball Play-by-Play Data. It scrapes play-by-play data and returns it to the user in a tidy format, allowing the user to explore the data with assist networks, shot charts, and in-game win-probability charts.\n\nFor pre-scraped schedules, rosters, box scores, and play-by-play data, check out the [ncaahoopR_data repository](https://github.com/lbenz730/ncaahoopR_data).\n\nTo see the lastest changes in version 1.5, view the change log [here](https://lukebenz.com/post/ncaahoopr_v1.5/).\n\n## Installation\nYou can install `ncaahoopR` from GitHub with:\n\n``` r\n# install.packages(\"devtools\")\ndevtools::install_github(\"lbenz730/ncaahoopR\")\n```\n\nIf you encounter installation issues, the following tips have helped a few users successfully install the package:\n\n* If given the option to compile any packages from source rather than installing existing binaries, choose `'No'`.\n* Windows users with trouble installing the package should try running the following command before reinstalling the package: `Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS = \"true\")`\n* Windows users with trouble installing `devtools` should try first installing the `backports` package via `install.packages(\"backports\")`.\n\n\n## Functions\nSeveral functions use ESPN game_ids. You can find the game_id in the URL for the game summary, \nas shown in the URL for the summary of the UMBC-Virginia game below.\n![game_id](figures/espn.png)\n\n### Scraping Data\n* ```get_pbp(team, season)```: Get entire current season's worth of play-by-play data for a given team and season. `season` defaults to current season, but can be specified in \"2019-20\" form. \n* ```get_pbp_game(game_ids, extra_parse)```:  Get play-by-play data for a specific vector of ESPN game_ids. `extra_parse` is a logical whether to link shot variables and attempt possesion parsing. Default =   `TRUE`.\n* ```get_roster(team, season)```: Get a particular team's roster. `season` defaults to current season, but can be specified in \"2019-20\" form. \n* ```get_schedule(team, season)```: Get a team's schedule. `season` defaults to current season, but can be specified in \"2019-20\" form. \n* ```get_game_ids(team, season)```: Get a vector of ESPN game_ids for all games involving ```team``` specified. `season` defaults to current season, but can be specified in \"2019-20\" form.\n* ```get_master_schedule(date)```: Get schedule of all games for given date. Use `YYYY-MM-DD` date formatting.\n* `get_boxscore(game_id)`: Returns list of 2 data frames, one with each teams' box score for the game in question. Written by [Jared Andrews](https://github.com/j-andrews7).\n\n* `season_boxscore(team, season = current_season, aggregate = 'average')`: Returns (aggregated) player stats over the course of a season for a given team.\n        * `team`: team to return player stats for.\n        * `season`: of form YYYY-YY. Defaults to current season.\n        * `aggregate`: one of 'average' (per-game average statistics), 'total' (sums of season stats) or 'raw' (just return all box scores binded together). 'average' is the default. Contributed in collaboration with [Kurt Wirth](https://github.com/kurtawirth)\n\nThe `team` parameter in the above functions must be a valid team name from the `ids` dataset built into the package. See the __Datasets__ section below for more details.\n\n### Win-Probability and Game-Flow Charts\n\n__Win Probability Charts__\n\nThe latest function for plotting win probability charts is `wp_chart_new`. Following the 2021-22 season other win probability chart functions will be deprecated and replaced by this function (it will be renamed to `wp_chart` but I don't want to break any existing pipelines during the season). It no longer requires users to input colors. For best results consider saving via ggsave(filename, height = 9/1.2, width = 16/1.2) (or some other 16/9 aspect ratio.) \n\n```wp_chart_new(game_id, home_col = NULL, away_col = NULL, include_spread = T, show_legend = T)```\n\n* ```game_id``` ESPN game_id for the desired contest.\n* ```home_col``` Chart color for home team (if NULL will default to `ncaa_colors` primary_color field).\n* ```away_col```: Chart color for away team (if NULL will default to `ncaa_colors` primary_color field).\n* `include_spread`: Logical, whether to include pre-game spread in Win Probability calculations. Default = `TRUE`.\n* ```show_legend```: Logical, whether or not to show legend/text on chart. Default = `TRUE`.\n\n\nA prior version of `wp_chart` used base R while `gg_wp_chart` used the `ggplot2` plotting library. As of the 2020-21 season, both functions call the same `ggplot2` library, and `gg_wp_chart` now simply aliases `wp_chart`\n\n```wp_chart(game_id, home_col, away_col, include_spread = T, show_legend = T)```\n\n* ```game_id``` ESPN game_id for the desired contest.\n* ```home_col``` Chart color for home team.\n* ```away_col```: Chart color for away team.\n* `include_spread`: Logical, whether to include pre-game spread in Win Probability calculations. Default = `TRUE`.\n* ```show_legend```: Logical, whether or not to show legend/text on chart. Default = `TRUE`.\n\n\n```gg_wp_chart(game_id, home_col, away_col, show_labels = T)```\n\n* ```game_id``` ESPN game_id for the desired contest.\n* ```home_col``` Chart color for home team.\n* ```away_col```: Chart color for away team.\n* `include_spread`: Logical, whether to include pre-game spread in Win Probability calculations. Default = `TRUE`.\n* `show_labels`: Logical whether Game Excitement Index and Minimum Win Probability metrics should be displayed on the plot. Default = `TRUE`.\n\n__Game Flow Charts__\n\n```game_flow(game_id, home_col, away_col)```\n\n* ```game_id``` ESPN game_id for the desired contest.\n* ```home_col``` Chart color for home team.\n* ```away_col``` Chart color for away team.\n\n__Game Excitement Index__\n\n```game_exciment_index(game_id, include_spread = T)```\n\n* `include_spread`: Logical, whether to include pre-game spread in Win Probability calculations. Default = `TRUE`.\n\nReturns ```GEI``` (Game Excitement Index) for given ESPN game_id. For more information about how these win-probability charts are fit and how Game Excitement Index is calculated, check out the below links\n\n\n\n* [Model Methodology](https://lukebenz.com/post/ncaahoopr_win_prob/)\n* [Game Excitement Index](https://lukebenz.com/post/gei/)\n\n__Game Control Measures__\n\n```average_win_prob(game_id, include_spread = T)```\n\n* ESPN game_id for which to compute time-based average win probability (from perspective of home team).\n* `include_spread`: Logical, whether to include pre-game spread in Win Probability calculations. Default = `TRUE`.\n\n```average_score_diff(game_id)```\n\n* ESPN game_id for which to compute time-based average score differential (from perspective of home team).\n\n\n\n### Assist Networks\n\n__Traditional Assist Networks__\n\n```assist_net(team, season, node_col, three_weights = T, threshold = T, message = NA, return_stats = T)```\n\n* ```team``` is the ESPN team name, as listed in the `ids` data frame.\n* ```season``` Options include \"2018-19\" (for entire season), or a vector of ESPN game IDs. \n* ```node_col``` is the node color for the graph.\n* ```three_weights``` (default = ```TRUE```): Logical. If TRUE, assisted three-point shots are given a weight of 1.5. If FALSE, assisted three-point shots are given a weight of 1. In both cases, assisted two-point shots are given a weight of 1. \n* `threshold` (default = 0) Number between 0-1 indicating minimum percentage of team's assisted baskets a player needs to be involved in to be included in network graph.\n* ```message``` (default = ```NA```) Option for custom message to replace graph title when using a subset of the season (e.g. conference play).\n* `return_stats` (default = `TRUE`) Return Assist Network-related statistics\n\n__Circle Assist Networks and Player Highlighting__\n\n```circle_assist_net(team, season, highlight_player = NA, highlight_color = NA, three_weights = T, threshold = 0, message = NA, return_stats = T)```\n\n* ```team``` is the ESPN team name, as listed in the `ids` data frame.\n* ```season```: Options include \"YYYY-YY\" (for entire season), or a vector of ESPN game IDs. \n* ```highlight_player``` (default = `NA`) Name of player to highlight in assist network. `NA` yields full-team assist network with no player highlighting.\n* ```highlight_color``` (default = `NA`) Color of player links to be highlighted. `NA` if ```highlight_player``` is `NA`.\n* ```three_weights``` (default = ```TRUE```): Logical. If TRUE, assisted three-point shots are given a weight of 1.5. If FALSE, assisted three-point shots are given a weight of 1. In both cases, assisted two-point shots are given a weight of 1.  \n* `threshold` (default = 0) Number between 0-1 indicating minimum percentage of team's assisted baskets a player needs to be involved in to be included in network graph.\n* `message` (default = `NA`) User-supplied plot title to overwrite default plot title, if desired.\n* `return_stats` (default = `TRUE`) Return Assist Network-related statistics\n\n### Shot Charts\nThere are currently three functions for scraping and plotting shot location data. These functions are written by [Meyappan Subbaiah](https://github.com/meysubb).\n\n`get_shot_locs(game_id)`: Returns data frame with shot location data when available. Note that if the `extra_parse` flag in `get_pbp_game` is set to `TRUE`, shot location data will already be included in the play-by-play data (if available).\n\n* `game_id`: ESPN game_id from which shot locations should be scraped.\n\n`game_shot_chart(game_id, heatmap = F)`: Plots shots for a given game.\n\n* `game_id`: ESPN game_id from which shot locations should be scraped.\n* `heatmap` (default = `FALSE`): Logical, whether to use density-heat map or plot individual points.\n* shot-plotting colors derived from team's primary color listed in `ncaa_colors` data frame.\n\n`team_shot_chart(game_ids, team, heatmap = F)`: Plots shots taken by team during a given set of game(s).\n\n* `game_ids`: Vector of ESPN game_ids from which shot locations should be scraped.\n* `team`: Which team to chart shots for.\n* `heatmap` (default = `FALSE`): Logical, whether to use density-heat map or plot individual points.\n* shot-plotting colors derived from team's primary color listed in `ncaa_colors` data frame.\n\n`opp_shot_chart(game_ids, team, heatmap = F)`: Plots shots against a team during a given set of game(s).\n\n* `game_ids`: Vector of ESPN game_ids from which shot locations should be scraped.\n* `team`: Which team to chart opponents' shots for.\n* `heatmap` (default = `FALSE`): Logical, whether to use density-heat map or plot individual points.\n\n\n## Datasets\n\n```dict``` A data frame for converting between team names from various sites.\n \n * ```NCAA```: the name of the team, as listed on the NCAA website\n * ```ESPN```: the name of the team, as listed in ESPN URLs\n * ```ESPN_PBP```: the name of the team, as listed in the ESPN Play-By-Play logs\n * ```Warren_Nolan```: the name of the team, as listed on WarrenNolan.com\n * ```Trank```: the name of the team, as listed on barttorvik.com\n * ```name_247```: the name of the team, as listed on 247Sports.com\n\n```ids``` A data frame for converting between team names from various sites.\n \n * ```team```: the name of the team to be supplied to functions in ncaahoopR package\n * ```id```: team id; used in ESPN URLs\n * ```link```: link; used in ESPN URLs\n * ```espn_abbrv`: Short 3-4 character code used in ESPN abbreviations\n \n \n ```ncaa_colors``` A data frame of team color hex codes, pulled from [teamcolorcodes.com](https://teamcolorcodes.com/). Additional data coverage provided by [Luke Morris](https://lukesmorris.com).\n \n\n* `ncaa_name`: The name of the team, as listed on the NCAA website (same as `dict$NCAA`)\n* `espn_name`: The name of the team, as listed in ESPN URLs (same as dict$ESPN)}\n* `primary_color`: Hexcode for team's primary color.\n* `secondary_color`: Hexcode for team's secondary color, when available.\n* `tertiary_color`: Hexcode for team's tertiary color, when available.\n* `color_4`: Hexcode for team's 4th color, when available.\n* `color_5`: Hexcode for team's 5th color, when available.\n* `color_6`: Hexcode for team's 6th color, when available.\n\n![Available Colors](figures/colors.png)\n_Primary and secondary colors for all 353 teams._\n\n\nThese datasets can be loaded by typing ```data(\"ids\")```, `data(\"ncaa_colors\")`, or ```data(\"dict\")```, respectively.\n\n## Examples\n#### Win Probability Charts\n\n![wp3](figures/wp_chart_new.png)\n`wp_chart_new(401403405)`\n\n![wp](figures/wp_chart.png)\n```wp_chart(game_id = 401082978, home_col = \"gray\", away_col = \"orange\")```\n\n![wp2](figures/wp_chart_2.png)\n```wp_chart(game_id = 401168364, home_col = \"#7BAFD4\", away_col = \"#001A57\")```\n\n#### Game Flow Chart\n![game_flow](figures/game_flow.png)\n```game_flow(game_id = 401082669, home_col = \"blue\", away_col = \"navy\")```\n\n#### Single-Game Assist Network\n![Assist Single](figures/oklahoma.png)\n```assist_net(team = \"Oklahoma\", node_col = \"firebrick4\", season = 400989185)```\n\n#### Season-Long Assist Network\n![Assist All](figures/yale.png)\n```assist_net(team = \"Yale\", node_col = \"royalblue4\", season = \"2017-18\")```\n\n\n#### Circle Assist Networks\n![UNC](figures/unc.png)\n```circle_assist_net(team = \"UNC\", season = 401082861)```\n\n#### Player Highlighting\n![Frankie Ferrari](figures/ferrari.png)\n```circle_assist_net(team = \"San Francisco\", season = \"2018-19\", highlight_player = \"Frankie Ferrari\", highlight_color = \"#FDBB30\")```\n\n#### Shot Charts\n![heatmap](figures/heat_map.png)\n```game_shot_chart(game_id = 401168364, heatmap = T)```\n\n![shotchart](figures/shot_chart.png)\n`game_shot_chart(game_id = 401168364)`\n\n## Glossary\nPlay-by-Play files contain the following variables:\n\n* ```game_id```: ESPN game_id for the game in question.\n* ```date```: Date of game.\n* ```home```: Name of the home team.\n* ```away```: Name of the away team.\n* ```play_id```: Unique identifier of play/event in sequence of game events.\n* ```half```: Period of action in the game. 1 and 2 denote the first and second halves of play, while 3 denotes OT1, 4 denotes OT2 etc.\n* ```time_remaining_half```: Time remaining in the period as it would appear on a scoreboard.\n* ```secs_remaining```: Time remaining in regulation, in seconds.\n* ```secs_remaining_absolute```: The time remaining until the game is over, in seconds. For example a game that goes to overtime would begin with 2700 seconds remaining (2400 for regulation and 300 for overtime), and regulation would end with 300 seconds remaining.\n* ```description```: A description of the play/game event.\n* `action_team`: home/away indicating action\n* ```home_score```: Home team's score.\n* ```away_score```: Away team's score.\n* ```score_diff```: Score differential from the home team's perspective (```home_score``` - ```away_score```)\n* ```play_length```: Duration of the the given play, in seconds.\n* `scoring_play`: Boolean indicating scoring play.\n* `foul`: Boolean indicating foul.\n* ```win_prob```: Win probability for the home team.\n* ```naive_win_prob```: Win probability for the home team not factoring in pre-game point spread. Useful for computation of win probability added (WPA).\n* ```home_timeout_remaining```: Number of timeouts remaining for the home team.\n* ```away_timeout_remaining```: Number of timeouts remaining for the away team.\n* ```home_favored_by```: Number of points by which the home team is favored, prior to tip-off. If Vegas point spread is available on ESPN, that is used as the default. When not available, an attempt is made to impute the pre-game point spread from derived team strengths. Imputed point spreads are not available for games prior to the 2016-17 season or when one of the teams is not in Division 1.\n* ```total_line```: Total Vegas over/under for the game, where available.\n* ```referees``` Referees for the game.\n* `arena_location`: City in which the game was played.\n* `arena`: Name of arena where game was played.\n* `capacity`: Capacity of arena where game was played.\n* `attendance`: Attendance of game, where available.\n* `wrong_time`: An attempt to label play-by-play events tagged at the wrong time. These are filtered out of all graphical and statistical helper functions, but may still be useful for certain analyses where time of event is of less importance.\n\nIf `extra_parse = TRUE` in `get_pbp_game`, the following variables are also included.\n\n* `shot_x`: The half-court x coordinate of shot. \n* `shot_y`: The half-court y coordinate of shot. (0,0) represents the bottom left corner and (50, 47) represents the top right corner (from persepective of standing under hoop).\n* `shot_team`: Name of team taking shot.\n* `shot_outcome`: Whether the shot was `made` or `missed`.\n* `shooter`: Name of player taking shot.\n* `assist`: Name of player asssisting shot (assisted shots only)\n* `three_pt`: Logical, if shot is 3-point field goal attempt.\n* `free_throw`: Logical, if shot is free throw attempt.\n\n---\nStand-alone shot location data frames contain the following variables.\n\n* `team_name`: Name of shooting team.\n* `shot_text`: Description of shot.\n* `color`: Color hexcode used to render shot chart graphic on ESPN.\n* `date`: Date of game\n* `outcome`: Whether the shot was made or missed\n* `shooter`: Player attempting the shot\n* `assister`: Playing assisting the shot\n* `three_pt`: Logical, whether the shot is a 3-point attempt\n* `x`: x-coordinate of shot location\n* `y`: y-coordinate of shot location\n\n#### Raw Shot Location Data\n\nThe court is 94 feet long (baseline to baseline, interior) and 50 feet wide (sideline to sideline, interior). The court's origin is located at center court, with the court being displayed in a horizontal fashion (the baskets lie along the `x` axis). In this coordinate grid, `-x` corresponds to the left basket and `+x` to the right. `+y` corresponds to the upper sideline of the court, and `-y` to the lower.\n\nFollowing ESPN's convention, the home team's shot locations are on the `+x` basket, and the visiting team's on the `-y` basket. The center of each basket is at `(+/-41.75, 0)`.\n\nThe data pulled via `get_shot_locs()` follows this orientation.\n\n#### Shot Chart Data\n\nFor the shot chart functions, the `x` and `y` coordinates are \"flipped\" such that the court is oriented vertically, and each team would appear to be shooting on the same basket. That is, the home team and away team are both shooting on a basket centered at `(0, -41.75)`. This is done out of convenience and does not affect any underlying analyses\n"
    },
    {
        "repo": "/Drarig29/brackets-manager.js",
        "language": "TypeScript",
        "readme_contents": "# brackets-manager.js\n\n[![npm](https://img.shields.io/npm/v/brackets-manager.svg)](https://www.npmjs.com/package/brackets-manager)\n[![Downloads](https://img.shields.io/npm/dt/brackets-manager.svg)](https://www.npmjs.com/package/brackets-manager)\n[![Package Quality](https://packagequality.com/shield/brackets-manager.svg)](https://packagequality.com/#?package=brackets-manager)\n\nA simple library to manage tournament brackets (round-robin, single elimination, double elimination).\n\nIt contains all the logic needed to manage tournaments.\n\n# Features\n\n- [BYE](https://en.wikipedia.org/wiki/Bye_%28sports%29) supported: only during creation (for seeding and balancing).\n- Forfeit supported: only during updates.\n- Match supported (locked, waiting, ready, running, completed, archived).\n- Multiple stages per tournament.\n  - So you can first have a round-robin stage (which will give you a seeding), then an elimination stage.\n\n# Interface\n\n- This library doesn't come with a GUI to create and update tournaments.\n- You can use [brackets-viewer.js](https://github.com/Drarig29/brackets-viewer.js) to display the current state of a stage.\n- It is designed to be used with any type of storage (JSON, in-memory, SQL, Redis, and more).\n- Some storage implementations are already available (see the [documentation](https://drarig29.github.io/brackets-docs/user-guide/storage/)).\n\n# Getting Started\n\nFor more information, see the [documentation](https://drarig29.github.io/brackets-docs/getting-started/).\n\n```js\nconst { JsonDatabase } = require('brackets-json-db');\nconst { BracketsManager } = require('brackets-manager');\n\nconst storage = new JsonDatabase();\nconst manager = new BracketsManager(storage);\n\n// Create an elimination stage for tournament `3`.\nawait manager.create.stage({\n  tournamentId: 3,\n  name: 'Elimination stage',\n  type: 'double_elimination',\n  seeding: ['Team 1', 'Team 2', 'Team 3', 'Team 4'],\n  settings: { grandFinal: 'double' },\n});\n\nawait manager.update.match({\n  id: 0, // First match of winner bracket (round 1)\n  opponent1: { score: 16, result: 'win' },\n  opponent2: { score: 12 },\n});\n```\n\nRendered with the [viewer](https://github.com/Drarig29/brackets-viewer.js):\n\n<img width=\"581\" alt=\"image\" src=\"https://user-images.githubusercontent.com/9317502/232905749-195c4f40-527c-4f17-a639-82f639432ed9.png\">\n\nAs you can see, the [manager](https://drarig29.github.io/brackets-docs/reference/manager/classes/BracketsManager.html) is composed of submodules, which themselves have methods:\n  - [`create`](https://drarig29.github.io/brackets-docs/reference/manager/classes/_internal_.Create.html) module: [`manager.create.stage()`](https://drarig29.github.io/brackets-docs/reference/manager/classes/_internal_.Create.html#stage)\n  - [`get`](https://drarig29.github.io/brackets-docs/reference/manager/classes/_internal_.Get.html) module: [`manager.get.seeding()`](https://drarig29.github.io/brackets-docs/reference/manager/classes/_internal_.Get.html#seeding), [`manager.get.finalStandings()`](https://drarig29.github.io/brackets-docs/reference/manager/classes/_internal_.Get.html#finalStandings), ...\n  - [`update`](https://drarig29.github.io/brackets-docs/reference/manager/classes/_internal_.Update.html) module: [`manager.update.match()`](https://drarig29.github.io/brackets-docs/reference/manager/classes/_internal_.Update.html#match), [`manager.update.confirmSeeding()`](https://drarig29.github.io/brackets-docs/reference/manager/classes/_internal_.Update.html#confirmSeeding), ...\n  - [`reset`](https://drarig29.github.io/brackets-docs/reference/manager/classes/_internal_.Reset.html) module: [`manager.reset.seeding()`](https://drarig29.github.io/brackets-docs/reference/manager/classes/_internal_.Reset.html#seeding), [`manager.reset.matchGame()`](https://drarig29.github.io/brackets-docs/reference/manager/classes/_internal_.Reset.html#matchResults), ...\n  - [`delete`](https://drarig29.github.io/brackets-docs/reference/manager/classes/_internal_.Delete.html) module: [`manager.delete.stage()`](https://drarig29.github.io/brackets-docs/reference/manager/classes/_internal_.Delete.html#stage)\n  - [`find`](https://drarig29.github.io/brackets-docs/reference/manager/classes/_internal_.Find.html) module: [`manager.find.match()`](https://drarig29.github.io/brackets-docs/reference/manager/classes/_internal_.Find.html#match), [`manager.find.nextMatches()`](https://drarig29.github.io/brackets-docs/reference/manager/classes/_internal_.Find.html#nextMatches), ...\n  - [`storage`](https://drarig29.github.io/brackets-docs/reference/manager/interfaces/Storage.html) module: this gives you access to the abstract storage interface. Use it as a last resort.\n\nYou can navigate the API documentation here: [`BracketsManager` class documentation](https://drarig29.github.io/brackets-docs/reference/manager/classes/BracketsManager.html)\n\nAll the helpers defined by the library are available [here](https://drarig29.github.io/brackets-docs/reference/manager/modules/helpers.html):\n\n```js\nconst { helpers } = require('brackets-manager');\n```\n\n# Credits\n\nThis library has been created to be used by the [Nantarena](https://nantarena.net/).\n\nIt has been inspired by:\n\n- [Toornament](https://www.toornament.com/en_US/) (configuration, API and data format)\n- [Challonge's bracket generator](https://challonge.com/tournaments/bracket_generator)\n- [jQuery Bracket](http://www.aropupu.fi/bracket/) (feature examples)\n"
    },
    {
        "repo": "/sedemmler/WagerBrain",
        "language": "Python",
        "readme_contents": "# WagerBrain\nA package containing the essential math and tools required for sports betting and gambling. Once you've scraped odds from Covers.com, Pinnacle, Betfair, or wherever, import WagerBrain and start hunting for value bets.\n\n![Image of The Big Board](https://miro.medium.com/max/1312/1*bGOGcEPpsa0tetM5u-J9NA.jpeg)\n\n**Phase 1 (_complete_):** \n - Convert Odds between American, Decimal, Fractional\n - Convert Odds to Implied Win Probabilities and back to Odds\n - Calculate Profit and Total Payouts\n - Calculate Expected Value\n - Calculate Kelly Criterion\n - Calculate Parlay Odds, Total Payout, Profit\n\n \n **Phase 2 (_complete_):**\n - Evaluate Wager-Arbitrage Opportunities\n - Calculate bookmaker spread/cost\n - Calculate the Bookmaker's Vig\n - Calculate Win Probability from a team's ELO (538-style)\n\n \n **Phase 3 (_in progress_):**\n - Scrapers to gather data (Basketball Reference, KenPom etc.)  [_Partially implemented_]\n - Value Bets (take in sets of odds, probabilities and output the most effective betting implementation)\n - Scan for Arbitrage (search scrape bookmakers to feed into Phase 2's Arbitrage evaluator)\n\n\n# Examples\n\nParlay 3 wagers from different sites offering different odds-styles:\n```\nodds = [1.91, -110, '9/10']\nparlay_odds(odds)\n>>>> 6.92\n```\nNo clue how to read decimal odds because you're American? (wager * decimals odds, though...super simple), then convert them back to American-style odds:\n```\namerican_odds(6.92)\n>>>> +592\n``` \nWhat's the Vig on the Yankees vs Dodgers?\n```\nYankees -115\nDodgers +105\nBetting 115 to win 100 on Yankees\nBetting 100 to win 205 on Dodgers\n\nvig(115,215,100,205)\n>>>> 2.26%\n```\nArbitrage Example\n```\n            5Dimes\tPinnacle\nDjokovic    *1.360*\t1.189\nNadal\t    3.170\t*5.500*\n\nodds = [1.36, 5.5]\nstake = 1000\nbasic_arbitrage(odds, stake)\n\n>>>> Bet $801.53 on Djokovic\n>>>> Bet $198.47 on Nadal\n>>>> Win $90.51 regardless of the outcome\n```\nKenPom NCAAB Scraper\n```\nken_pom_scrape()\n>>>>\n        Rk                    Team  Conf  ...   OppO   OppD  NCOS AdjEM\n0      1.0                  Kansas   B12  ...  107.4   94.7        9.58\n1      2.0                 Gonzaga   WCC  ...  103.5  101.0       -2.09\n2      3.0                  Baylor   B12  ...  106.4   96.2        1.38\n3      4.0                  Dayton   A10  ...  104.1  101.3       -0.74\n4      5.0                    Duke   ACC  ...  106.0   98.7        2.60\n..     ...                     ...   ...  ...    ...    ...         ...\n364  349.0  Maryland Eastern Shore  MEAC  ...   97.6  104.1        7.78\n365  350.0                  Howard  MEAC  ...   96.7  105.0        0.96\n366  351.0  Mississippi Valley St.  SWAC  ...   97.8  103.9        5.14\n367  352.0            Kennesaw St.  ASun  ...  102.0  103.7        4.10\n368  353.0             Chicago St.   WAC  ...  100.6  104.3       -0.75\n```\n"
    },
    {
        "repo": "/freeCodeCamp/league-for-good",
        "language": "JavaScript",
        "readme_contents": "# FCC League-For-Good\n\nThis is a free, open-source web application designed to help sports leagues track their player and team stats, and simplify the other day-to-day tasks involved with team management. It was designed to accommodate many popular sports.\n\n## Join Us On Slack!\n\nYou can now join us on slack. [Get Invite Here](https://fcc-slack-invite.herokuapp.com/)\n\n## Getting Started\n\n### Prerequisites\n\n- [NodeJS](https://nodejs.org)\n- [MongoDB](https://www.mongodb.org)\n\nIn order for the authorization component of this app to work, it needs to be registered with Google. Here is a helpful walkthrough of that process: https://developers.google.com/identity/sign-in/web/devconsole-project.\n\nYou will want to register **Type** as **Web application**, set **Authorized JavaScript origins** to\nhttp://localhost:4000 (if you're running the application locally) and set the **Authorized\nredirect URI** to http://localhost:4000/auth/google/callback (this can be set through the Google API\nConsole Dashboard under **Credentials** if not offered as an option during setup).\n\nYou will also need to enable the \"Google+ API\" on the Google API Console Dashboard - if you forget,\nGoogle will display an error message (with a link to the API) the first time you try to log in.\n\n### Steps\n\n- Fork and clone the repo\n- Run `npm install`\n- In the root directory, create a .env file and place the following: \n  - MONGO_URI = *Your database uri - typically mongodb://localhost:27017/your_project_name if your MongoDB is local* \n  - GOOGLE_CLIENT_ID = *Client id assigned by Google* \n  - GOOGLE_CLIENT_SECRET = *Client secret assigned by Google*\n  - SESSION_SECRET = *Any random string of characters*\n  - GOOGLE_CALLBACK_URL = http://localhost:4000/auth/google/callback (*Use for the callback url in the Google API console*)\n- Open a new terminal session and run `mongod` if mongodb is on the local machine\n- Run `npm run dev`\n- Navigate to `localhost:4000` in your browser\n\n## Available Scripts\n\nIn the project directory, the following commands are available:\n\n### `npm install`\n\nInstalls all the dependencies\n\n### `npm run dev`\n\nBuilds the app for development. It is watched by webpack for any changes in the front end.\n\n## How to Contribute\nWe warmly welcome contributions from anyone. Check out our [how to contribute](https://github.com/freeCodeCamp/league-for-good/blob/master/CONTRIBUTING.md) section to find out how you can do so.\n"
    },
    {
        "repo": "/Yudaotor/EsportsHelper",
        "language": "Python",
        "readme_contents": "<p align=\"center\">\n<a href=\"https://github.com/Yudaotor/EsportsHelper\"><img alt=\"EsportsHelper\" src=\"https://github.com/Yudaotor/EsportsHelper/assets/87225219/79896860-f119-4e69-bac7-148504d4c2ae\"></a><br/>\n<a href=\"https://lolesports.com\"><img alt=\"lolesports\" src=\"https://img.shields.io/badge/WebSite-lol%20esports-445fa5.svg?style=plastic\"></a>\n<a href=\"https://github.com/Yudaotor/EsportsHelper/stargazers\"><img alt=\"GitHub Repo stars\" src=\"https://img.shields.io/github/stars/Yudaotor/EsportsHelper\"></a>\n<a href=\"https://github.com/Yudaotor/EsportsHelper/pulls\"><img alt=\"PRWelcome\" src=\"https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat\"></a><br/>\n<a href=\"https://www.cdnjson.com/images/2023/03/13/image-merge-1678713037835.png\">\u70b9\u5b83-><img alt=\"buymecoffee\" src=\"https://user-images.githubusercontent.com/87225219/228188809-9d136e10-faa1-49b9-a6b7-b969dd1d8c7f.png\"></a>\n</p>\n\n**Language**: [English](https://github.com/Yudaotor/EsportsHelper/blob/main/README.EN.md) | [Chinese](https://github.com/Yudaotor/EsportsHelper/blob/main/README.md) | [Spanish](https://github.com/Yudaotor/EsportsHelper/blob/main/README.ES.md)\n# \u7535\u7ade\u52a9\u624b EsportsHelper\n\u901a\u8fc7selenium\u6a21\u62df\u6d4f\u89c8\u5668\u6765\u81ea\u52a8\u89c2\u770b\u7535\u7ade\u6bd4\u8d5b,\u7f51\u5740: [LolEsports](lolesports.com)  \n**\u907f\u514d\u88ab\u62f3\u5934\u68c0\u6d4b,\u8bf7\u5c3d\u91cf\u8fc7\u6ee4\u6389\u5c0f\u8d5b\u533a(\u6253\u5f00\u5b89\u5168\u6a21\u5f0f\u5373\u53ef)(\u4ee5\u53ca\u4e0d\u8981\u540c\u65f6\u89c2\u770b\u8d85\u8fc75\u4e2a\u6bd4\u8d5b!!!!)**  \n\u54e6\u5bf9\u4e86,\u7528\u7684\u662f\u8c37\u6b4c\u6d4f\u89c8\u5668\u54e6 \uff08\u5fc5\u987b\u8981\u4e0b\u4e00\u4e2a\u6700\u65b0\u7248\u672c\u8c37\u6b4c\u6d4f\u89c8\u5668\u54e6\uff09  \n**\u6765\u81ea\u4e2d\u56fd\u5927\u9646\u7684\u9700\u642d\u914dVPN\u4f7f\u7528**  \n**\u5982\u4f55\u4e0b\u8f7d**:\u70b9\u51fb\u53f3\u4fa7\u7684[Releases](https://github.com/Yudaotor/EsportsHelper/releases)\u4e0b\u8f7d\n## \u8054\u7cfb\u6211\n\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u6709\u9047\u5230\u4ec0\u4e48\u95ee\u9898\u6216\u8005\u5efa\u8bae\u53ef\u4ee5\u5728Github\u4e0a\u63d0\u51faissue  \n\u6216\u8005\u52a0TG\u7fa4\u4ea4\u6d41: https://t.me/+0PjLPCy_IIJhNzM1  \n\u6216\u8005\u53ef\u4ee5\u8054\u7cfb\u6211  \nDiscord: Khalil#7843  \n\u53ef\u4ee5\u7ed9\u6211\u70b9\u4e2a\u5c0f\u661f\u661f\u5417(*^_^*)\u2b50  \n## \u4e0d\u60f3\u81ea\u5df1\u6302?  \n\u53ef\u4ee5\u627e\u6211\u4ee3\u6302 Q\u7fa4:553984868  \u95f2\u9c7c: Khalilc\n## \u754c\u9762\n![image](https://github.com/Yudaotor/EsportsHelper/assets/87225219/ec3603e5-463c-4a57-b09a-0c34e90522da)\n\n\n## \u8fd0\u884c\u5e73\u53f0  \nWindows, Linux  \n\n### Linux  \n\u5982\u4f55\u5728Linux\u4e2d\u8fd0\u884c\u8bf7\u70b9\u51fb\u53f3\u4fa7\u67e5\u770b\u6559\u7a0b[Linux\u6559\u7a0b](https://github.com/Yudaotor/EsportsHelper/wiki/%E5%A6%82%E4%BD%95%E5%9C%A8linux%E7%8E%AF%E5%A2%83%E8%BF%90%E8%A1%8C%EF%BC%88run-in-linux%EF%BC%89)\n### Mac\n\u6682\u65f6\u8fd0\u884c\u65b9\u6cd5\uff1a\n```shell\npython -m pip install -r requirements.txt\n./run_job.sh 0\n```\n\n## \u5728Docker\u4e2d\u8fd0\u884c\n\u8981\u4f7f\u7528\u6211\u4eec\u7684\uff08\u975e\u5b98\u65b9\uff09Docker \u7248\u672c\uff0c\u53ef\u4ee5\u4f7f\u7528\u6211\u4eec\u7684 \"docker-compose.yml \"\u6587\u4ef6\u3002\u53ea\u9700\u5c06\u8be5\u6587\u4ef6\u4e0e\u914d\u7f6e\u6587\u4ef6 \"config.yml\"\uff08\u53ef\u4ee5\u4f7f\u7528\u6211\u4eec\u7684\u914d\u7f6e\u6587\u4ef6\u751f\u6210\u5668\uff09\u4e00\u8d77\u653e\u5728\u9700\u8981\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u8fd0\u884c \"sudo docker compose up -d \"\u5373\u53ef\u3002\u522b\u5fd8\u4e86\uff0c\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 \"isDockerized \"\u53d8\u91cf\u5fc5\u987b\u8bbe\u7f6e\u4e3a \"True\"\u3002\u8bf7\u6ce8\u610f\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u7684\u662f\u771f\u6b63\u7684\u6d4f\u89c8\u5668\uff08Chromium/Chrome\uff09\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u80fd\u4f1a\u5360\u7528\u9ad8\u8fbe 2 GB \u7684\u5185\u5b58\u3002Docker\u4ed3\u5e93\u5730\u5740: https://hub.docker.com/r/redr00t/esportshelper  \n\n## \u5173\u4e8e\u591a\u5f00  \n\u538b\u7f29\u5305\u89e3\u538b\u591a\u4e2a\u6587\u4ef6\u5939,\u7136\u540e\u5404\u81ea\u4e0d\u540c\u7684\u914d\u7f6e\u6587\u4ef6\u591a\u5f00\u5373\u53ef\u5b9e\u73b0 \u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528Docker\u6765\u5b9e\u73b0\u591a\u5f00.\n\n\n## \u7279\u6027\n1. \u81ea\u52a8\u6253\u5f00\u6d4f\u89c8\u5668,\u8fdb\u5165lolesports.com,\u67e5\u8be2\u54ea\u4e9b\u8d5b\u533a\u5728\u8fdb\u884c\u6bd4\u8d5b(\u5728\u653e\u8d5b\u524d\u7b49\u5f85\u7684\u8d5b\u533a\u4f1a\u88ab\u5ffd\u89c6,\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7ignoreBroadCast\u914d\u7f6e\u4ece\u800c\u4e0d\u5ffd\u89c6),\u8fdb\u5165\u89c2\u770b\u5e76\u8bbe\u7f6e\u4e3a\u6700\u4f4e\u6e05\u6670\u5ea6(\u4e3a\u4e86\u8282\u7701\u6d41\u91cf)\n2. \u53ef\u4ee5\u81ea\u884c\u8bbe\u7f6e\u662f\u5426\u9009\u62e9\u65e0\u5934\u6a21\u5f0f(\u9ed8\u8ba4\u5173\u95ed)(\u65e0\u5934\u6a21\u5f0f\u5373headless,\u5f00\u542f\u540e\u6d4f\u89c8\u5668\u4f1a\u4e0d\u53ef\u89c1,\u5728\u540e\u53f0\u8fd0\u884c,\u7f13\u89e3\u7535\u8111CPU\u538b\u529b)\n3. \u53ef\u4ee5\u81ea\u884c\u8bbe\u7f6e**\u4e0d\u89c2\u770b\u54ea\u4e9b\u8d5b\u533a** **\u6216\u8005\u53ea\u89c2\u770b**\u7684\u6bd4\u8d5b.(\u9ed8\u8ba4\u4e3a\u7a7a)(\u6ce8\u610f,\u4e0d\u89c2\u770b\u662f\u5305\u542b\u5173\u7cfb\u7684\u903b\u8f91,\u4e3e\u4f8b:\u5f53\u4f60\u8bbe\u7f6e\u4e86lck\u4ee5\u540e,lck_challengers\u540c\u6837\u4e0d\u4f1a\u89c2\u770b)(\u53ea\u89c2\u770b\u662f\u4e25\u683c\u5339\u914d\u7684\u903b\u8f91)(\u5efa\u8bae\u8bbe\u7f6e,\u907f\u514d\u89c2\u770b\u6240\u6709\u6bd4\u8d5b\u4ece\u800c\u88ab\u68c0\u6d4b)\n4. \u53ef\u4ee5\u81ea\u884c\u8bbe\u7f6e\u591a\u4e45\u6765\u67e5\u8be2\u4e00\u6b21\u6bd4\u8d5b\u6700\u65b0\u4fe1\u606f.(\u9ed8\u8ba4600\u79d2)(\u5173\u95ed\u5df2\u7ecf\u7ed3\u675f\u7684\u6bd4\u8d5b\u548c\u5f00\u542f\u65b0\u5f00\u59cb\u7684\u6bd4\u8d5b)\n5. **\u6389\u843d\u63d0\u9192**(\u652f\u6301\u9489\u9489,Discord,\u996d\u7897\u8b66\u544a,\u4f01\u4e1a\u5fae\u4fe1,\u98de\u4e66)\n6. \u8f6f\u4ef6\u53d1\u751f\u9519\u8bef\u65f6\u53ef\u4ee5\u53d1\u9001\u9519\u8bef\u63d0\u9192(\u63a8\u9001\u4fe1\u606f\u7c7b\u578b\u652f\u6301\u7b5b\u9009)\n7. \u53ef\u4ee5\u8bbe\u7f6e\u6700\u957f\u8fd0\u884c\u65f6\u95f4\uff0c\u5230\u8fbe\u65f6\u95f4\u540e\u81ea\u52a8\u5173\u673a(\u53ea\u6709windows\u4f1a\u81ea\u52a8\u5173\u673a)  \n8. \u53ef\u4ee5\u8bbe\u7f6e\u591a\u6bb5\u4f11\u7720\u65f6\u95f4\u6bb5\uff0c\u5728\u4f11\u7720\u65f6\u95f4\u6bb5\u4e2d\u4f1a\u5173\u95ed\u89c2\u8d5b\u7f51\u9875,\u5f85\u4f11\u7720\u7ed3\u675f\u540e\u91cd\u65b0\u6253\u5f00.\n9. \u53ef\u4ee5\u8bbe\u7f6e\u684c\u9762\u63d0\u9192.\n10. \u53ef\u4ee5\u624b\u52a8\u6dfb\u52a0\u4ee3\u7406.(\u7edd\u5927\u90e8\u5206\u7528\u6237\u65e0\u9700\u914d\u7f6e)\n11. \u7701\u6d41\u6a21\u5f0f,\u53ef\u4ee5\u5220\u9664\u89c6\u9891\u6d41\u5143\u7d20(\u8282\u7701\u6d41\u91cf)(\u98ce\u9669\u5b58\u5728,\u6709\u88ab\u62f3\u5934\u68c0\u6d4b\u53ef\u80fd) \n12. \u53ef\u4ee5\u67e5\u770b\u7a0b\u5e8f\u672c\u6b21\u8fd0\u884c\u5f97\u5230\u7684\u6389\u843d\u6570\u4ee5\u53ca\u6389\u843d\u8d5b\u533a\u4fe1\u606f.\n13. \u53ef\u4ee5\u901a\u8fc7\u672c\u5730\u6d4f\u89c8\u5668\u7f13\u5b58\u514d\u8d26\u5bc6\u767b\u5f55.\n14. \u53ef\u4ee5\u81ea\u5b9a\u4e49\u8c37\u6b4c\u6d4f\u89c8\u5668\u7684\u5730\u5740.(\u652f\u6301\u7eff\u8272\u7248\u5373\u514d\u5b89\u88c5\u7248)\n15. \u53ef\u4ee5\u914d\u7f6e\u8bed\u8a00,\u76ee\u524d\u652f\u6301**\u7b80\u4f53\u4e2d\u6587**,**\u7e41\u4f53\u4e2d\u6587**,**\u82f1\u8bed**\u548c**\u897f\u73ed\u7259\u8bed**.\n16. \u53ef\u4ee5\u914d\u7f6e\u662f\u5426**\u81ea\u52a8\u4f11\u7720**,\u5373\u5f53\u6ca1\u6709\u6bd4\u8d5b\u65f6\u5173\u95ed\u9875\u9762,\u76f4\u5230\u6bd4\u8d5b\u91cd\u65b0\u6253\u5f00.(**\u63a8\u8350**\u8bbe\u7f6e)\n17. \u975e\u81ea\u52a8\u4f11\u7720\u6a21\u5f0f\u4e0b\u5982\u68c0\u6d4b\u5230\u8ddd\u79bb\u4e0b\u573a\u6bd4\u8d5b\u65f6\u95f4\u8f83\u957f\u4e5f\u4f1a\u8fdb\u884c\u4ee51\u5c0f\u65f6\u95f4\u9694\u68c0\u67e5.\n18. \u53ef\u4ee5\u8bbe\u5b9a**\u6700\u5927\u540c\u65f6\u89c2\u770b\u76f4\u64ad\u6570**,\u907f\u514d\u540c\u65f6\u89c2\u770b\u8fc7\u591a\u8d5b\u533a\u88ab\u62f3\u5934\u68c0\u6d4b.\n19. \u53ef\u4ee5\u5bfc\u51fa\u751f\u6daf\u6389\u843d\u8be6\u7ec6\u4fe1\u606f.\n20. \u53ef\u4ee5\u6253\u5f00**\u5b89\u5168\u6a21\u5f0f**,\u81ea\u52a8\u8fc7\u6ee4\u5c0f\u8d5b\u533a \u9632\u6b62\u88ab\u68c0\u6d4b.\n21. \u53ef\u4ee5\u663e\u793a\u53cc\u65b9\u5bf9\u5c40\u6bd4\u5206\u4fe1\u606f.\n22. \u652f\u6301ARM64.\n23. \u652f\u6301Docker\u73af\u5883.\n\n\n## \u914d\u7f6e\u4fe1\u606f\nconfig.yaml\n```yaml\n### \u5fc5\u586b\u9879\nusername: \"\u8d26\u53f7\u7528\u6237\u540d\"                         # \u5fc5\u586b\uff0c\u8d26\u53f7  \npassword: \"\u5bc6\u7801\"                              # \u5fc5\u586b\uff0c\u5bc6\u7801  \n### \u9009\u586b\u9879\ndelay: 600                                    # \u6bcf\u6b21\u68c0\u67e5\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u4e3a\u79d2(\u9ed8\u8ba4\u4e3a600\u79d2)(\u6bcf\u6b21\u68c0\u6d4b\u65f6\u95f4\u4f1a\u5728\u4f60\u8bbe\u7f6e\u7684\u65f6\u5ef60.8-1.5\u500d\u4e4b\u95f4\u968f\u673a\u6ce2\u52a8)  \nheadless: False                               # \u8bbe\u7f6e\u4e3aTrue\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5426\u5219\u4f1a\u6253\u5f00\u6d4f\u89c8\u5668\u7a97\u53e3(\u9ed8\u8ba4\u4e3aFalse)  \nlanguage: \"zh_CN\"                             # \u73b0\u652f\u6301\u8bed\u8a00\"zh_CN\",\"zh_TW\",\"en_US\".\u7b80\u4f53\u4e2d\u6587,\u7e41\u4f53\u4e2d\u6587,\u82f1\u8bed.\nnickName: \"\"                                  # \u7ef0\u53f7,\u4e3a\u7a7a\u65f6\u9ed8\u8ba4\u4e3ausername.(\u589e\u5f3a\u9690\u79c1)  \nonlyWatchMatches: [\"lcs\",\"lla\",\"lpl\",\"lck\",\"ljl-japan\",\"lco\",\"lec\",\"cblol-brazil\",\"pcs\",\"tft_esports\",\"worlds\",\"wqs\"]   # \u53ea\u89c2\u770b\u7684\u8d5b\u533a\u540d\u79f0,\u5c0f\u5199.\ndisWatchMatches: [\"prime\",\"lfl\",\"liga\",\"hitpoint\",\"series\",\"nlc\",\"nationals\",\"academy\",\"qualifiers\",\"legends\",\"challengers\",\"league\"]        # \u4e0d\u60f3\u770b\u7684\u8d5b\u533a\u540d\u79f0\uff0c\u53ef\u4ee5\u5728\u8fd9\u91cc\u6dfb\u52a0.(\u6ce8\u610f,\u662f\u5c0f\u5199)  \nmaxRunHours: -1                               # \u8d1f\u503c\u4e3a\u4e00\u76f4\u8fd0\u884c\uff0c\u6b63\u503c\u4e3a\u8fd0\u884c\u5c0f\u65f6, \u9ed8\u8ba4-1\nmaxStream: 4                                  # \u9ed8\u8ba4\u503c\u4e3a4,\u6700\u5927\u540c\u65f6\u89c2\u770b\u7684\u6bd4\u8d5b\u6570,\u8d85\u8fc7\u5c06\u4f1a\u4e0d\u4e88\u89c2\u770b.\nmode: \"safe\"                                  # \u6a21\u5f0f\u9009\u62e9\uff0csafe\u4e3a\u5b89\u5168\u6a21\u5f0f\uff0cnormal\u4e3a\u666e\u901a\u6a21\u5f0f\uff0c\u9ed8\u8ba4\u4e3asafe.\u5177\u4f53\u542b\u4e49\u89c1github \nexportDrops: False                            # \u9ed8\u8ba4\u4e3aFalse,\u662f\u5426\u9700\u8981\u5bfc\u51fa\u751f\u6daf\u6389\u843d\u8be6\u60c5\u6587\u4ef6,\u53ea\u4f1a\u5728\u811a\u672c\u6253\u5f00\u65f6\u751f\u6210.\nbriefLogLength: 10                            # \u65e5\u5fd7\u7b80\u7565\u4fe1\u606f\u6761\u6570.\u9ed8\u8ba4\u4e3a10\nproxy: \"\u4f60\u7684\u4ee3\u7406\u5730\u5740\"                          # \u4ee3\u7406\u5730\u5740\uff0c\u9009\u586b\uff0c\u4e00\u822c\u7528\u6237\u4e0d\u7528\u586b,\u9664\u975e\u4f60\u77e5\u9053\u4f60\u5728\u5e72\u4ec0\u4e48\u3002 \u4f8b\u5b50, \"socks://127.0.0.1:20173\"\nconnectorDropsUrl: \"\u4f60\u7684webhook\u94fe\u63a5\"           # (\u652f\u6301\u9489\u9489,Discord,\u996d\u7897\u8b66\u544a,\u4f01\u4e1a\u5fae\u4fe1,\u98de\u4e66)\u5177\u4f53\u914d\u7f6e\u65b9\u6cd5\u89c1\u6b64\u5904https://github.com/Yudaotor/EsportsHelper/wiki/%E6%80%8E%E4%B9%88%E9%85%8D%E7%BD%AE%E6%8E%89%E8%90%BD%E6%8F%90%E9%86%92%3F\nplatForm: \"windows\"                           # \u4f7f\u7528\u5e73\u53f0,\u9ed8\u8ba4\u4e3aWindows,\u5982\u9700\u4f7f\u7528Linux\u8bf7\u5728\u6b64\u5904\u8fdb\u884c\u914d\u7f6e  \ncloseStream: False                            # \u7701\u6d41\u6a21\u5f0f\uff0c\u9ed8\u8ba4False\uff0c\u5173\u95ed\u76f4\u64ad\u95f4\u7684\u89c6\u9891\u6d41(\u98ce\u9669\u5b58\u5728,\u6709\u88ab\u62f3\u5934\u68c0\u6d4b\u53ef\u80fd) \ndesktopNotify: False                          # \u7cfb\u7edf\u53f3\u4e0b\u89d2\u5f39\u7a97\u63d0\u793a\uff0c\u9ed8\u8ba4False\nsleepPeriod: [\"8-13\", \"20-23\"]                # \u4f11\u7720\u65f6\u95f4\u6bb5\uff0c\uff08\u9ed8\u8ba4\u4e3a\u7a7a\uff09\u683c\u5f0f\u4e3a\"\u5f00\u59cb\u5c0f\u65f6-\u7ed3\u675f\u5c0f\u65f6\",\u5728\u4f11\u7720\u65f6\u95f4\u6bb5\u4e2d\u4f1a\u5173\u95ed\u89c2\u8d5b\u7f51\u9875,\u5f85\u4f11\u7720\u7ed3\u675f\u540e\u91cd\u65b0\u6253\u5f00\u3002\u533a\u95f4\u4e3a\u5de6\u95ed\u5408\u53f3\u5f00\u3002\nignoreBroadCast: True                         # \u8bbe\u7f6e\u4e3aFalse\u4f1a\u63d0\u524d\u8fdb\u5165\u76f4\u64ad\u95f4\uff0c\u4ee5\u53ca\u5c06\u652f\u6301\u67d0\u4e9b\u4e00\u76f4\u5904\u4e8e\u8f6c\u64ad\u7684\u8d5b\u533a\u76f4\u64ad(\u4f8b\u5982TFT)\nuserDataDir: \"C:\\\\Users\\\\xxxxx\\\\AppData\\\\Local\\\\Google\\\\Chrome\\\\User Data\"  # \u4f8b\u5b50,\u5176\u4e2dxxxxx\u5904\u6539\u4e3a\u81ea\u5df1\u7535\u8111\u7684\u540d\u5b57,\u5177\u4f53\u6559\u7a0b\u89c1https://github.com/Yudaotor/EsportsHelper/wiki/%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8%E6%9C%AC%E5%9C%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BC%93%E5%AD%98-%E5%85%8D%E8%B4%A6%E5%AF%86%E7%99%BB%E5%BD%95\nchromePath: \"X:\\\\xxxxx\\\\xx\\\\Chrome.exe\"       # \u8c37\u6b4c\u6d4f\u89c8\u5668\u81ea\u8ba2\u8def\u5f84\ncountDrops: True                              # \u662f\u5426\u68c0\u67e5\u6389\u843d\u6570\nnotifyType: \"all\"                             # \u63a8\u9001\u4fe1\u606f\u7684\u7c7b\u578b\u7b5b\u9009,\"all\"\u4e3a\u6240\u6709\u4fe1\u606f\u63a8\u9001,\"error\"\u4e3a\u4ec5\u63a8\u9001\u62a5\u9519\u4fe1\u606f,\"drops\"\u4e3a\u4ec5\u63a8\u9001\u6389\u843d\u4fe1\u606f\nautoSleep: True                               # (\u63a8\u8350)\u662f\u5426\u81ea\u52a8\u4f11\u7720,\u9ed8\u8ba4True\ndebug: False                                  # \u662f\u5426\u5f00\u542fdebug\u6a21\u5f0f,\u5f00\u542f\u540e\u5728\u53d1\u751f\u5f02\u5e38\u65f6\u4f1a\u622a\u5c4f\u5230pics\u6587\u4ef6\u5939\u4e0b,\u9ed8\u8ba4False\narm64: False                                  # \u652f\u6301\u5728Linux ARM64\u4f7f\u7528Chromium,\u9700\u8981\u540c\u65f6\u914d\u7f6eplatForm: \"linux\" \u5e76\u4e14\u8981\u6709 chromedriver \u5728\u8def\u5f84: \"/home/USERNAME/.local/share/undetected_chromedriver/chromedriver\", \u66f4\u591a\u7ec6\u8282\u89c1: https://github.com/Yudaotor/EsportsHelper/wiki/The-Way-Using-Chromium-on-ARM64\nisDockerized: False                           # \u53ea\u6709\u5f53\u5728Docker\u4e2d\u8fd0\u884c\u65f6 \u914d\u7f6e\u4e3aTrue,\u9ed8\u8ba4\u4e3aFalse.\n```\n\n### \u4e0d\u89c2\u770b\u8d5b\u533a\u7684\u914d\u7f6e\u8be6\u89e3:\n\u6ce8\u610f,\u6b64\u5904\u662f\u5305\u542b\u5173\u7cfb\u7684\u903b\u8f91,\u4e3e\u4f8b:\u5f53\u4f60\u8bbe\u7f6e\u4e86lck\u4ee5\u540e,lck_challengers\u540c\u6837\u4e0d\u4f1a\u89c2\u770b  \n\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e9b\u8d5b\u533a\u4e0d\u89c2\u770b,\u6bd4\u5982\u6b21\u7ea7\u8054\u8d5b\u7b49(\u6389\u843d\u7387\u5f88\u4f4e)(\u63a8\u8350)  \n\u5177\u4f53\u8d5b\u533a\u540d\u5b57\u53ef\u4ee5\u89c1\u4ee5\u4e0b\u8bf4\u660e(\u5192\u53f7\u540e\u7684\u5373\u4e3a\u5728\u914d\u7f6e\u4e2d\u8f93\u5165\u7684\u8d5b\u533a\u540d)(\u6ce8\u610f\u662f\u5c0f\u5199):  \nWorlds Qualifying Series:wqs  \nLPL:lpl  \nLCK:lck  \nLCK_CHALLENGERS_LEAGUE:lck_challengers_league  \nLEC:lec  \nLCS:lcs  \nTFT:tft_esports  \nLCS_CHALLENGERS:north_american_challenger_league  \nLCS_CHALLENGERS_QUALIFIERS:lcs_challengers_qualifiers  \nLCO:lco  \nVCS:vcs  \nMSI:msi  \nWORLDS:worlds  \nCBLOL:cblol-brazil  \nCBLOL_ACADEMY:cblol_academy  \nLLA:lla  \nLJL:ljl-japan  \nLJL_ACADEMY:ljl_academy   \nEMEA:european-masters  \nPCS:pcs  \nLa Ligue Fran\u00e7aise:lfl  \nNLC:nlc  \nHONOR_DIVISION:honor_division  \nVOLCANO_DISCOVER_LEAGUAGE:volcano_discover_league  \nHITPOINT_MASTERS:hitpoint_masters  \nGOLDEN_LEAGUE:movistar_fiber_golden_league  \nHONOR_LEAGUE:honor_league  \nTCL:turkiye-sampiyonluk-ligi  \nELITE_SERIES:elite_series  \nSUPERLIGA:superliga  \nULTRALIGA:ultraliga  \nGREEK_LEAGUE:greek_legends  \nPRIMELEAGUE:primeleague  \nLIGA_MASTER:liga_master_flo  \nLIGA_PORTUGUESA:liga_portuguesa  \nCLARO_GAMING_STARS_LEAGUE:claro_gaming_stars_league  \nARABIAN_LEAGUE:arabian_league  \nNORTH_REGIONAL_LEAGUE:north_regional_league  \nSOUTH_REGIONAL_LEAGUE:south_regional_league  \nPG_NATIONALS:pg_nationals  \nKing's Duel:duelo_de_reyes  \n\n## By the way\n\u672c\u9879\u76ee\u601d\u8def\u53ca\u90e8\u5206\u4ee3\u7801\u6765\u81eaPoro\uff0c\u611f\u8c22\u3002[\u6b64\u5904](https://github.com/LeagueOfPoro/EsportsCapsuleFarmer)\n"
    },
    {
        "repo": "/wodewone/keepForMac",
        "language": "JavaScript",
        "readme_contents": "## KEEP FOR MAC [![Build Status](https://travis-ci.org/wodewone/keepForMac.svg?branch=master)](https://travis-ci.org/wodewone/keepForMac)\n\n![keep](keep-zilv.jpg)\n\n## \u4ecb\u7ecd\n\nMac\u7248keep\u5e94\u7528\uff08[\u6700\u65b0\u4f53\u9a8c\u7248](https://pan.baidu.com/s/1geS7qVL)\u56e0\u4e3a\u5f00\u53d1\u5c1a\u672a\u7ed3\u675f\uff0c\u7ec6\u8282\u90e8\u5206\u5c1a\u672a\u5b8c\u5584\uff0c\u6b64\u7248\u672c\u4ec5\u4e3a\u4f53\u9a8c\u7248\u672c\uff0c\u5982\u53d1\u73b0\u4e25\u91cd\u95ee\u9898\u6216\u6709\u4efb\u4f55\u5efa\u8bae\uff0c\u53ef\u968f\u65f6\u63d0\u51fa\uff0c\u6b22\u8fce\u5927\u5bb6\u53cd\u9988\uff0c\u8c22\u8c22\uff01~\uff09\n\n\u4f7f\u7528 Electron + React \u6784\u5efa\u7684\u684c\u9762\u7248 keep\n> **\u6ce8\uff1a**keep - \u4e13\u6ce8\u79fb\u52a8\u4f53\u80b2\u9886\u57df\u7684\u5e94\u7528\u5f00\u53d1\uff0c\u5021\u5bfc\u5f00\u653e\u5171\u4eab\u7684\u7cbe\u795e\uff0c\u4e0d\u6a21\u4eff\uff0c\u4e0d\u8ddf\u98ce\uff0c\u53ea\u505a\u9177\u7684\u4ea7\u54c1 \u8363\u83b7 App Store 2015\u5e74\u5ea6\u7cbe\u9009\uff08\u8282\u9009\u81ea [keep \u5b98\u7f51](http://www.gotokeep.com)\uff09\n\n## Preview\n\n### NEW\n\n![preview-10](http://wodewone.github.io/app/keep/preview/preview-10.jpg)\n\n### BASE\n\n![preview-1](http://wodewone.github.io/app/keep/preview/preview-1.jpg)\n![preview-2](http://wodewone.github.io/app/keep/preview/preview-2.jpg)\n![preview-3](http://wodewone.github.io/app/keep/preview/preview-3.jpg)\n![preview-4](http://wodewone.github.io/app/keep/preview/preview-4.jpg)\n![preview-5](http://wodewone.github.io/app/keep/preview/preview-5.jpg)\n![preview-6](http://wodewone.github.io/app/keep/preview/preview-6.jpg)\n![preview-7](http://wodewone.github.io/app/keep/preview/preview-7.jpg)\n![preview-8](http://wodewone.github.io/app/keep/preview/preview-8.jpg)\n![preview-9](http://wodewone.github.io/app/keep/preview/preview-9.jpg)\n\n## \u5b89\u88c5\u8fd0\u884c\uff08Build Setup\uff09\n``` bash\n# install dependencies\nnpm install\n\n# serve with hot reload\nnpm run electron\n\n# generate app\nnpm run dist\n```\n\n\n## Development\n\n\u5f00\u53d1\u7b14\u8bb0\uff1a[\u5f00\u53d1\u8fdb\u7a0b\u4ee5\u53ca\u8fc7\u7a0b\u4e2d\u7684\u95ee\u9898](http://wodewone.github.io/2016/12/03/\u4f7f\u7528js\u521b\u5efamacOS\u5e94\u7528/)\n\n\u6280\u672f\u6808\uff1aelectron + webpack + babel + react + es6 + sass + cssModules\n\n\u5f00\u53d1\u5de5\u5177\uff1aIntelliJ IDEA 2016.2.5\n\n\u5176\u4ed6\u5de5\u5177\uff1aCharles\uff08\u6293\u5305\u5de5\u5177\uff09\u3001Postman\uff08\u63a5\u53e3\u6d4b\u8bd5\u5de5\u5177\uff09\n\n\u5f00\u53d1\u5e73\u53f0\uff1aMac\n\n## \u53c2\u8003\u6587\u732e\n\n* [\u5f00\u6e90electron App](https://github.com/sindresorhus/awesome-electron)\n* [[\u8bd1\u6587] \u901a\u8fc7 Electron \u5f00\u53d1\u4e00\u4e2a\u7b80\u5355\u5730\u684c\u9762\u5e94\u7528](https://gold.xitu.io/entry/56aae5e4a633bd0257ae4ab8)\n* [Electron \u5feb\u901f\u5165\u95e8](https://github.com/electron/electron/blob/master/docs-translations/zh-CN/tutorial/quick-start.md)\n* [Electron API](http://electron.atom.io/docs/api/)\n* [w3cschool Electron \u4e2d\u6587 API](http://www.w3cschool.cn/electronmanual/electronmanual-tray.html)\n* [Electron \u6587\u6863](https://github.com/electron/electron/tree/master/docs-translations/zh-CN)\n* [ES6\u8f6cNode](http://taobaofed.org/blog/2016/01/07/find-back-the-lost-es6-features-in-nodejs/)\n* [Node\u4e2d\u6ca1\u641e\u660e\u767drequire\u548cimport\uff0c\u4f60\u4f1a\u88ab\u5751\u7684\u5f88\u60e8](http://imweb.io/topic/582293894067ce9726778be9?utm_source=tuicool&utm_medium=referral)\n* [\u4f7f\u7528 Electron \u6784\u5efa\u684c\u9762\u5e94\u7528](https://zhuanlan.zhihu.com/p/20225295)\n* [React Native\u586b\u5751\u4e4b\u65c5--HTTP\u8bf7\u6c42\u7bc7](http://www.jianshu.com/p/4c61da559d75)\n* [VueJs](http://cn.vuejs.org)\n* [Electron+react+webpack \u6784\u9020\u8de8\u5e73\u53f0\u81ea\u52a8\u66f4\u65b0host\u5e94\u7528](https://github.com/ppoffice/Hozz)\n* [React \u6700\u4f73\u5b9e\u8df5\u2014\u2014\u90a3\u4e9b React \u6ca1\u544a\u8bc9\u4f60\u4f46\u5f88\u91cd\u8981\u7684\u4e8b](https://segmentfault.com/a/1190000005013207)\n* [\u962e\u4e00\u5cf0React\u9879\u76ee\u811a\u624b\u67b6](http://www.ruanyifeng.com/blog/2016/09/react-technology-stack.html)\n* [CSSModules\u8be6\u89e3\u53caReact\u4e2d\u5b9e\u8df5](https://github.com/camsong/blog/issues/5)\n* [\u8c08\u8c08 CSS Modules](http://boke.io/tan-tan-css-modules/)\n* [html-webpack-plugin\u8be6\u89e3](http://www.cnblogs.com/wonyun/p/6030090.html)\n* [[\u8bd1] Webpack\u2014\u2014\u4ee4\u4eba\u56f0\u60d1\u7684\u5730\u65b9](https://segmentfault.com/a/1190000005089993?utm_source=tuicool&utm_medium=referral)\n* [[\u8bd1] react-css-modules](https://segmentfault.com/a/1190000004530909)\n* [\u4f7f\u7528 webpack + react + redux + es6 \u5f00\u53d1\u7ec4\u4ef6\u5316\u524d\u7aef\u9879\u76ee](https://segmentfault.com/a/1190000005969488)\n* [React/React Native \u7684ES5 ES6\u5199\u6cd5\u5bf9\u7167\u8868](http://bbs.reactnative.cn/topic/15/react-react-native-%E7%9A%84es5-es6%E5%86%99%E6%B3%95%E5%AF%B9%E7%85%A7%E8%A1%A8)\n* [\u4f7f\u7528 react-hot-loader](https://segmentfault.com/a/1190000004660311)\n* [React doesn't switch to production mode](http://stackoverflow.com/questions/37311972/react-doesnt-switch-to-production-mode)\n* [react\u7ec4\u4ef6\u95f4\u901a\u4fe1](http://www.alloyteam.com/2015/07/react-zu-jian-jian-tong-xin/#prettyPhoto)\n* [github/fetch](https://github.com/github/fetch)\n* [\u5728 JS \u4e2d\u4f7f\u7528 fetch \u66f4\u52a0\u9ad8\u6548\u5730\u8fdb\u884c\u7f51\u7edc\u8bf7\u6c42](http://blog.parryqiu.com/2016/03/02/using_fetch_in_nodejs/)\n* [JWT \u8ba4\u8bc1\u6a21\u5f0f\u7b80\u5355\u63cf\u8ff0](http://solee.me/2016/02/01/jwt-ren-zheng-mo-shi-jian-dan-miao-shu/#open)\n* [Bearer Token](http://www.haomou.net/2014/08/13/2014_bare_token/)\n* [\u6df1\u5165\u7406\u89e3 react-router \u8def\u7531\u7cfb\u7edf](https://zhuanlan.zhihu.com/p/20381597?columnSlug=purerender)\n* [webpack\u4e2d\u5173\u4e8e\u6837\u5f0f\u7684\u5904\u7406](https://github.com/zhengweikeng/blog/issues/9)\n* [\u4f7f\u7528 ES2015 \u91cd\u6784 React \u7ec4\u4ef6\n  ](https://csspod.com/refactoring-react-components-to-es2015-classes/)\n* [webpack\u591a\u9875\u5e94\u7528\u67b6\u6784\u7cfb\u5217\uff08\u516d\uff09\uff1a\u542c\u8bf4webpack\u8fde\u56fe\u7247\u548c\u5b57\u4f53\u4e5f\u80fd\u6253\u5305\uff1f](https://segmentfault.com/a/1190000006907701)\n* [\u52a0\u901felectron\u5728\u56fd\u5185\u7684\u4e0b\u8f7d\u901f\u5ea6](http://blog.tomyail.com/install-electron-slow-in-china/)\n* [\u6df1\u5165Electron ](https://github.com/zjzhome/I_want_to_say/issues/3)\n* [\u7528Electron\u5f00\u53d1\u684c\u9762\u5e94\u7528](http://get.ftqq.com/7870.get#)\n* [\u7528 Electron \u6253\u9020\u8de8\u5e73\u53f0\u524d\u7aef App](http://web.jobbole.com/86509/)\n\n"
    },
    {
        "repo": "/Seb943/scrapeOP",
        "language": "Python",
        "readme_contents": "# scrapeOP\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n:new::new::new: A python package for scraping oddsportal.com :new::new::new: <br/>\nn\n:information_source: Oddportal.com [1] is a tremendous website containing both historical and future betting odds concerning a wide range of sports and boomakers. <br />\nThis repository contains : <br /> \n1. A set of functions to scrape whatever league you wish : \n    1. Clone the repository or download it \n    2. Set your chrome driver location at line 20 in *functions.py*. NB : path is written with double slashes\n    2. Open *FinalScraper.py* and use one of the functions to scrape, that is as simple as this!\n\n:information_source: Functionalities :\n- Multiple sports supported : soccer, basketball, esports, darts, tennis, baseball, rugby, american football, hockey [list to be expanded soon!]\n- Mutiple functionalities : collect historical odds, current season only, upcoming games, specific season only\n- Collects all available bookmakers odds for each game\n- Collects the final result\n- Automatically sort the data by date \n- 14/11/2020 : You can now have the possibility to scrape the opening odds instead of the closing odds. To do this, just change the line 26 in *functions.py* to 'OPENING'<br />\n\n:information_source: Currently supported : <br />\n\nSport | Historical data (multiple seasons) | Current Season only | Specific Season | Next Games \n------------ | ------------- | ------------ | ------------- | -------------\nAmerican Football | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark:\nBaseball | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark:\nBasketball | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark:\nDarts | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark:\neSports | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark:\nHandball | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark:\nHockey | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_multiplication_x:\nRugby | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark:\nSoccer | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark:\nTennis | :heavy_multiplication_x: | :heavy_check_mark: | :heavy_multiplication_x: | :heavy_check_mark:\nVolleyball | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark:\n\n:information_source: The main functions which you can use are the following one : <br />\n```python\n1.scrape_oddsportal_historical(sport = 'soccer', country = 'france', league = 'ligue-1', start_season = '2010-2011', nseasons = 5, current_season = 'yes', max_page = 25)\n2.scrape_oddsportal_current_season(sport = 'soccer', country = 'finland', league = 'veikkausliiga', season = '2020', max_page = 25)\n3.scrape_oddsportal_specific_season(sport = 'soccer', country = 'finland', league = 'veikkausliiga', season = '2019', max_page = 25)\n4.scrape_oddsportal_next_games(sport = 'tennis', country = 'germany', league = 'exhibition-bett1-aces-berlin-women', season = '2020') \n```\n:information_source: *e.g.* if I want to collect the data concerning the **soccer** league **MLS (USA)** during the **2013 season (1 season)** and for the **current season aswell** and that I only want the **first two pages** from oddsportal, I just need to call : <br/>\n![Scraper_final code](Screenshots/ScreenshotCode.PNG)\n..then console when running code : <br/>\n![Scraper_final code running](Screenshots/ScreenshotRunning.PNG)\n..and finally the scraped data, saved in .csv format : <br/>\n![Table Overview](Screenshots/ScreenshotTable.PNG) <br/>\n\nExtra-documentation can be found for the functions in the *functions.py* script. :100::100: <br/><br/>\n\n:information_source: How to create a sports-betting algorithm from historical data : </br>\n- Medium article : https://medium.com/analytics-vidhya/how-covid-19-prevented-me-from-being-a-millionnaire-in-2020-5b2144e8bdef </br>\n- Full paper : https://seb943.github.io/Data/Paper_Exploiting_bookmakers_biases.pdf </br> </br>\n\n:information_source: Please report any bug/issue in the *issues* section or directly at sebcararo@hotmail.fr. Any feedback is really appreciated :speech_balloon: :+1:. </br>\n\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nYou can also have a look at the *functions.py* source code in order to understand the mechanics and eventually adapt the code to your own purpose. In the *functions.py* script, I distinguished 4 types of sports, according to the sport-related format of outcome (either 1X2, 12, and various types of score : tennis-alike, football-alike, baseball-alike, hockey-like (the format is different for hockey on oddsportal website) ). <br />\n\nWith the emergence of sports analytics and machine learning, it has become possible for anyone to create data-based betting strategies, taking into considerations both market-related figures (odds values, variations, differentials between bookmakers) and sport-related metrics of performance of any team. In order to perform this task, the very minimal data required is the historical results and betting odds (closing odds are usually preferred) which you can then use to create Machine Learning and Deep Learning models to infer probabilities of victories, and to analyze whether any given team is being undervalued or overvalued by any given bookmaker. The oddsportal website is one of the largest publicly open odds database, however its format and architecture are not very pleasing to deal with, therefore one need a bit of time to build tools to collect the data on their website. This package offers a comprehensive interface (sort of unofficial API) to collect odds and save the data into a comprehensive csv format. <br />\n\n[1] https://www.oddsportal.com/ <br />\n\nNB : This package is purposed for educational use only, not for any commmercial purpose in any way. I am not related by any mean with the oddsportal website. <br/>\n\nBTC : 3PkoHLXmXsL8kBrFu7GQ8kpmzPBmNK6m8B <br/>\nETH : 0xFdbB5aF291cB7e711D62c1E4a8B58d0EbD423F9C\n\n"
    },
    {
        "repo": "/drivelineresearch/openbiomechanics",
        "language": "Jupyter Notebook",
        "readme_contents": "# OpenBiomechanics Project (OBP) Documentation\n\nThe OpenBiomechanics Project is an initiative started by [Driveline Baseball Research & Development](https://drivelinebaseball.com/mission-and-purpose/) to provide raw (in the form of cleaned C3D files) and processed (full signal + point of interest) sports biomechanics data to the general public. For more information, read the documentation below and visit the [project homepage](https://openbiomechanics.org):\n\n![IMG_5797.JPG](imgs/IMG_5797.jpg)\n\n### Update 2022-01-10\n\nOBP tutorial #1: [***Accessing C3D files using Python and ezc3d***](/additional_resources/tutorials/ezc3d_python) added.\n\n# License\n\n*CC BY-NC-SA 4.0*\n\nAttribution-NonCommercial-ShareAlike 4.0 International\n\nhttps://creativecommons.org/licenses/by-nc-sa/4.0/\n\nDetailed information can be found in license.txt as well as on the OBP site under \"Usage Terms.\"\n\nVery important part of our *license.txt* file:\n\n>While the license is clear that this data cannot be used for commercial purposes (which includes but is not limited to for-profit organizations, corporations, and sole proprietorships with the intent to profit now or in the future), there is also one additional specific exclusion where this data cannot be used in any form without a specific written commercial (paid) license: ***Any employee or contractor employed by, associated with, or a significant shareholder of a professional sports organization or financial analysis firm is forbidden to use The OpenBiomechanics Project data for any use whatsoever.***\n\n## IRB information\n\n[Western IRB](https://www.wcgirb.com/) provided ethical approval for all data collection proceedures (Western IRB # WB-DLR-115)\n"
    },
    {
        "repo": "/AtomScott/SportsLabKit",
        "language": "Jupyter Notebook",
        "readme_contents": "<div align=\"center\">\n  <p>\n    <a align=\"center\" href=\"\" target=\"_blank\">\n      <img\n        width=\"100%\"\n        src=\"./docs/_static/sportslabkit-banner.png\"\n      >\n    </a>\n  </p>\n  <br>\n\n  [notebooks](https://github.com/atomscott/sportslabkit/notebooks) | [documentation](https://sportslabkit.readthedocs.io/) | [papers](https://scholar.google.com/citations?user=bjSLu7wAAAAJ&hl=en)\n\n  <br>\n\n  [![Documentation Status](https://readthedocs.org/projects/sportslabkit/badge/?version=latest)](https://soccertrack.readthedocs.io/en/latest/?badge=latest) \n  [![Kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/datasets/atomscott/soccertrack)\n  [![PWC](https://img.shields.io/badge/%7C-Papers%20with%20Code-lightblue)](https://paperswithcode.com/dataset/soccertrack-dataset)\n  [![dm](https://img.shields.io/pypi/dm/sportslabkit)](https://pypi.org/project/sportslabkit/)\n\n</div>\n\n# SportsLabKit\n\n## Introduction\n\nMeet SportsLabKit: The essential toolkit for advanced sports analytics. Designed for pros and amateurs alike, we convert raw game footage into actionable data.\n\nWe're kicking off with soccer and expanding to other sports soon. Need to quantify your game? Make human movement computable with SportsLabKit.\n\n\n## Features\n\n### Core Capabilities\n- **High-Performance Tracking**: In-house implementations of SORT, DeepSORT, ByteTrack, and TeamTrack for object tracking in sports.\n\n### Flexibility\n- **Plug-and-Play Architecture**: Swap out detection and ReID models on the fly. Supported models include YOLOv8 and torch-ReID.\n\n### Usability\n- **2D Pitch Calibration**: Translate bounding boxes to 2D pitch coordinates.\n  \n- **DataFrame Wrappers**: `BoundingBoxDataFrame` and `CoordinatesDataFrame` for effortless manipulation and analysis of tracking data.\n\n### Tutorials\n- [**Get Started**](./notebooks/01_get_started): Your first steps in understanding and setting up SportsLabKit.\n- [**User Guide**](./notebooks/02_user_guide): A comprehensive guide for effectively using the toolkit in real-world scenarios.\n- [**Core Components**](./notebooks/03_core_components/): Deep dive into the essential elements that make up SportsLabKit, including tracking algorithms and DataFrame wrappers.\n\n## Installation\n\nTo install SportsLabKit, simply run:\n\n```bash\npip install SportsLabKit\n```\n\n> **Note**: We're in active development, so expect updates and changes.\n\n## Example Usage\n\nTo get started with tracking your first game, follow this simple example:\n\n```python\nimport sportslabkit as slk\n\n# Initialize your camera and models\ncam = slk.Camera(path_to_mp4)\ndet_model = slk.detection_model.load('YOLOv8x')\nmotion_model = slk.motion_model.load('KalmanFilter')\n\n# Configure and execute the tracker\ntracker = slk.mot.SORTTracker(detection_model=det_model, motion_model=motion_model)\nbbdf = tracker.track(cam)\n\n# The tracking data is now ready for analysis\n```\n\nThe output is a `BoundingBoxDataFrame`, a multi-level Pandas DataFrame that contains Team ID, Player ID, and various attributes like bounding box dimensions. Each row is indexed by Frame ID for easy analysis. The DataFrame is also customizable, allowing you to adapt Team and Player IDs as needed.\n\n![Example of BoundingBoxDataFrame](./docs/_static/soccertrack_dataframe.png)\n\n## Roadmap\n\n- **Better CV tools**: Implement state of the art tracking methods, add event detection etc.\n\n- **Unified Data Representation**: In the pipeline are event data detection and a single DataFrame structure for both event and trajectory data.\n  \n- **Enhanced Compatibility**: Upcoming support for data export to standard formats for easy integration with other tools.\n\n\n## Contributing\n\nSee the [Contributing Guide](./contributing.md) for more information.\n\n\n## Contributors\n\n<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->\n[![All Contributors](https://img.shields.io/badge/all_contributors-2-orange.svg?style=flat-square)](#contributors-)\n<!-- ALL-CONTRIBUTORS-BADGE:END -->\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://atomscott.me/\"><img src=\"https://avatars.githubusercontent.com/u/22371492?v=4?s=100\" width=\"100px;\" alt=\"Atom Scott\"/><br /><sub><b>Atom Scott</b></sub></a><br /><a href=\"#maintenance-AtomScott\" title=\"Maintenance\">\ud83d\udea7</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/IkumaUchida\"><img src=\"https://avatars.githubusercontent.com/u/48281753?v=4?s=100\" width=\"100px;\" alt=\"Ikuma Uchida\"/><br /><sub><b>Ikuma Uchida</b></sub></a><br /><a href=\"#tutorial-IkumaUchida\" title=\"Tutorials\">\u2705</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!\n\n\n## Related Papers\n\n<table>\n<td width=30% style='padding: 20px;'>\n<a href=\"https://openaccess.thecvf.com/content/CVPR2022W/CVSports/papers/Scott_SoccerTrack_A_Dataset_and_Tracking_Algorithm_for_Soccer_With_Fish-Eye_CVPRW_2022_paper.pdf\">\n<img src='./docs/_static/paper_preview.jpg'/>\n</a>\n</td>\n<td width=70%>\n  <p>\n    <b>SoccerTrack:</b><br>\n    A Dataset and Tracking Algorithm for Soccer with Fish-eye and Drone Videos\n  </p>\n  <p>\n    Atom Scott*, Ikuma Uchida*, Masaki Onishi, Yoshinari Kameda, Kazuhiro Fukui, Keisuke Fujii\n  </p>\n  <p>\n    <i> Presented at CVPR Workshop on Computer Vision for Sports (CVSports'22). *Authors contributed equally. </i>\n  </p>\n  <div>\n    <a href='https://openaccess.thecvf.com/content/CVPR2022W/CVSports/papers/Scott_SoccerTrack_A_Dataset_and_Tracking_Algorithm_for_Soccer_With_Fish-Eye_CVPRW_2022_paper.pdf'>\n      <img src='https://img.shields.io/badge/Paper-PDF-red?style=for-the-badge&logo=adobe-acrobat-reader'/>\n    </a>\n    <a href='https://github.com/AtomScott/SoccerTrack'>\n      <img src='https://img.shields.io/badge/Code-Page-blue?style=for-the-badge&logo=github'/>\n    </a>\n    <a href='https://soccertrack.readthedocs.io/'>\n      <img src='https://img.shields.io/badge/Documentation-Page-blue?style=for-the-badge&logo=read-the-docs'/>\n    </a>\n  </div>\n</td>\n</table>\n\nSee papers that cite SoccerTrack on [Google Scholar](https://scholar.google.com/scholar?oi=bibs&hl=en&cites=13090652901875753929).\n## Citation\n\n```\n@inproceedings{scott2022soccertrack,\n  title={SoccerTrack: A Dataset and Tracking Algorithm for Soccer With Fish-Eye and Drone Videos},\n  author={Scott, Atom and Uchida, Ikuma and Onishi, Masaki and Kameda, Yoshinari and Fukui, Kazuhiro and Fujii, Keisuke},\n  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition},\n  pages={3569--3579},\n  year={2022}\n}\n```\n"
    },
    {
        "repo": "/ThemeBoy/SportsPress",
        "language": "PHP",
        "readme_contents": "# SportsPress - WP league management\n\nWelcome to the SportsPress repository on GitHub. Here you can browse the source, look at open issues and keep track of development.\n\nIf you are not a developer, please use the [SportsPress plugin page](http://wordpress.org/plugins/sportspress/) on WordPress.org.\n\n## Support\nThis repository is not suitable for support. Please don't use our issue tracker for support requests, but for core SportsPress issues only. Support can take place in the appropriate channels:\n\n* The [public support forums](http://wordpress.org/support/plugin/sportspress) on WordPress.org, where the community can help each other out.\n* The [ThemeBoy premium support portal](http://tboy.co/support) for customers who have purchased themes or extensions.\n\n\n## Contributing to SportsPress\nIf you have a patch, or stumbled upon an issue with SportsPress core, you can contribute this back to the code. Please read our [contributor guidelines](https://github.com/ThemeBoy/sportspress/blob/master/CONTRIBUTING.md) for more information how you can do this.\n\nTranslators can contribute new languages to SportsPress through [Transifex](https://www.transifex.com/projects/p/sportspress/)."
    },
    {
        "repo": "/ssaring/sportstracker",
        "language": "Java",
        "readme_contents": "## SportsTracker\n\nSportsTracker is an application for people who want to track their sporting\nactivities. It is not bound to a specific kind of sport, the user can create\ncategories for all sport types such as cycling, running, swimming or tennis.\n\nThe main advantage is a good overview of your exercises, you can easily create\ndiagrams and statistics for specific time ranges and sport types. In the \ncalendar you can also track your body weight or create note entries, e.g. the\ntraining plan or upcoming sport events.\n\nAll the application data is stored in XML files. So it is very easy to access\nthem with other tools or to write importers and exporters for other\napplications.\n\nIf you own a heartrate monitor with a computer interface you can import the\nrecorded exercise files and evaluate the diagrams with the integrated\nExerciseViewer application.\n\n\n## Links\n\n* SportsTracker website: https://www.saring.de/sportstracker/\n* GitHub project site: https://github.com/ssaring/sportstracker/\n    * provides [release downloads](https://github.com/ssaring/sportstracker/releases), source code management, an [issue tracker](https://github.com/ssaring/sportstracker/issues) and pull request processing\n* Continuous Integration: [![SportsTracker CI](https://github.com/ssaring/sportstracker/actions/workflows/sportstracker-ci.yml/badge.svg?branch=master)](https://github.com/ssaring/sportstracker/actions/workflows/sportstracker-ci.yml)\n* SportsTracker documentation: [README.txt](sportstracker/docs/README.txt)\n* SportsTracker license: [GPL v2](sportstracker/docs/LICENSE.txt)\n"
    },
    {
        "repo": "/tunjid/teammate-android",
        "language": "Kotlin",
        "readme_contents": "## Project Overview\n\n[![Play Badge](https://play.google.com/intl/en/badges/images/badge_new.png)](https://play.google.com/store/apps/details?id=com.mainstreetcode.teammate)\n\nTeammate is the culmination of work started in 2017 to boost my expertise of the typical application full stack.\nThe entire project consists of:\n\nA MERN web application built entirely on Google cloud:\n\n* Database: The MongoDb instances for both Dev and Prod are managed by MLab (Now acquired by MongoDb Atlas) and hosted on Google Cloud and visible only to IP traffic from the Google Cloud project.\n* Multimedia storage: Hosted on Google Cloud Storage, the dev environment uses a staging bucket so uploads are automatically deleted after 2 weeks, prod uses a standard bucket.\nThe app uses Google Cloud Vision to filter any obscene material that is user facing like user photos or team logos.\n* Chat: Provided via socket.io which is just an absolute delight to use.\n\nLong story short, in the 2 years I built both the Android and Web Applications for this app, I've really really fallen for Google Cloud as a one stop shop for PaaS solutions.\n\nThis repository is for the client Android App. A Video overview for the app can be seen [here](https://youtu.be/h5IX_ACiSL0). Specifics for how the tournament marquee feature works can be seen in this [video](https://youtu.be/WBEA_SmRqmQ).\n\n## Repository Overview\n\nThis repo is managed using git flow. The latest code is in the develop branch.\n\nTeammate is a fully featured modern Android team management app that:\n\n* Is offline first\n* Is pseudo single activity and heavily fragment dependent (It's got 2. Registration is it's own activity and flow, the rest of the app is the ```MainActivity```)\n* Uses the latest iteration of material design including expandable Floating Action Buttons, vertical drawer navigation, bottom sheets and the like.\n* Makes animation and transitions a priority and treats them as first class parts of the user experience.\n* Is Android Q edge to edge ready.\n* Highly themeable and dark mode compatible, checkout the feature/nike branch for a Nike inspired theme.\n\n## Architecture Overview\n\nTeammate is a MVVM Android Application that depends heavily on Functional Reactive Programming\n(RxJava) and the Android Architecture Components to function.\n\nOn a high level, it makes the following assumptions:\n\n* `Model` objects are effectively final from a UI perspective. Should a `Model` object be changed as a result of an IO call,\nthe actual reference to the object need not change, rather it's internal transient state should be updated.\n* Lists of items are effectively final within the lifecycle of the ```View``` displaying it.\nThe items within the list may change as a result of IO calls, but the list reference itself must never point to a new List instance.\n* All `Model` objects displayed to the user can be represented as a list of smaller, discrete items and these items can be displayed in a simple `RecyclerView` `ViewHolder`.\n* Manipulation of the `ViewHolder` by the user of the app, should change the underlying item it is bound to, and therefore the enclosing `Model`.\n* Data changes should always be represented as a reactive stream where possible (`Flowable`, `Single`, etc). This makes it easier to reuse logic all through the app.\n* Imperative style code for updating UI should be avoided where possible. updates to UI\nshould be contained within the `bind()` method of a `ViewHolder` near exclusively. This way the state of the UI can only be changed by binding and rebinding a `ViewHolder`.\n\nThese assumptions are realized via the following core objects:\n\n### MainActivity\n\nThe main `Activity` of this app can be considered a Controller of ViewControllers (```Fragments```) and persistent global views.\nIt handles The ```UiState``` object which is responsible for the presentation of global persistent UI like Toolbars, Floating Action Buttons, Bottom Sheets and SnackBars.\nThe navigation of this app makes sure every single full screen destination is added to the back stack. Any destination that is deemed transient, and shouldn't be in the back stack, for example picker or selector screens, will be shown via a sliding up bottom sheet.\nThis makes shared element transitions, of which there are a lot of in this app, simple to create, and maintain.\n\n### RecyclerView\n\nBesides the sign up flow and a few others, all data is presented in a RecyclerView. Model objects of any kind are broken up into Lists of `Differentiable` implementations\nand bound to their respective `ViewHolders`. UI Changes are broadcast solely through `diffResult.dispatchUpdatesTo(RecyclerView)` or `RecyclerView.notifyDataSetChanged()`.\nThat is, the UI typically has little to no idea the type of the model it binds to, it merely notifies the adapter it hosts of changes.\n```InputViewHolder``` is a fine example of this, and is particularly interesting because it's backed by a ```RecycledViewPool``` cached in the ```MainActivity```. It forms the basis for any ```View``` that presents a \"form\" to the user.\n\n### Differentiable\n\nAn `Differentiable` is the basic building block of this app. It represents an item that can change and therefore is \"Diff-able\", so a ```List``` of it can\nbe diffed against another ```List``` and the result dispatched to the hosting `RecyclerView`.\n\n### Repos\n\nStateless (mostly, ```UserRepo``` is the only exception and can be reworked.) singleton objects that perform IO work and publish the result of that work as Reactive wrappers around `Model` objects. All reactive objects exposed by them are published on a background thread, no exceptions.\nShould any of these reactive objects need to reach a ```View```, they must go through a ```ViewModel``` which will perform all necessary operations to convert it to a reactive object the ```View``` is concerned with; this is typically a ```DiffUtil.DiffResult```.\n\n### ViewModels\n\nLiaison between `Repositories` and `Views`. Most often converts a reactive `Model` type, to a reactive `DiffResult` type to publish on the UI thread. They also hold most application state, and may communicate with each other as some `Models` (```Teams``` and ```Roles```)are interdependent.\n\n### Gofers\n\nLike their name [suggests](https://youtu.be/zd5M5K5QtrM?t=56s), they communicate to a `ViewModel` changes to an individual `Differentiable` that may be part of a larger list.\nThis is especially useful if the `Model` is invalidated and has to be deleted from the parent list in the `ViewModel`.\n\n### Notifier\n\nResponsible for creating push notifications of `Models`. Think of them as ```Repositories``` for notifications.\n\n## UI Overview\n\nWith the architecture defined above, various UI manipulations can be abstracted out and delegated to specialized objects.\nSome of these are:\n\n### ScrollManager\n\nAn object which makes its easier to add UI characteristics to Lists such ass endless scrolling, pull to refresh, and notifying of `Model` changes.\nIt is an extension of the ListManager class, ScrollManager was created first, then eventually abstracted out to ListManager as a downstream dependency.\n\n### FabIconAnimator\n\nAn object that keeps track of the current drawable and text displayed in the Floating Action Button and animates it as appropriate.\n\n## Miscellaneous Notes\n\n* Besides a few Room Migration tests, the app is devoid of tests because the iteration pace was so quick, and remains so,\nwriting Unit tests for the business logic would have discouraged major app refactoring; and this app has seen a lot of them.\nSince it's a startup app and I'm the major contributor, Tests we put on the backlog.\n\n* Iconography in the app is represented mostly using vector drawables which help keep the size of the app down.\n\n* The app uses Java generics heavily, because I am a huge fan of the level of abstraction they facilitate, but also abuses them in some ways.\nThe compiler warnings fought in the writing of `TeamMemberRepository` was a very enlightening experience.\n\n* Working with shared element transitions between fragments was a very fulfilling experience.\n\n* The minimum sdk level is set to 21 only because of the app's heavy dependency on `ViewCompat.setOnApplyWindowInsetsListener`.\n\nSome very opinionated Android specific decisions to note if you're interested, otherwise please skip to the next section:\n\n* Why not Kotlin? I started this in 2017. At the time I was choosing between learning a backend / web stack or building this with Kotlin. I chose the former, and I think it was the right choice.\nI've recently started learning and working with Kotlin professionally and should be up to speed pretty soon.\n\n    EDIT: The app has now been migrated to Kotlin.\n\n* Why no Dagger? While I love dependency injection, I actively despise Dagger for it's opaqueness, slow build times, and infamously verbose compile time errors.\nThe latter has been greatly improved recently, but I think for an Android App of this size, Dagger is overkill.\nNow this is hardly backed up by much, however the things that would be injected in this app are the ```repositories``` and ```notifiers```, and that job is done by\nthe ```RepoProviders``` and ```NotifierProviders``` respectively, are provided via the service locator pattern and can very easily be mocked. I don't think I'm missing out on much.\n\n* Why Picasso and not Glide? I love dependencies with small binaries and a focused feature set that doesn't try to do too much.\nGlide is amazing, but this app doesn't support gifs, and Picasso works very well. There's no reason to bloat the app for a feature it doesn't need.\nThe resulting app is not multidex, and the size of the apk off Google play is less than 4 MB. That is a metric I am incredibly proud of for such a fully featured app.\n\n## License\n\nMIT License\n\nCopyright (c) 2019 Adetunji Dahunsi\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
    },
    {
        "repo": "/sports-alliance/sports-lib",
        "language": "TypeScript",
        "readme_contents": "# Sports Lib\n\n*A Library for processing GPX, TCX, FIT and JSON files from services such as Strava, Movescount, Garmin, Polar etc*\n\nAbout\n-----\nSports Lib tries to achieve a common domain model and lib for sport activity formats\nsuch as GPX, TCX, FIT and other popular formats. \n\nCurrently the support is limited to the main formats: GPX, TCX, FIT and JSON*\n\n*JSON is for specific services while GPX, TCX, FIT should be compatible with the most common services,\nsuch as Strava, Movescount, Garmin, Polar and any other service that supports the above formats.\n\nInstall\n-------\n\n- Install via npm \n\n  `npm install @sports-alliance/sports-lib --save`\n  \nExamples\n=======\n\n\nGPX\n---\n```typescript\nimport {SportsLib} from '@sports-alliance/sports-lib';\nimport {DOMParser} from 'xmldom'\n\n// For GPX you need a string \nconst gpxString = 'Some string from a file etc';\nSportsLib.importFromGPX(gpxString, DOMParser).then((event)=>{\n  // do Stuff with the file\n  const distance = event.getDistance();\n  const duration = event.getDuration();\n});\n```\n\nTCX\n---\n```typescript\nimport {SportsLib} from '@sports-alliance/sports-lib';\n\n// For TCX you need a string \nconst tcxString = 'Some string from a file etc';\nSportsLib.importFromTCX((new DOMParser()).parseFromString(tcxString, 'application/xml')).then((event)=>{\n  // do Stuff with the file\n  const distance = event.getDistance();\n  const duration = event.getDuration();\n});\n```\n\n\nFIT\n---\n```typescript\nimport {SportsLib} from '@sports-alliance/sports-lib';\n\n// For FIT you need an ArrayBuffer (binary) \nSportsLib.importFromFit(arrayBuffer).then((event)=>{\n  // do Stuff with the file\n  const distance = event.getDistance();\n  const duration = event.getDuration();\n});\n```\n\nExport\n---\n```typescript\n// Get an event as seen above\nconst gpxString = await new EventExporterGPX().getAsString(event);\n// Send the blob\nconst blob = new Blob(\n  [jsonString],\n  {type: new EventExporterGPX().fileType},\n);\n```\n\n\nExample converting a FIT file to GPX\n---\nThanks to [@guikeller](https://github.com/guikeller)\n```typescript \nimport fs from 'fs';\nimport sportsLibPkg from '@sports-alliance/sports-lib';\nimport exporterPkg from '@sports-alliance/sports-lib/lib/events/adapters/exporters/exporter.gpx.js'\n\nconst { SportsLib } = sportsLibPkg;\nconst { EventExporterGPX } = exporterPkg;\n\n// Input and output file path\nconst inputFilePath = '/tmp/test.fit';\nconst outputGpxFilePath = '/tmp/test.gpx';\n\n// reads the FIT file into memory\nconst inputFile = fs.readFileSync(inputFilePath, null);\nif (!inputFile || !inputFile.buffer) {\n    console.error('Ooops, could not read the inputFile or it does not exists, see details below');\n    console.error(JSON.stringify(inputFilePath));\n    return;\n}\nconst inputFileBuffer = inputFile.buffer;\n// uses lib to read the FIT file\nSportsLib.importFromFit(inputFileBuffer).then((event) => {\n    // convert to gpx\n    const gpxPromise = new EventExporterGPX().getAsString(event);\n    gpxPromise.then((gpxString) => {\n        // writes the gpx to file\n        fs.writeFileSync(outputGpxFilePath, gpxString, (wError) => {\n            if (wError) {\n                console.error('Ooops, something went wrong while saving the GPX file, see details below.');\n                console.error(JSON.stringify(wError));\n            }\n        });\n        // all done, celebrate!\n        console.log('Converted FIT file to GPX successfully!');\n        console.log('GPX file saved here: ' + outputGpxFilePath);\n    }).catch((cError) => {\n        console.error('Ooops, something went wrong while converting the FIT file, see details below');\n        console.error(JSON.stringify(cError));\n    });\n});\n```\n"
    },
    {
        "repo": "/danchyy/Basketball_Analytics",
        "language": "Jupyter Notebook",
        "readme_contents": "# Basketball Analytics\n\nThis repository and scripts in it will be focusing on the statistics revolving around NBA and basketball in general.\n\nAll code is written in Python using the Jupyter Notebooks which allow live preview of the images and thus making it nice and easy to analyze and visualize data.\n\nCurrent mini \"projects\":\n\n## 2021-22 Season\n\n* Simple plot which checks if there is correlation between box outs and DRB%: [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2021_22_season/box_outs_drb_pct.ipynb)\n\n* Shotchart [notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2021_22_season/shotcharts.ipynb) with one new plot type - change of shot frequency in each zone\n\n* Finding which players get more of real assists, and which get more fake assists: [notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2021_22_season/real_fake_assists.ipynb) - also uses pbp data\n\n* [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2021_22_season/assist_combos.ipynb) which finds assist combos (in this case, alley oop partners), it uses data retrieved through [Play-by-Play downloader](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2021_22_season/pbp_downloader.ipynb)\n\n\n## 2020-21 Season\n\n### Playoffs\n\n* Some other stuff can be find in this [FOLDER](https://github.com/danchyy/Basketball_Analytics/tree/master/Scripts/2020_21_season/playoffs)\n\n* AVERAGE PASSES PER SERIES: [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/playoffs/passing_stats.ipynb)\n\n### Regular Season\n\n* LONG DISTANCE ANALYSIS + AVERAGE DISTANCE ARC: Analysis of long distance shooters ([Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/long_distance_shooters.ipynb)) and average [3pt arc](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/three_pt_distance_new.ipynb)\n\n* CALCULATING RIM DETERRENEC AND BLOCK EFFICIENCY: How to calculate Rim deterrence from play-by-play data + block efficiency(recovery): [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/block_efficiency_rim_deterrence.ipynb)\n\n* GOBERT ANALYSIS: Big analysis on Gobert's dominance on defense: [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/gobert_jazz.ipynb)\n\n* ASSIST CHART: Simple assist chare with share of total shots in that area: [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/assist_chart.ipynb)\n\n* DENVER NUGGETS' ANALYSIS: Various charts regarding Denver Nuggets: [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/denver_nuggets.ipynb)\n\n* BIGGEST RA SHARE OF SHOTS: Table which shows Zion's dominant numbers: [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/RA_distribution.ipynb)\n\n* CLUTCH ANALYSIS: Various tables and \"face scatters\" for clutch data: [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/best_in_clutch.ipynb)\n\n* HUSTLE landscape: Simple scatter for hustle data: [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/hustle.ipynb) \n\n* ALL SHOTS BY KOBE: Every shot generated into a gif per season level: [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/kobe_all.ipynb)\n\n* PACE/TS/FT per seasons: BBRef scraper plus line charts for [TS%, Pace, FGA per game per seasons](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/pace_per_seasons.ipynb) and for [FTAs per game per season](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/free_throws_seasons.ipynb)\n\n* TEAM EFFICIENCY LANDSCAPE: Goldsberry-like plot with Net rating landscape: [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/efficiency_landscape_teams.ipynb)\n\n* GAME LENGTH ANALYZER: [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/game_length.ipynb) -> checking out what part of the game lengthens the game\n\n* PLAYER's FACE IMAGE DOWNLOADER: Simple script which downloads all active players' images (based on nba_api package): [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/get_player_imgs.ipynb)\n\n* STINT FINDER: Notebook which [finds the stint for player - when and how long he's on court](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/pbp_analysis/eff.ipynb)\n\n* PLAY-BY-PLAY DOWNLOADER AND (partial) PARSER: Notebook which [downloads play-by-play data](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/pbp_analysis/stint_finder.ipynb) and finds when player is on/off court\n\n* [Biggest difference in opponent's wide open triples vs all teams and vs target teams](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/opp_wide_shot_outlier.ipynb) - full post available at my [website](https://www.bballytics.co/en/2021/01/09/unlucky-start.html)\n\n* [Best offensive rebounders](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/off_rebounding.ipynb)\n\n* [LOLLIPOP CHART showing the most improved players](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/most_improved_players.ipynb)\n\n* [HIstorical results on Christmas games](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/christmas_results.ipynb)\n\n* [Couple of charts analyzing the (d)evolution of Blake Griffin](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/blake_griffin_downfall.ipynb)\n\n* [3 Point chase for all-time record](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/3_point_chase.ipynb)\n\n### Preseason\n\n* [Preseason analysis of Atlanta Hawks](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/offseason_moves/atlanta_hawks.ipynb)\n\n* [Preseason analysis of Philadelphia 76ers](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/offseason_moves/philly.ipynb)\n\n* [Preseason analysis of Portland Blazers](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2020_21_season/offseason_moves/portland.ipynb)\n\n## 2019-20 Season\n\n### Playoffs \n\n* [Lakers - Nuggets Radar chart](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/playoff_analysis/lal_den.ipynb), [Boston - Miami Radar Chart](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/playoff_analysis/bos_mia.ipynb), and there are others as well. Basically a \"breakdown\" of their offenses through radar chart, which is a nice way to display numerical values across multiple categories. \n\n* [Biggest change in unassisted Field Goals](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/playoff_analysis/biggest_change_in_unassisted_assisted.ipynb) This shows how the amount of Unassisted field goal makes changed from regular season to first and 2nd round (will update this with conference finals when finished). \n\n* [Westbrook's adaptation to Rockets](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/playoff_analysis/westbrook_mini_analysis.ipynb) -> Not really connected to playoffs, but it shows how Russ didn't play as other Rockets' players, but ran his own game...\n\n------\n\n* [Analysis of Anthony Davis' defensive performance in 2019-20](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/anthony_davis_role.ipynb)\n\n* [Analysis of After timeout plays](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/after_timeout_analysis.ipynb)\n\n* [Analysis of Boston Duo of the Future](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/boston_duo.ipynb)\n\n* [The PJ Tucker Paradox](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/tucker_paradox.ipynb), where his average distance of 3pt shot is shorter than three on top of the key.\n\n* [Waffle Chart for James Harden's shot selections](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/waffle/james_harden.ipynb)\n\n* [Defensive Specialists, part 3. Robert Covington](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/defensive%20specialists/covington_houston.ipynb)\n\n* [Defensive Specialists, part 2. Brook Lopez](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/defensive%20specialists/brook_lopez_analysis.ipynb)\n\n* [Defensive Specialists, part 1. Rudy Gobert](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/defensive%20specialists/gobert_analysis.ipynb)\n\n* [Evolution of NBA through shot charts](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/evolution_of_nba.ipynb)\n\n* [Coby White analysis](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/coby_white.ipynb)\n\n* [Duncan Robinson analysis](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/duncan_robinson.ipynb)\n\n* [Assist chart by Bam Adebayo](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/assist_charts/bam_assist_chart.ipynb)\n\n* [Analysis of Trae's long distance shooting](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/three_pt_distance.ipynb)\n\n* [Best januaries](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/januaries.ipynb)\n\n* [Analysis of offense durations](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/offense%20attack%20duration.ipynb)\n\n* [Look at Stockton's records](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/stockton_analysis.ipynb)\n\n* [Analysis of Domantas Sabonis' season](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/sabonis_shotchart.ipynb)\n\n* [Kyrie Irving Shot chart for 2010s](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/kyrie_shotcharts_2010s.ipynb)\n\n* [Bojan Bodanovic Shot Chart](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/bojan_shotchart.ipynb)\n\n* [Shots and assist by Doncic vs Pelicans](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/doncic_shots_asists_first_trip_double.ipynb)\n\n* Mid-Range heavy [Shot chart by DeMar Derozan](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2019_20_season/derozan.ipynb)\n\n## 2018-19 Season\n\n* [Evolution of Brook Lopez](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2018_19_season/brook_lopez_evolution/brook_lopez.ipynb), a look at change of Lopez' shot charts through the seasons\n\n* [Predicting MVP](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2018_19_season/mvp_predictions/Predicting%20MVP.ipynb) for 2018-19 nba season. \n\n* Here is [notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2018_19_season/clutch_players/ClutchStats.ipynb) which shows players that excel in the clutch.\n\n* Big Luka Don\u010di\u0107 analysis, [notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2018_19_season/doncic_analysis/doncic_analysis.ipynb)\n\n* James Harden analysis, [notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/2018_19_season/harden_analysis/harden_analysis.ipynb)\n\n## 2017-18 Season\n\n* Assists distribution between each NBA team for 2016/2017 season\n\t* [Crawler](https://github.com/danchyy/ML-and-DS/blob/master/Scripts/assist_distribution_between_team/assistCrawler.ipynb) which cleans table of assists inside team from basketball-reference site\n\n\t* [Notebook](https://github.com/danchyy/ML-and-DS/blob/master/Scripts/assist_distribution_between_team/visualize_assists.ipynb) to visualize assists distribution using heatmaps\n\n* Visualization of best 3 point shooters on very tight, tight, open and wide open defense\n\t* [Notebook](https://github.com/danchyy/ML-and-DS/blob/master/Scripts/closest_defenders_shot_chart/closest_defenders_percentage.ipynb)  to compare shooters based on closest defender\n\n* Shotcharts from past 2017 Eurobasket comparing Bogdanovics and displaying Markkanen's shooting ability\n\t* Bojan vs Bogdan comparison on [shot charts](https://github.com/danchyy/ML-and-DS/blob/master/Scripts/eurobasket_shotcharts/Bogdanovic_vs_Bogdanovic.ipynb)\n\n\t* Lauri Markkanen's amazing first round [shot chart](https://github.com/danchyy/ML-and-DS/blob/master/Scripts/eurobasket_shotcharts/Lauri_Markkanen_shotchart.ipynb)\n\n* Comparison of clutch vs regular time shooting for top 20 NBA scorers in 2016/2017 season\n\t* [Notebook](https://github.com/danchyy/ML-and-DS/blob/master/Scripts/nba_clutch_stats/Nba%20clutch%20time%20and%20regular%20time%20shooting%20comparison.ipynb)  for FG%, FT%, TS% comparison in regular vs clutch time\n\n* Various stats analysis using Kaggle's [dataset](https://www.kaggle.com/drgilermo/nba-players-stats) with NBA stats from 1950 season\n\t* [Notebook](https://github.com/danchyy/ML-and-DS/blob/master/Scripts/nba_players_stats/Nba_players.ipynb) which runs through some regular and advanced stats from last season as well as from previous seasons\n\n\t* [Images](https://github.com/danchyy/ML-and-DS/tree/master/Scripts/nba_players_stats/images) which are results of previous notebook\n\t\n* Swarmplot of rookie stats for their first regular game in 2017-18 nba season, as well as comparison of Ben Simmons' and Markelle Fultz' debut with other first round picks\n\n\t* [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/young_players_40_point_breaktrough/comparison_of_young_players_season.ipynb) which takes at look at previously described tasks.\n\t\n* Inspired by Aaron Gordon's first 40 point game, I took a look at how other young players his age, or younger, improved during their first 40 point game (only the ones which aren't rookies)\n\n\t* [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/young_players_40_point_breaktrough/comparison_of_young_players_season.ipynb) Which visualizes players improvement in points per game during the season in which they scored 40 points or more.\n\t\n* A look at Russell Westbrook's 2016-17 season in which he won MVP award and averaged triple double.\n\n\t* [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/westbrook_2016_17/visualization_Westbrook_triple_double_chase.ipynb) with some charts displaying Westbrook's averages through season.\n\t\n* Radar plots which describe player's style.\n\n\t* [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/radar_plot/Radar_plot.ipynb) with radar plots showing for Russell Westbrook and Kyrie Irving to view how they adapted to newly added teammates (Westbrook) and new team (for Kyrie).\n\t\n\t* [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/radar_plot/Stephen_Curry.ipynb) which shows how Stephen Curry changed his scoring coming from 2015-16 MVP season to 2016-17 season and addition of Kevin Durant.\n\t\n* Analysis of Players of the week/month in the NBA\n\n\t* [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/players_of_the_week/week_2/oladipo_cousins_week2.ipynb) for week two.\n\t\n* James Harden's chase for three point heights\n\t* [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/three_point_race/Harden_comparison.ipynb) where I show the pace of James Harden's three point shooting.\n\t\n* Stephen Curry's chase for three point record\n\t* [Notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/three_point_race/curry_record.ipynb) where Stephen Curry's progress in total three pointers made through career games in comparison with other top shooters\n\n* Free throw improvement for some centers\n\t* Here is [notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/free_throw_comp/free_throw_centers.ipynb) where improvements for some of the players like Clint Capela and Andre Drummond can be seen in comparison to last season\n\t\n* Most improved three point shooters\n\t* I analyzed which were the most improved three point shooters up to this point in season in this [notebook](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/three_point_improvement/three_point_improvement.ipynb)\n\t\n* Fourth quarter scoring thus far\n\t* LeBron James has by far the most points thus far in current season, that can be seen [here](https://github.com/danchyy/Basketball_Analytics/blob/master/Scripts/fourth_quarter_ot_scoring/best_scorers_late.ipynb)\n\t\n"
    },
    {
        "repo": "/jimniels/teamcolors",
        "language": "JavaScript",
        "readme_contents": "# Team Colors\n\n![TeamColors screenshot](http://i.imgur.com/XbWE9cG.png)\n\n[Team Colors](http://jim-nielsen.com/teamcolors) is a reference of HEX, RGB, CMYK, and Pantone color values of major league sports teams.\n\n## How-To\n\nInstall: `yarn install`\nDevelopment: `yarn start`\nBuild: `yarn build`\n\n## How It Works\n\nSite is built on the react framework. `index.html` is the shell container for react app. If javascript is not supported, a link is shown to the raw JSON data which has all color information.\n\nColor data is housed in a single `.json` file `src/teams.json`. Any changes to team colors can be done there. _Note on colors_: Color definitions for each team are in arrays and grouped by color mode. Color values should match index position in the array across color modes, for example:\n\n```\ncolors:\n  rgb: TEAMS-RGB-BLUE, TEAMS-RGB-RED\n  hex: TEAMS-HEX-BLUE, TEAMS-HEX-RED\n```\n\nSource artwork for each team is grouped by league in `sketch`. Production versions of these logo should be in `.svg` format in `public/img`.\n\n### Edit Team Color or Name\n\nFind teams `.json` file in `src/teams.json`, and edit the info you need.\n\n### Add a Team\n\n1. Determine the team\u2019s league\n2. Following the established pattern, add the team\u2019s name and colors the `.json` file\n3. Add a vector logo for the team in its corresponding `.sketch` league file in `sketch` with the team\u2019s name (as referenced in its `.json` file) in lowercase with hyphens, i.e. \"utah-jazz\"\n4. Export the team\u2019s `.svg` logo to `public/img/`\n5. Preferably, optimize the svg (with a tool like [SVGO](https://github.com/svg/svgo))\n6. Run `yarn build`, commit, push\n\n## Official Color References\n\n### NBA\n\nAll NBA colors are official ([source](http://courtside.nba.com/QuickPlace/nbalogo/Main.nsf/$defaultview/AD4C002C7D0F37A285257D660058EAED/$File/NBA%20Primary%20Composite_14-15PLAYOFFS.pdf?OpenElement) user & pass: nbamedia).\n\nThe NBA only provides RGB, CMYK, and Pantone colors for each team, so the HEX color is a programmatic conversion of the RGB color.\n\n### NFL\n\nAll NFL colors are official (see sources below).\n\nThe NFL provides official RGB, HEX, CMYK, and Pantone colors (so none of the colors you see on Team Colors are conversions).\n\nThe NFL has logo slicks which detail team color values. These are provided on a per-conference basis. _Note_: each of these source links are over 100MB in size, so they take a while to download.\n\n- [AFC North](http://www.nflmedia.com/afc_north.zip)\n- [AFC South](http://www.nflmedia.com/afc_south.zip)\n- [AFC East](http://www.nflmedia.com/afc_east.zip)\n- [AFC West](http://www.nflmedia.com/afc_west.zip)\n- [NFC North](http://www.nflmedia.com/nfc_north.zip)\n- [NFC South](http://www.nflmedia.com/nfc_south.zip)\n- [NFC East](http://www.nflmedia.com/nfc_east.zip)\n- [NFC West](http://www.nflmedia.com/nfc_west.zip)\n\n### MLB\n\nMLB colors have been extracted from the official \u201cRGB Digital Art\u201d spot color logo slicks provided at [MLB Press Box](http://mlbpressbox.mlbstyleguide.com) (user account required). They were not explicitly stated values, but they are color values pulled from individual team logos in an _official_ MLB document.\n\nThe extracted colors are in HEX form and their RGB counterparts are generated programmatically.\n\n- [American League logo slick](http://i.imgur.com/RP5kBSI.png)\n- [National League logo slick](http://i.imgur.com/FcuizSx.png)\n\n### NHL\n\nNHL colors are official. As per [Michael Sharer](https://github.com/epitaphmike) of the NHL.\n\n### MLS\n\nMLS colors are currently approximations, with the exceptions listed below. I am working on getting official colors of the remaining teams.\n\n- [Philadelphia Union](http://portfolios.scad.edu/gallery/36587433/Philadelphia-Union-Brand-Guidelines)\n\n### EPL\n\nThese leagues\u2019 teams and colors are currently approximations. I am working on getting official colors. If you know how/where to find them, please open an issue here in Github.\n\n## To-Dos\n\n- [ ] Switch to `flex` for layout\n- [ ] Improve filtering with fuzzy string search\n- [ ] Improve error states for when data doesn't render\n- [ ] Consider alternatives to no-js users rather than just \"here's the raw data\" (something that doesn't required a build if a single color in the JSON file is changed)\n- [ ] Possibly add team `id` manually to JSON file ??\n"
    },
    {
        "repo": "/openbookie/sportbook",
        "language": "Ruby",
        "readme_contents": "# Welcome to Sportbook\r\n\r\nA free open source web app for sports betting (or prediction) pools in Ruby on Rails (version 3.2 and up).\r\n\r\nExample tournaments and leagues include:\r\n\r\n<!-- clubs -->\r\n\r\n* UEFA Champions League\r\n* UEFA Europa League\r\n* Deutsche Bundesliga\r\n* English Premier League\r\n* M\u00e9xico Primera Divisi\u00f3n\r\n\r\n\r\n<!-- national teams -->\r\n\r\n* FIFA World Cup & Quali\r\n* UEFA Euro Cup\r\n\r\nFor more football tournaments or leagues,\r\nsee the [`football.db`](https://github.com/openfootball) site.\r\n\r\n\r\n<!-- more sports -->\r\n\r\n* National Football League (NFL)\r\n* National Hockey League (NHL)\r\n\r\nFor more tournaments or leagues,\r\nsee the [`sport.db`](https://github.com/opensport) site.\r\n\r\n\r\n## Demos\r\n\r\nTry the demo installs running on Heroku. Use the login credentials `demo`/`demo`. \r\n\r\n- [**FIFA World Cup Brazil 2014**](http://brazil2014.herokuapp.com), [(Database)](http://brazil2014.herokuapp.com/db)\r\n- [**UEFA Champions League, Deutsche Bundesliga**](http://sportbook.herokuapp.com), [(Database)](http://sportbook.herokuapp.com/db)\r\n- [**Super Bowl XLVIII**](http://superbowl.herokuapp.com), [(Database)](http://superbowl.herokuapp.com/db) - American Football\r\n\r\n\r\n\r\n## Setup\r\n\r\n### Setup on your local machine\r\n\r\nClone the Sportbook git repo:\r\n\r\n    git clone git://github.com/openbookie/sportbook.git\r\n\r\nGet all your Ruby libraries (gems) installed using the bundler tool:\r\n\r\n    cd sportbook\r\n    bundle install --without production\r\n\r\nNote, use the `--without production` option for local development\r\nunless you want to install the PostgreSQL (pg) database libraries and services\r\n(required for production on the Heroku hosting service.)\r\n\r\nSetup the database and seeds:\r\n\r\n    rake db:setup\r\n\r\nShowtime! Startup the server and use the `demo`/`demo` credentials to sign in:\r\n\r\n    rails server\r\n\r\nThat's it.\r\n\r\n\r\n### Setup on Heroku \r\n\r\nClone the Sportbook git repo:\r\n\r\n    git clone git://github.com/openbookie/sportbook.git\r\n\r\nCreate app on Heroku e.g.\r\n\r\n    cd sportbook\r\n    heroku create <your_app_name_here>\r\n\r\nUpload via\r\n\r\n    git push heroku\r\n\r\nCreate DB on first upload via\r\n\r\n    heroku run rake db:setup\r\n\r\nShowtime! Sign in using the  `demo`/`demo` credentials. That's it.\r\n\r\n\r\n## License\r\n\r\nThe sportbook scripts and templates are dedicated to the public domain.\r\nUse it as you please with no restrictions whatsoever.\r\n\r\n## Questions? Comments?\r\n\r\nSend them along to the [Open Sports Database & Friends Forum/Mailing List](http://groups.google.com/group/opensport).\r\nThanks!\r\n"
    },
    {
        "repo": "/uberfastman/yfpy",
        "language": "Python",
        "readme_contents": "[<img src=\"https://github.com/uberfastman/yfpy/raw/main/docs/_static/yfpy-logo.svg\" width=\"400\"/>](https://github.com/uberfastman/yfpy)\n\n## YFPY - Yahoo Fantasy Sports API Wrapper\nPython API wrapper for the Yahoo Fantasy Sports public API\n\n*Author: Wren J. R. (uberfastman)*\n\n[![GitHub release (latest SemVer)](https://img.shields.io/github/v/release/uberfastman/yfpy?color=yellowgreen&label=latest%20release&sort=semver)](https://github.com/uberfastman/yfpy/releases/latest)\n[![GitHub tag (latest SemVer)](https://img.shields.io/github/v/tag/uberfastman/yfpy?color=yellowgreen&label=latest%20version&sort=semver)](https://github.com/uberfastman/yfpy/tags)\n[![GitHub Workflow Status (with event)](https://img.shields.io/github/actions/workflow/status/uberfastman/yfpy/python-package.yml?color=brightgreen&label=build)](https://github.com/uberfastman/yfpy/actions/workflows/python-package.yml)\n\n[![PyPI](https://img.shields.io/pypi/v/yfpy.svg?style=flat)](https://pypi.python.org/pypi/yfpy)\n[![PyPI](https://img.shields.io/pypi/dm/yfpy.svg?style=flat)](https://pypi.python.org/pypi/yfpy)\n[![PyPI](https://img.shields.io/pypi/pyversions/yfpy.svg?style=flat)](https://pypi.python.org/pypi/yfpy)\n[![PyPI](https://img.shields.io/pypi/l/yfpy.svg?style=flat)](https://pypi.python.org/pypi/yfpy)\n\n---\n\n<sub>***Do you like the YFPY API wrapper? Star the repository on GitHub and please consider helping support its ongoing development:***</sub>\n\n[<img src=\"https://github.com/uberfastman/yfpy/raw/main/resources/images/donate-paypal.png\" width=\"75\"/>](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=VZZCNLRHH9BQS) [<img src=\"https://github.com/uberfastman/yfpy/raw/main/resources/images/donate-bitcoin.png\" width=\"75\"/>](https://share.trustwallet.com/ZoAkTpY1I9) [<img src=\"https://github.com/uberfastman/yfpy/raw/main/resources/images/donate-ethereum.png\" width=\"75\"/>](https://share.trustwallet.com/MF8YBO01I9)\n\n|                                                                <sub><sup>Cryptocurrency</sup></sub> |                                                      <sub><sup>Address</sup></sub>                                                       |\n|----------------------------------------------------------------------------------------------------:|:----------------------------------------------------------------------------------------------------------------------------------------:|\n|                                                                 <sub><sup>Bitcoin (BTC)</sup></sub> |                                    <sub><sup>`bc1qataspvklhewtswm357m0677q4raag5new2xt3e`</sup></sub>                                    | \n|                                                                <sub><sup>Ethereum (ETH)</sup></sub> |                                    <sub><sup>`0x5eAa522e66a90577D49e9E72f253EC952CDB4059`</sup></sub>                                    |\n\n<sub><sup></sup></sub>\n\n---\n\n**[READ THE DOCS HERE!](https://yfpy.uberfastman.com)**\n<br/>\n<sup>Detailed documentation on YFPY can be found at [https://yfpy.uberfastman.com](https://yfpy.uberfastman.com).</sup>\n\n### Table of Contents\n* [About](#about)\n* [Installation](#installation)\n* [Setup](#setup)\n* [Usage](#usage)\n* [Testing](#testing)\n* [Dependencies](#dependencies)\n* [Troubleshooting](#troubleshooting)\n\n---\n\n<a name=\"about\"></a>\n### About\n\nYFPY is a comprehensive wrapper around the Yahoo Fantasy Sports API. It allows for easy retrieval and parsing of almost any data you might wish to extract and use from any Yahoo fantasy league to which your Yahoo account has access (or for public leagues). The primary focus of this wrapper is on fantasy football (NFL), but it also supports usage with fantasy hockey (NHL), fantasy baseball (MLB), and fantasy basketball (NBA). \n\n---\n\n<a name=\"installation\"></a>\n### Installation\n\n#### Pip\n\n* If you wish to use YFPY within another project, from within your project directory, run\n    ```shell\n    pip install yfpy\n    ```\n    \n    or add `yfpy` to your project `requirements.txt`.\n\n#### Manual\n\n* If you wish to download and use YFPY locally, clone the git repository:\n  ```shell\n  git clone git@github.com:uberfastman/yfpy.git\n  ```\n\n---\n\n<a name=\"setup\"></a>\n### Setup\n\n#### Yahoo Developer Network App\n\nIn order to use YFPY with private fantasy leagues, you must set up an app on your Yahoo account to allow access. Follow the step-by-step guide below for instructions on how to do so, or see [Getting Started](https://developer.yahoo.com/oauth2/guide/openid_connect/getting_started.html) in the Yahoo Developer Network docs for more details.\n\n**Note:** *If you are only planning on using YFPY to pull \"read only\" data from public leagues, you do not need to do this.*\n\n* Log in to a Yahoo account with access to whatever fantasy leagues from which you wish to retrieve data.\n* Go to [https://developer.yahoo.com/apps/create/](https://developer.yahoo.com/apps/create/) and create an app (you must be logged into your Yahoo account as stated above). For the app, select the following options:\n    * `Application Name` (**Required**): `yfpy` (you can name your app whatever you want, but this is just an example).\n    * `Application Type` (**Required**): select the `Installed Application` radio button.\n    * `Description` (*Optional*): you *may* write a short description of what the app does.\n    * `Home Page URL` (*Optional*): if you have a web address related to your app you *may* add it here.\n    * `Redirect URI(s)` (**Required**): this field must contain a valid redirect address, so you can use `https://localhost:8080`\n    * `API Permissions` (**Required**): check the `Fantasy Sports` checkbox. You can leave the `Read` option selected (appears in an accordion expansion underneath the `Fantasy Sports` checkbox once you select it).\n    * Click the `Create App` button.\n    * Once the app is created, it should redirect you to a page for your app, which will show both a `Client ID` and a `Client Secret`.\n    * Make a copy of [`auth/EXAMPLE.private.json`](https://github.com/uberfastman/yfpy/blob/main/auth/EXAMPLE.private.json), rename it to just `private.json`, and copy the `Client ID` and `Client Secret` values to their respective fields (make sure the strings are wrapped regular quotes (`\"\"`), NOT formatted quotes (`\u201c\u201d`)). The path to this file will be needed to point YFPY to your credentials.\n    * Now you should be ready to initialize the OAuth2 connection between YFPY your Yahoo account.\n\n---\n\n<a name=\"usage\"></a>\n### Usage\n\n#### Authentication\n\n* Follow the instructions in the [Installation](#installation) and [Setup](#setup) sections.\n* The ***first*** time you use YFPY, a browser window will open up asking you to allow your app to access your Yahoo fantasy sports data. You ***MUST*** hit allow, and then copy the verification code that pops up into the command line prompt where it will now be asking for verification, hit enter, and the OAuth2 three-legged handshake should be complete and your data should have been successfully retrieved.\n* YFPY should have now generated a `token.json` for you in the same directory where you stored your `private.json` credentials, and for all subsequent runs of your app, you should be able to keep retrieving Yahoo fantasy sports data using YFPY without re-verifying, since the generated refresh token should now just renew whenever you use the same `token.json` file to authenticate your app.\n\n#### Querying the Yahoo Fantasy Sports API\n\n* See the documentation on the  [`yfpy.query.YahooFantasySportsQuery`](https://yfpy.uberfastman.com/_autosummary/yfpy.query.YahooFantasySportsQuery.html#yfpy.query.YahooFantasySportsQuery) class for example usage of all available queries.\n* See [`quickstart/quickstart.py`](https://github.com/uberfastman/yfpy/blob/main/quickstart/quickstart.py) for example usage output.\n  * Uncomment/comment out whichever configuration values in their respective functions with which you wish to experiment.\n  * Uncomment/comment out whichever query lines in the `RUN QUERIES` section you wish to run.\n  * Uncomment/comment out whichever query lines in the `CHECK FOR MISSING DATA FIELDS` section you wish to check for any new/missing data fields returned by the Yahoo Sports Fantasy Football API.\n\n---\n\n<a name=\"testing\"></a>\n### Testing\n\nYFPY has a collection of fully functional code snippets that can be run using [pytest](https://docs.pytest.org/en/6.2.x/). These snippets demonstrate how to use YFPY to retrieve your Yahoo Fantasy Sports data.\n\n#### Unit\n\n* See the [`test/unit`](https://github.com/uberfastman/yfpy/blob/main/test/unit/) directory for example code snippets using pytest.\n\n#### Integration\n\n* See the [`test/integration`](https://github.com/uberfastman/yfpy/blob/main/test/integration/) directory for example code snippets using pytest.\n* Before running any integration tests, make a copy of [`auth/EXAMPLE.env`](https://github.com/uberfastman/yfpy/blob/main/auth/EXAMPLE.env) in the [`auth/`](https://github.com/uberfastman/yfpy/blob/main/auth/) directory and rename it to `.env`.\n* Copy your Yahoo `Client ID` and `Client Secret` into the environment variables in `.env` so that pytest can use them when hitting the Yahoo Fantasy Sports API.\n* If this is the first time running pytest with your Yahoo API credentials, you ***MUST*** allow interactive prompts within pytest by using the `-s` flag.\n* The fixture values in [`test/integration/conftest.py`](https://github.com/uberfastman/yfpy/blob/main/test/integration/conftest.py) are defined in [`quickstart/quickstart.py`](https://github.com/uberfastman/yfpy/blob/main/quickstart/quickstart.py), and can be changed for testing by uncommenting/commenting out the values inside each respective function.\n\n#### Running\n\n* You can invoke all pytest tests (both integration test and unit tests) by running the below from the root directory:\n  * `pytest -v -s`\n* If you want to run only the unit tests, you can run:\n  * `pytest -v -s -m unit`\n* If you want to run only the integration tests, you can run:\n  * `pytest -v -s -m integration`\n\n---\n\n<a name=\"dependencies\"></a>\n### Dependencies\n\n#### Platform\n\nYFPY has only been tested extensively on macOS, but is written to be platform-agnostic, and seems to work without issue on Windows and Linux. \n\n#### Python\n\nYFPY requires Python 3.8 or later, and has been tested through Python 3.11.\n\n#### Development\n\nDirect project dependencies can be viewed in `requirements.txt`, and additional development and build dependencies (*not* including transitive dependencies) can be viewed in `requirements-dev.txt`.\n\n---\n\n<a name=\"troubleshooting\"></a>\n### Troubleshooting\n\n#### Yahoo Fantasy Sports API\n\nOccasionally when you use the Yahoo Fantasy Sports API, there are hangups on the other end that can cause data not to transmit, and you might encounter an error similar to this:\n```\nTraceback (most recent call last):\n  File \"yfpy-app.py\", line 114, in <module>\n    var = app.run()\n  File \"/Users/your_username/PATH/T0/LOCAL/PROJECT/yfpy-app.py\", line 429, in run\n    for team in team_standings:\nIndexError: list index out of range\n```\n\nTypically, when the above error (or a similar error) occurs, it simply means that one of the Yahoo Fantasy Sports API calls failed and so no data was retrieved. This can be fixed by simply re-running data query.\n"
    },
    {
        "repo": "/Drarig29/brackets-viewer.js",
        "language": "TypeScript",
        "readme_contents": "# brackets-viewer.js\n\n[![npm](https://img.shields.io/npm/v/brackets-viewer.svg)](https://www.npmjs.com/package/brackets-viewer)\n[![Downloads](https://img.shields.io/npm/dt/brackets-viewer.svg)](https://www.npmjs.com/package/brackets-viewer)\n[![jsDelivr](https://data.jsdelivr.com/v1/package/npm/brackets-viewer/badge?style=rounded)](https://www.jsdelivr.com/package/npm/brackets-viewer)\n[![Package Quality](https://packagequality.com/shield/brackets-viewer.svg)](https://packagequality.com/#?package=brackets-viewer)\n\nA simple library to display tournament brackets (round-robin, single elimination, double elimination)\n\nIt contains all the logic needed to display tournaments.\n\n### Features\n\n- Supports translation ([i18next](https://www.i18next.com/)), which also allows you to change the vocabulary\n- It was developed in vanilla JS, so you can [use it in any framework](https://github.com/Drarig29/brackets-viewer.js/discussions/74)\n- A full working example of creating and displaying brackets (see [`./demo/with-ui.html`](demo/with-ui.html))\n- Themes supported, with CSS variables (see [`./demo/themes`](/demo/themes))\n- Display participant images next to their name ([example](https://github.com/Drarig29/brackets-viewer.js/blob/668aae1ed9db41ab21665459635cd6b71cad247c/demo/with-api.html#L34-L38))\n- Do actions when a match is clicked ([example](https://github.com/Drarig29/brackets-viewer.js/blob/ed31fc4fc43336d3543411f802a8b1d9d592d467/demo/with-api.html#L53), [feature request](https://github.com/Drarig29/brackets-viewer.js/discussions/80))\n- Custom round names: do you want to say \"Semi Finals\" instead of \"Round 2\"? ([example](https://github.com/Drarig29/brackets-viewer.js/blob/ed31fc4fc43336d3543411f802a8b1d9d592d467/demo/with-api.html#L46-L52), [feature request](https://github.com/Drarig29/brackets-viewer.js/discussions/93))\n\n![Screenshot](screenshot.png)\n\n## How to use?\n\nImport the library from npm using [jsDelivr](https://www.jsdelivr.com/) (you can replace `@latest` to lock a specific version):\n\n```html\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/brackets-viewer@latest/dist/brackets-viewer.min.css\" />\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/brackets-viewer@latest/dist/brackets-viewer.min.js\"></script>\n```\n\nOr from GitHub with (you can replace `@master` by any branch name, tag name or commit id):\n\n```html\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/gh/Drarig29/brackets-viewer.js@master/dist/brackets-viewer.min.css\" />\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/gh/Drarig29/brackets-viewer.js@master/dist/brackets-viewer.min.js\"></script>\n```\n\nNow, you can use it with data generated using [brackets-manager](https://github.com/Drarig29/brackets-manager.js) or with crafted data following the [brackets-model](https://github.com/Drarig29/brackets-model).\n\n**Usage:**\n\nThis will find a **unique** element with a `.brackets-viewer` class, and **append** to it:\n\n```js\nwindow.bracketsViewer.render({\n  stages: data.stage,\n  matches: data.match,\n  matchGames: data.match_game,\n  participants: data.participant,\n});\n```\n\nIf you want to clear the container's content before rendering again, use this:\n\n```js\nwindow.bracketsViewer.render({\n  stages: data.stage,\n  matches: data.match,\n  matchGames: data.match_game,\n  participants: data.participant,\n}, {\n  clear: true,\n});\n```\n\nIf you have multiple elements with a `.brackets-viewer` class, you must provide a `selector`:\n\n```js\nwindow.bracketsViewer.render({\n  stages: data.stage,\n  matches: data.match,\n  matchGames: data.match_game,\n  participants: data.participant,\n}, {\n  selector: '#example',\n});\n```\n\nSee the [full documentation](https://drarig29.github.io/brackets-docs/reference/viewer/interfaces/Config.html) for the `render()` configuration.\n\n## Demos\n\nTo quickly test, you can also try the demos by visiting `./demo/index.html`.\n\nTo use `json-server`, you can:\n\n- Run the npm script named `db` to serve the static database file `./demo/db.json`\n\n  ```bash\n  npm run db\n  ```\n\n- Or use directly the `db.json` file generated by unit tests in the `brackets-manager` project\n\n  ```bash\n  npx json-server --watch path/to/brackets-manager/db.json\n  ```\n\n## Credits\n\nThis library has been created to be used by the [Nantarena](https://nantarena.net/).\n\nIt has been inspired by:\n\n- [Toornament](https://www.toornament.com/en_US/) (design inspiration)\n- [Responsive Tournament Bracket](https://codepen.io/jimmyhayek/full/yJkdEB) (connection between matches in plain CSS)\n"
    },
    {
        "repo": "/HarryShomer/Hockey-Scraper",
        "language": "Python",
        "readme_contents": ".. image:: https://badge.fury.io/py/hockey-scraper.svg\n   :target: https://badge.fury.io/py/hockey-scraper\n.. image:: https://readthedocs.org/projects/hockey-scraper/badge/?version=latest\n   :target: https://readthedocs.org/projects/hockey-scraper/?badge=latest\n   :alt: Documentation Status\n\n\nHockey-Scraper\n==============\n\n.. inclusion-marker-for-sphinx\n\n\nPurpose\n-------\n\nScrape NHL data off the NHL API and website. This includes the Play by Play and Shift data for each game and the schedule information. \nIt currently supports all preseason, regular season, and playoff games from the 2007-2008 season onwards. \n\nPrerequisites\n-------------\n\nYou are going to need to have python installed for this. This should work for both python 2.7 and 3. I recommend having\nfrom at least version 3.6.0 but earlier versions should be fine.\n\nInstallation\n------------\n\nTo install all you need to do is open up your terminal and run:\n\n::\n\n    pip install hockey_scraper\n\n\nNHL Usage\n---------\n\nThe full documentation can be found `here <http://hockey-scraper.readthedocs.io/en/latest/>`_.\n\nStandard Scrape Functions\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nScrape data on a season by season level:\n\n::\n\n    import hockey_scraper\n\n    # Scrapes the 2015 & 2016 season with shifts and stores the data in a Csv file\n    hockey_scraper.scrape_seasons([2015, 2016], True)\n\n    # Scrapes the 2008 season without shifts and returns a dictionary containing the pbp Pandas DataFrame\n    scraped_data = hockey_scraper.scrape_seasons([2008], False, data_format='Pandas')\n\nScrape a list of games:\n\n::\n\n    import hockey_scraper\n\n    # Scrapes the first game of 2014, 2015, and 2016 seasons with shifts and stores the data in a Csv file\n    hockey_scraper.scrape_games([2014020001, 2015020001, 2016020001], True)\n\n    # Scrapes the first game of 2007, 2008, and 2009 seasons with shifts and returns a Dictionary with the Pandas DataFrames\n    scraped_data = hockey_scraper.scrape_games([2007020001, 2008020001, 2009020001], True, data_format='Pandas')\n\nScrape all games in a given date range:\n\n::\n\n    import hockey_scraper\n\n    # Scrapes all games between 2016-10-10 and 2016-10-20 without shifts and stores the data in a Csv file\n    hockey_scraper.scrape_date_range('2016-10-10', '2016-10-20', False)\n\n    # Scrapes all games between 2015-1-1 and 2015-1-15 without shifts and returns a Dictionary with the pbp Pandas DataFrame\n    scraped_data = hockey_scraper.scrape_date_range('2015-1-1', '2015-1-15', False, data_format='Pandas')\n\n\nThe dictionary returned by setting the default argument \"data_format\" equal to \"Pandas\" is structured like:\n\n::\n\n    {\n      # Both of these are always included\n      'pbp': pbp_df,\n\n      # This is only included when the argument 'if_scrape_shifts' is set equal to True\n      'shifts': shifts_df\n    }\n\n\nSchedule\n~~~~~~~~\n\nThe schedule for any past or future games can be scraped as follows:\n\n::\n\n    import hockey_scraper\n\n    # As oppossed to the other calls the default format is 'Pandas' which returns a DataFrame\n    sched_df = hockey_scraper.scrape_schedule(\"2019-10-01\", \"2020-07-01\")\n\nThe columns returned are: `['game_id', 'date', 'venue', 'home_team', 'away_team', 'start_time', 'home_score', 'away_score', 'status']`\n\n\nPersistent Data\n~~~~~~~~~~~~~~~\n\nAll the raw game data files retrieved can also be saved to your disk. This allows for faster rescraping (we don't need to re-retrieve them) \nand the ability to parse the data yourself.\n\nThis is achieved by setting the keyword argument `docs_dir=True`. This will store the data in a directory called `~/hockey_scraper_data`. \nYou can provide your own directory where you want everything to be stored (it must exist beforehand). By default `docs_dir=False`.\n\nFor example, let's say we are scraping the JSON PBP data for game `2019020001 <http://statsapi.web.nhl.com/api/v1/game/2019020001/feed/live>`_. \nIf `docs_dir` isn't `False` it will first check if the data is already in the directory. If so, it will load in the data from that file and not make a GET \nrequest to the NHL API. However if it doesn't exist, it will make a GET request and then save the output to the directory. \nThis will ensure that next time you are requesting that data it can load it from a file.\n\nHere are some examples.\n\nThe default saving location is `~/hockey_scraper_data`.\n\n\n::\n\n    # Create or try to refer to a directory in the home directory\n    # Will create a directory called 'hockey_scraper_data' in the home directory (if it doesn't exist)\n    hockey_scraper.scrape_seasons([2015, 2016], True, docs_dir=True)\n\n\nUser defined directory\n\n::\n\n    USER_PATH = \"/....\"\n    hockey_scraper.scrape_seasons([2015, 2016], True, docs_dir=USER_PATH)\n\n\nYou can override the existing files by specifying `rescrape=True`. It will retrieve all the files from source and save the newer versions to `docs_dir`.\n\n::\n\n    hockey_scraper.scrape_seasons([2015, 2016], True, docs_dir=USER_PATH, rescrape=True)\n\n\n\nLive Scraping\n~~~~~~~~~~~~~\n\nHere is a simple example of a way to setup live scraping. I strongly suggest checking out\n`this section <https://hockey-scraper.readthedocs.io/en/latest/live_scrape.html>`_ of the docs if you plan on using this.\n::\n\n   import hockey_scraper as hs\n\n\n   def to_csv(game):\n       \"\"\"\n       Store each game DataFrame in a file\n\n       :param game: LiveGame object\n\n       :return: None\n       \"\"\"\n\n       # If the game:\n       # 1. Started - We recorded at least one event\n       # 2. Not in Intermission\n       # 3. Not Over\n       if game.is_ongoing():\n           # Print the description of the last event\n           print(game.game_id, \"->\", game.pbp_df.iloc[-1]['Description'])\n\n           # Store in CSV files\n           game.pbp_df.to_csv(f\"../hockey_scraper_data/{game.game_id}_pbp.csv\", sep=',')\n           game.shifts_df.to_csv(f\"../hockey_scraper_data/{game.game_id}_shifts.csv\", sep=',')\n\n   if __name__ == \"__main__\":\n       # B4 we start set the directory to store the files\n       # You don't have to do this but I recommend it\n       hs.live_scrape.set_docs_dir(\"../hockey_scraper_data\")\n\n       # Scrape the info for all the games on 2018-11-15\n       games = hs.ScrapeLiveGames(\"2018-11-15\", if_scrape_shifts=True, pause=20)\n\n       # While all the games aren't finished\n       while not games.finished():\n           # Update for all the games currently being played\n           games.update_live_games(sleep_next=True)\n\n           # Go through every LiveGame object and apply some function\n           # You can of course do whatever you want here.\n           for game in games.live_games:\n               to_csv(game)\n\n\n\nContact\n-------\n\nPlease contact me for any issues or suggestions. For any bugs or anything related to the code please open an issue.\nOtherwise you can email me at Harryshomer@gmail.com.\n\n\nCopyright\n---------\n::\n\n    Copyright (C) 2019-2022 Harry Shomer\n    This file is part of hockey_scraper\n\n    hockey_scraper is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n"
    },
    {
        "repo": "/cvidan/bet365-scraper",
        "language": "Python",
        "readme_contents": "# Bet365 Scraper\n\nThis is a Python script to grab data for betting odds from the site https://bet365.com/ using Selenium.\n\n## Why Selenium?\n\nI would have preferred to use something like BeautifulSoup, but Bet365 has always been my go-to site for sportsbetting, and as far as I can tell there isn't a way to link directly to a market. For example, there is nothing along the lines of https://bet365.com/basketball/futures/nba/mvp as a way to get to the market for the NBA's Most Valuable Player. So instead, using Selenium we navigate there in Firefox from the home page.\n\n## How to use\n\nThe script uses geckodriver for Selenium. The path it expects to find it is 'C:\\Program Files\\geckodriver\\geckodriver.exe'.\n\nRun the SeleniumScraper.py file with three parameters (each exactly as they appear on the site):\n1) The sport (e.g. \"Basketball\")\n2) The market (e.g. \"NBA Futures 2018/19\")\n3) The particular bet (e.g. \"Regular Season MVP\")\n\nSo for example,\n``` python SeleniumScraper.py \"Basketball\" \"NBA Futures 2018/19\" \"Regular Season MVP\" ```\n"
    },
    {
        "repo": "/zbinney/Stats_in_Sports_2021",
        "language": "HTML",
        "readme_contents": "# Statistics in Sports Class, Fall 2021\n\nMaterials for the Statistics in Sports class for first-year undergrads at Oxford College of Emory University. This course is unique in that it assumes no background. It covers:\n\n* An introduction to sports analytics and R for sports analytics\n* Baseball analytics\n* Basketball analytics\n* Football analytics\n* Soccer analytics\n* Sports business analytics\n* Some other random sessions as part of Oxford's first-year experience (ignore these)\n\nMaterials include:\n* Syllabus\n* Lecture slides\n* Practical R labs\n* Homeworks\n\nThe course also includes a group final project working with real-world sports data. The projects for this semester were analyses of Emory's MBB and WBB practice data, creating a recruitment map for Emory Athletics, and analyzing nflfastR data. A more detailed final project description and rubric is available upon request.\n\nFeel free to use any of these materials with attribution to Zachary Binney, Oxford College of Emory University and this Github link.\n"
    },
    {
        "repo": "/ShannonChenCHN/eureka",
        "language": null,
        "readme_contents": "\n# eureka\n\n> \u201c\u5b66\u4e86\u5374\u6ca1\u6709\u6539\u53d8\u751f\u6d3b\uff0c\u90a3\u5176\u5b9e\u5c31\u662f\u6839\u672c\u6ca1\u5b66\u4f1a\u3002\u201d \u200b\u200b\u200b \u2014\u2014\u300a\u65b0\u751f\uff1a\u4e03\u5e74\u5c31\u662f\u4e00\u8f88\u5b50\u300b\n\n\n\u4f60\u597d\uff0c\u6211\u662f\u4e00\u540d iOS \u5de5\u7a0b\u5e08\uff0c\u6211\u4f1a\u6bcf\u5468\u5728\u8fd9\u91cc\u5206\u4eab\u6211\u7684\u89c1\u95fb\u548c\u601d\u8003\uff0c\u5305\u62ec\u4f46\u4e0d\u4ec5\u9650\u4e8e\u6280\u672f\uff08\u5927\u524d\u7aef\u3001iOS\u3001React Native\u3001Python\uff09\u3001\u4e92\u8054\u7f51\u3001\u8bfb\u4e66\u3001\u82f1\u8bed\u5b66\u4e60\u548c\u81ea\u6211\u6210\u957f\uff0c\u5e0c\u671b\u5bf9\u4f60\u4e5f\u6709\u5e2e\u52a9~\n\n\n## \u5173\u4e8e\n\u6211\u662f\u4e00\u4e2a\u559c\u6b22\u80e1\u601d\u4e71\u60f3\u7684\u4eba\uff0c\u5e73\u65f6\u4e5f\u662f\u4e2a\u8bdd\u75e8\uff0c\u4f46\u662f\u8bdd\u592a\u591a\uff0c\u603b\u5f52\u4e0d\u662f\u4ef6\u597d\u4e8b\u3002\n\n\u5982\u679c\u90fd\u662f\u6709\u8da3\u7684\u8bdd\uff0c\u5012\u8fd8\u7f62\u4e86\uff0c\u82e5\u662f\u5e9f\u8bdd\u592a\u591a\uff0c\u4e5f\u5c31\u5f88\u96be\u8c08\u5f97\u4e0a\u6709\u8da3\uff0c\u53cd\u800c\u8bf4\u8822\u8bdd\u7684\u6982\u7387\u53d8\u5927\u4e86\u3002\n\n\u5c31\u50cf\u516c\u5f00\u8bfe[\u300e\u5982\u4f55\u6210\u4e3a\u4e00\u4e2a\u66f4\u597d\u7684\u4ea4\u8c08\u8005\u300f](http://open.163.com/movie/2016/3/F/E/MBFLN6BJF_MBFLNJGFE.html)\u4e2d\u6240\u8bf4\u7684\uff0c\u5f88\u591a\u65f6\u5019\uff0c\u6211\u4eec\u603b\u662f\u6025\u4e8e\u8868\u8fbe\u81ea\u5df1\u7684\u89c2\u70b9\uff0c\u800c\u5fd8\u8bb0\u4e86**\u503e\u542c**\u3002\u5176\u5b9e\uff0c\u6211\u4eec\u5927\u591a\u65f6\u5019\u8bf4\u51fa\u7684\u8bdd\uff0c\u90fd\u6ca1\u6709\u7ecf\u8fc7\u4ed4\u7ec6\u601d\u8003\u548c\u6c89\u6dc0\uff0c\u4ec5\u4ec5\u662f\u4e3a\u4e86\u6ee1\u8db3\u81ea\u5df1\u7684\u8868\u8fbe\u6b32\u671b\u800c\u5df2\uff0c\u800c\u5199\u4f5c\u6070\u597d\u80fd\u591f\u5f88\u597d\u5730\u68b3\u7406\u6211\u4eec\u7684\u60f3\u6cd5\u548c\u601d\u7eea\uff0c\u4fc3\u8fdb\u601d\u8003\u3002\u540c\u65f6\uff0c\u4e5f\u91ca\u653e\u4e86\u6211\u4eec\u7684\u8868\u8fbe\u6b32\u671b\uff0c\u8ba9\u6211\u4eec\u5b66\u4f1a\u601d\u8003\uff0c\u5b66\u4f1a\u503e\u542c\u3002\n\n\n## \u76ee\u5f55\n- [\u6398\u91d1](https://juejin.im/user/5788b6eb79bc44005fc91d32/posts)\u3001[\u7b80\u4e66](http://www.jianshu.com/u/4ef5e287fc91)\n- [\u6211\u7684\u5468\u62a5](https://github.com/ShannonChenCHN/iOSDevLevelingUp/issues/120)\uff08\u5df2\u505c\u6b62\u66f4\u65b0\uff09\n- [\u6211\u7684\u539f\u5219](https://github.com/ShannonChenCHN/eureka/issues/101)\uff08\u8bfb\u300a\u539f\u5219\u300b\u540e\u7684\u5b9e\u8df5\uff09\n- [\u7cbe\u8fdb](https://github.com/ShannonChenCHN/eureka/issues/12)\n- [TED \u516c\u5f00\u8bfe](https://github.com/ShannonChenCHN/eureka/issues/43)\n- [\u6211\u7684 iOS \u5f00\u53d1\u8fdb\u9636\u4e4b\u65c5](https://github.com/ShannonChenCHN/iOSLevelingUp)\u2b50\ufe0f\n- [\u7406\u8d22\u3001\u6295\u8d44](https://github.com/ShannonChenCHN/Money)\u2b50\ufe0f\u2b50\ufe0f\n- \u5916\u8bed\u5b66\u4e60\n  - [\u82f1\u8bed](https://github.com/ShannonChenCHN/ESL)\u2b50\ufe0f\u2b50\ufe0f\n  - [\u6cd5\u8bed](https://github.com/ShannonChenCHN/French)\n- [\u4eba\u9645\u5173\u7cfb](https://github.com/ShannonChenCHN/Relationship)\n- [\u4ea7\u54c1/\u8bbe\u8ba1/\u8fd0\u8425](https://github.com/ShannonChenCHN/eureka/issues/104)\u2b50\ufe0f\n- \u4e92\u8054\u7f51\n  - \u804c\u573a\n    - [\u804c\u4e1a\u89c4\u5212](https://github.com/ShannonChenCHN/eureka/issues/85)\n    - [\u7a0b\u5e8f\u5458\u627e\u5de5\u4f5c\u7684\u6b63\u786e\u59ff\u52bf](https://github.com/ShannonChenCHN/eureka/issues/16)\n    - [[\u7b54\u670b\u53cb\u95ee] \u6211\u662f 18 \u5c4a\u6bd5\u4e1a\u751f\uff0c\u6536\u5230\u4e86 xxx \u7684 offer \uff0c\u8be5\u4e0d\u8be5\u9a6c\u4e0a\u7b7e\uff1f](https://github.com/ShannonChenCHN/eureka/issues/73)\n    - [\u5982\u4f55\u505a\u7ba1\u7406\uff1f\u5982\u4f55\u5e26\u56e2\u961f\uff1f\u5982\u4f55\u505a\u4e00\u4e2a\u5408\u683c\u7684\u4f18\u79c0\u7684 leader\uff1f](https://github.com/ShannonChenCHN/eureka/issues/40)\n    - [\u62db\u8058 iOS \u5f00\u53d1\u6280\u672f\u4eba\u5458\u65f6\uff0c\u5982\u4f55\u7b5b\u9009\u7b80\u5386\u548c\u4e00\u9762\uff1f](https://github.com/ShannonChenCHN/eureka/issues/59)\n    - [\u7ed9\u60f3\u8f6c\u884c\u5f53\u7a0b\u5e8f\u5458\u7684\u670b\u53cb\u7684\u4e00\u4e9b\u5efa\u8bae](https://github.com/ShannonChenCHN/eureka/issues/44)\n    - [\u77e5\u4e4e Live - \u4ec0\u4e48\u6837\u7684\u8df3\u69fd\u624d\u771f\u6b63\u6709\u4ef7\u503c](https://github.com/ShannonChenCHN/eureka/blob/master/posts/%E7%9F%A5%E4%B9%8E%20Live%20-%20%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E8%B7%B3%E6%A7%BD%E6%89%8D%E7%9C%9F%E6%AD%A3%E6%9C%89%E4%BB%B7%E5%80%BC.md)\n    - [\u77e5\u4e4e Live \u7b14\u8bb0 - \u7a0b\u5e8f\u5458\uff1a\u5982\u4f55\u5728\u6574\u4e2a\u804c\u4e1a\u751f\u6daf\u4e2d\u4fdd\u6301\u7ade\u4e89\u529b](https://github.com/ShannonChenCHN/eureka/blob/master/posts/\u77e5\u4e4e%20Live%20-%20\u7a0b\u5e8f\u5458\uff1a\u5982\u4f55\u5728\u6574\u4e2a\u804c\u4e1a\u751f\u6daf\u4e2d\u4fdd\u6301\u7ade\u4e89\u529b.md)\n    - [\u77e5\u4e4e Live - \u6253\u7834\u7126\u8651\uff0c\u5b66\u4f1a\u81ea\u5df1\u505a\u804c\u4e1a\u89c4\u5212](https://github.com/ShannonChenCHN/eureka/blob/master/posts/\u77e5\u4e4e%20Live%20-%20\u6253\u7834\u7126\u8651\uff0c\u5b66\u4f1a\u81ea\u5df1\u505a\u804c\u4e1a\u89c4\u5212.md)\n  - \u6280\u672f\u6210\u957f\n    - [\u5982\u4f55\u5b66\u4e60\u7f16\u7a0b\u8bed\u8a00](https://github.com/ShannonChenCHN/eureka/blob/master/posts/how-to-learn-prog-lang.md)\n    - [\u77e5\u4e4e Live \u7b14\u8bb0 - \u4e09\u5e74\u4ece\u524d\u7aef\u5c0f\u5de5\u5230\u67b6\u6784](https://github.com/ShannonChenCHN/eureka/issues/9)\n    - [\u77e5\u4e4e Live - \u5982\u4f55\u81ea\u5b66\u8ba1\u7b97\u673a\u4e13\u4e1a\u8bfe\u7a0b](https://github.com/ShannonChenCHN/eureka/blob/master/posts/%E7%9F%A5%E4%B9%8E%20Live%20-%20%E5%A6%82%E4%BD%95%E8%87%AA%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%93%E4%B8%9A%E8%AF%BE%E7%A8%8B.md)\n  - \u6280\u672f\u5b9e\u8df5\n    - [\u524d\u7aef\u5f00\u53d1\u4e4b\u65c5](https://github.com/ShannonChenCHN/AFrontEndWebDevTour)\n    - [React Native \u5f00\u53d1\u4e4b\u65c5](https://github.com/ShannonChenCHN/AFrontEndWebDevTour/blob/master/React-Native/README.md)\n    - [Swift \u5b66\u4e60\u7b14\u8bb0](https://github.com/ShannonChenCHN/ASwiftTour)\n    - [Git \u76f8\u5173\u6280\u672f](https://github.com/ShannonChenCHN/eureka/issues/4)\n    - [\u5982\u4f55\u5e94\u5bf9\u7a0b\u5e8f\u5d29\u6e83\u95ee\u9898\uff0c\u4ee5\u53ca\u63d0\u9ad8\u7a0b\u5e8f\u7684\u53ef\u9760\u6027\uff1f](https://github.com/ShannonChenCHN/eureka/issues/88)\n    - [\u8bfb\u6e90\u7801\u7684\u6b63\u786e\u59ff\u52bf](https://github.com/ShannonChenCHN/eureka/issues/10)\n    - [\u4f7f\u7528 GitHub \u7684\u6b63\u786e\u59ff\u52bf](https://github.com/ShannonChenCHN/eureka/issues/4)\n  - \u5176\u4ed6\n    - [\uf8ff\u82f9\u679c\u8bbe\u5907\u7684\u6027\u80fd\u68c0\u6d4b\u548c\u4fdd\u517b](https://github.com/ShannonChenCHN/eureka/issues/106)\n    - [\u4ec0\u4e48\uff0c GitHub Issues \u8fd8\u53ef\u4ee5\u7528\u6765\u8bb0\u7b14\u8bb0\u3001\u5199\u535a\u5ba2\uff01\uff1f](https://github.com/ShannonChenCHN/eureka/issues/60)\n    - [\u4e2a\u4eba\u535a\u5ba2\u548c Markdown](https://github.com/ShannonChenCHN/eureka/issues/87)\n    - [\u8bfb\u300a\u6dd8\u5b9d\u6280\u672f\u8fd9\u5341\u5e74\u300b](https://github.com/ShannonChenCHN/eureka/issues/79)\n    - [[\u7b54\u670b\u53cb\u95ee] \u4ece\u5f00\u53d1\u4eba\u5458\u7684\u89d2\u5ea6\u770b\uff0c\u597d\u7684\u9700\u6c42\u6587\u6863\u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u7684\uff1f](https://github.com/ShannonChenCHN/eureka/issues/75)\n    - [\u5173\u4e8e\u5f00\u6e90](https://github.com/ShannonChenCHN/eureka/issues/69)\n- \u751f\u6d3b\n  - [\u4e0b\u73ed\u540e\u7684\u65f6\u95f4\uff08\u665a\u4e0a\u548c\u5468\u672b\uff09\u5e94\u8be5\u600e\u4e48\u8fc7\uff1f](https://github.com/ShannonChenCHN/eureka/issues/90)\n  - [\u793e\u4f1a\u4e3b\u4e49\u6838\u5fc3\u604b\u7231\u89c2](https://github.com/ShannonChenCHN/eureka/issues/6)\n  - [2017 \u4e0a\u534a\u5e74\u603b\u7ed3](https://github.com/ShannonChenCHN/eureka/issues/56)\n  - [\u56de\u987e 2017\uff0c\u5c55\u671b 2018\uff082017 \u5e74\u5ea6\u603b\u7ed3\uff09 ](https://github.com/ShannonChenCHN/eureka/issues/84)\n  - [2018 \u5e74\u524d\u56db\u4e2a\u6708\u90fd\u5e72\u4e86\u5565\uff1f](https://github.com/ShannonChenCHN/eureka/issues/89)\n  - [\u7a0b\u5e8f\u5458\u7684\u5065\u5eb7\u4e4b\u8def ](https://github.com/ShannonChenCHN/eureka/issues/22)\n  - [2018 \u5e74\u4e0a\u534a\u5e74\u603b\u7ed3](https://github.com/ShannonChenCHN/eureka/issues/95)\n  - [2018 \u676d\u5dde\u00b7\u4e91\u6816\u5927\u4f1a](https://github.com/ShannonChenCHN/eureka/issues/86#issuecomment-426145886)\n  - [\u518d\u89c1 2018\uff0c\u4f60\u597d 2019\uff082018 \u5e74\u5ea6\u603b\u7ed3\uff09](https://github.com/ShannonChenCHN/eureka/issues/99)\n  - [\u79df\u623f\u6307\u5357](https://github.com/ShannonChenCHN/eureka/issues/96)\n- [\u4e2a\u4eba\u6210\u957f](https://github.com/ShannonChenCHN/eureka/issues/12)\n  - [\u8bfb\u300a\u628a\u65f6\u95f4\u5f53\u4f5c\u670b\u53cb\u300b](https://github.com/ShannonChenCHN/eureka/blob/master/posts/%E8%AF%BB%E3%80%8A%E6%8A%8A%E6%97%B6%E9%97%B4%E5%BD%93%E4%BD%9C%E6%9C%8B%E5%8F%8B%E3%80%8B.md)\n  - [\u8bfb\u300a20 \u5c81\uff0c\u5149\u9634\u4e0d\u518d\u6765\u300b](https://github.com/ShannonChenCHN/eureka/blob/master/posts/%E8%AF%BB%E3%80%8A20%E5%B2%81%EF%BC%8C%E5%85%89%E9%98%B4%E4%B8%8D%E5%86%8D%E6%9D%A5%E3%80%8B.md)\n  - [\u8bfb\u300a\u5c0f\u72d7\u94b1\u94b1\u300b](https://github.com/ShannonChenCHN/eureka/blob/master/posts/%E8%AF%BB%E3%80%8A%E5%B0%8F%E7%8B%97%E9%92%B1%E9%92%B1%E3%80%8B.md)\n- [\u7a0b\u5e8f\u5458\uff08\u5de5\u79d1\u7537\uff09\u7684\u60c5\u5546\u8bfe](https://github.com/ShannonChenCHN/eureka/issues/71)\n  - [\u77e5\u4e4e Live - \u5982\u4f55\u4ece\u5c2c\u804a\u5230\u4eb2\u5bc6\u6c9f\u901a](https://github.com/ShannonChenCHN/eureka/blob/master/posts/%E7%9F%A5%E4%B9%8E%20Live%20-%20%E5%A6%82%E4%BD%95%E4%BB%8E%E5%B0%AC%E8%81%8A%E5%88%B0%E4%BA%B2%E5%AF%86%E6%B2%9F%E9%80%9A.md)\n- [\u5173\u4e8e\u9605\u8bfb](https://github.com/ShannonChenCHN/eureka/issues/19)\n  - [\u901f\u8bfb\u6cd5](https://github.com/ShannonChenCHN/eureka/issues/19#issuecomment-427539768)\n  - [\u9605\u8bfb\u6280\u672f \u6587\u7ae0/\u4e66\u7c4d \u7684\u6b63\u786e\u59ff\u52bf](https://github.com/ShannonChenCHN/eureka/issues/11)\n- [\u5173\u4e8e\u5199\u4f5c](https://github.com/ShannonChenCHN/eureka/issues/13)\n- \u7ffb\u8bd1\n  - [\\[\u8bd1\\]JavaScript \u5f00\u53d1\u8005\u6700\u5e38\u89c1\u7684 10 \u4e2a\u9519\u8bef](https://github.com/ShannonChenCHN/eureka/issues/54)\n\n\n## Contact Me\n\nEmail: shannonchenchn@foxmail.com\n\n"
    },
    {
        "repo": "/jd5688/online-sports-betting",
        "language": "PHP",
        "readme_contents": "Online Sports Betting\n<br/><br/>\nHomepage:<br/>\n<img src=\"http://s17.postimg.org/3k9uv5lrj/sportsbet1.png\"/>\n<br/><br/>\nDetail page:<br/>\n<img src=\"http://s4.postimg.org/mifxu9jbx/sportsbetdetail.png\"/>\n<br/><br/>\nAccount page:<br/>\n<img src=\"http://s8.postimg.org/wx424gmw5/sportsbetacct.png\"/>\n<br/><br/>\nPurchase coins:<br/>\n<img src=\"http://s11.postimg.org/7y3890rjn/sportsbetbuycoin.png\"/>\n"
    },
    {
        "repo": "/rollerderby/scoreboard",
        "language": "Java",
        "readme_contents": "The CRG ScoreBoard is a browser-based scoreboard solution that also provides overlays for video production and the ability to track full game data and export it to a WFTDA statsbook.\n\nThe topics on the [Scoreboard Wiki Main Page](https://github.com/rollerderby/scoreboard/wiki/) are the primary documentation for the scoreboard. In order to reach out to the developers, it's best to use the [Github Issues Page](https://github.com/rollerderby/scoreboard/issues).\n\nA mailing list and wiki were available on SourceForge (the original location for this project) but they are not currently used. Subscribing to the SourceForge mailing list and consulting the wiki there is not recommended.\n\n# Installing the Scoreboard Software\n\nThese are instructions for getting the software installed and running on a standalone computer to provide a functioning scoreboard. If you have already done this, see [Setting up the Scoreboard](#setting-up-the-scoreboard) below.\n\n## Hardware Requirements\n\nMost Apple or Windows computers that have been manufactured in the last ten years should be able to handle the scoreboard well on a standalone setup. In general, a machine with at least a dual-core 64-bit processor and 2 gigabytes of RAM should be sufficient. Using the scoreboard to provide video overlays or in a networked setup that includes penalty or lineup tracking typically requires more computing power.\n\nChromebooks that have been modified to run Linux distributions have been used to host the scoreboard but hardware limitations (lack of a suitable display output or low-powered CPUs) may cause issues.\n\n## Software Requirements\n\nThe scoreboard should be unzipped into a folder on the local machine. The user running the software requires write access to this folder. Do not put the scoreboard in a folder that requires administrator privileges to write to unless you intend to run the software as an administrator.\n\n### Web Browser\n\n[Google Chrome](https://www.google.com/chrome/) and [Microsoft Edge](https://www.microsoft.com/edge/) (as well as their open-source parent [Chromium](http://www.chromium.org/) or other browsers derived from it) are recommended for running the software. Some known issues may occur when using Mozilla Firefox or Apple Safari. Microsoft Internet Explorer is not recommended.\n\n### Java\n\nJava is required for providing a Java Runtime Environment (JRE) version 8.0 or newer. Installing the latest version of Oracle's Java is recommended.\n\n- Windows users can install the standard Java for Windows package that is available when clicking on Free Java Download from [Oracle\u2019s Java site](https://java.com/).\n\n- Apple users must install the complete [Java Platform (JDK)](http://www.oracle.com/technetwork/java/javase/downloads/index.html), which includes the JRE, to run the scoreboard properly.\n\n- Linux users may already have a JRE from the OpenJDK project installed, if not, OpenJDK can be obtained from [their repositories](http://openjdk.java.net/install/).\n\n## Downloading the Scoreboard\n\nThe project is currently hosted on GitHub, and ZIP files can be downloaded from the [GitHub Releases Page](https://github.com/rollerderby/scoreboard/releases). It is recommended that you use the version labeled \"Latest release\" (green box). The \"Pre-release\" (orange box) versions are currently in development and testing, and are not recommended for sanctioned games or tournaments.\n\nPlease note that an older version of the project is still hosted on SourceForge and it is no longer maintained there.\n\n## Setting up the Scoreboard\n\nOnce Chrome and Java are installed, use your file manager to navigate to the scoreboard folder and run the scoreboard background script by double-clicking on it.\n\n- Windows users: Run scoreboard-Windows.exe to start the script.\n\n- Apple users: Run scoreboard.sh to start the script. (If clicking doesn't work, try pressing command+i (or right click on the file and select \"Get info\"). In the new info dialog in section \"open with\" select Terminal.app. (If it's not listed, choose other and navigate to /Applications/Utilities/Terminal.app.)\n\n- Linux users: Run scoreboard.sh to start the script. If you are unable to start it, you may have to allow script files to be executable as programs.\n\nOnce it starts successfully, the scoreboard script will open a new window and display a series of status messages. You must keep this script running in order for the scoreboard to function, so do not close the window. You may minimize the window without effect.\n\nIn your file manager, open start.html with the recommended browser. You may need to right-click on the file and choose the **Open With** option. The browser will open to localhost:8000 where several options are presented.\n\nAssuming that your scoreboard computer is set up with a monitor/laptop screen as a primary display for the operator, and a separate projector as a second display, right-click on the second link for **Main Scoreboard** and choose **Open link in new window**. Drag the new window with the main scoreboard onto the second display, click inside the window, and press the F11 key to make the window full screen. In the first browser window that you opened on the primary display, click on one of the documentation links. It will open in a new tab. Back in the original tab click on **Main Operator Control Panel**.\n\nWhen the control panel displays, it will ask you for an operator name. Enter your name and click Login. This operator name is used to store your personalized settings such as key controls.\n\nNow you can go to the tab with the documentation and either go to the Quick Start Guide or dive in deep right away and proceed with the section on the Controls page.\n"
    },
    {
        "repo": "/Runbhumi/Runbhumi",
        "language": "C++",
        "readme_contents": "<p align=\"center\"><img align=\"center\" src=\"./assets/runbhumi logomark.png\" height=\"128\" /></p>\n<h1 align=\"center\">Welcome to Runbhumi \ud83d\udc4b</h1>\n<p align=\"center\">\n  <a href=\"../Runbhumi/documentation/auth.md\" target=\"_blank\">\n    <img alt=\"Documentation\" src=\"https://img.shields.io/badge/documentation-yes-brightgreen.svg\" />\n  </a>\n  <img alt=\"Documentation\" src=\"https://img.shields.io/badge/-Flutter-blue?&logo=flutter\" />\n  <img alt=\"Documentation\" src=\"https://img.shields.io/badge/-Firebase-blue?&logo=firebase\" />\n  <a href=\"https://github.com/Runbhumi/Runbhumi/blob/master/LICENSE\" target=\"_blank\">\n    <img alt=\"License: MIT\" src=\"https://img.shields.io/badge/License-AGPL-yellow.svg\" />\n  </a>\n  <img alt=\"GitHub last commit\" src=\"https://img.shields.io/github/last-commit/Runbhumi/Runbhumi\">\n    <img alt=\"GitHub Workflow Status\" src=\"https://img.shields.io/github/workflow/status/Runbhumi/Runbhumi/Flutter%20CI?logo=dart&logoColor=lightblue\">\n</p>\n\n> A Flutter app which aims to build a sports community\n\n### \ud83c\udfe0 [Homepage](https://runbhumi-website.vercel.app)\n\n<!-- ### \u2728 [Prototype](https://www.figma.com/proto/LB4Ovc0vF92Q0twfrBacfa/Runbhumi?node-id=2%3A42&viewport=-537%2C287%2C0.35181379318237305&scaling=scale-down) -->\n\n\n### \ud83d\udcaa Motivation/Inspiration\n\n<img src=\"./documentation/Problem_statement_by_tanmay_bhat.jpeg\" height=\"500\" />\n\n\n## \ud83d\udce5 Install\n\n```sh\nflutter pub get\n```\n\n## \ud83d\udc77\u200d\u2642\ufe0f Usage\n\n```sh\nflutter run\n```\n\n## \u2728 Format code\n\n```sh\nflutter format .\n```\n\n## \ud83e\uddea Test\n\n```sh\nflutter analyze .\nflutter test\n```\n  \n</details>\n\n## Author\n\n\ud83c\udfe2 **Runbhumi**\n\n- Github: [@Runbhumi](https://github.com/Runbhumi)\n\n\n## \ud83e\udd1d Contributing\n\nissues and feature requests are welcome!<br />Feel free to check [issues page](https://github.com/Runbhumi/Runbhumi/issues), the [contribution guidelines](CONTRIBUTING.md) and [Code of Conduct](CODE_OF_CONDUCT.md)\n\n## Show your support <img alt=\"GitHub stars\" src=\"https://img.shields.io/github/stars/Runbhumi/Runbhumi?style=social\">\n\nGive a \u2b50\ufe0f if this project helped/inspired you!\n\n## \ud83d\udcdd License\n\nCopyright \u00a9 2020 [Runbhumi](https://github.com/Runbhumi).<br />\nThis project is [MIT](https://github.com/Runbhumi/Runbhumi/blob/master/LICENSE) licensed.\n"
    },
    {
        "repo": "/personal-coding/Live-Sports-Arbitrage-Bet-Finder",
        "language": "Python",
        "readme_contents": "# Live Sports Arbitrage Bet Finder - FanDuel, DraftKings, William Hill\n\n## Summary\n\n![Live sports arbitrage bet finder in action](https://github.com/ScrapeWithYuri/Live-Sports-Arbitrage-Bet-Finder/blob/main/Program_in_action.gif)\n\n_**I've provided this code for informational purposes, and do not take responsibility for potential losses or gains. Bet at your own risk.**_\n\nThis program will find arbitrage betting opportunities during live sports events. The program will scrape live data off betting websites every 10 milliseconds, find if an arbitrage exists, calculate the exact wagering amounts needed, and place bets.\n\nThere are three Python programs in this repository.\n\n- The program names start with F & D or F & W. F stands for FanDuel, D stands for DraftKings, and W stands for William Hill.\n- Programs that end with \"Two Person\" are for two person or two team events that include only moneyline bets (such as tennis).\n- Programs that do not end with this phrase are for sports that include over / under bets, moneyline and spread bets (such as baseball).\n- The automated bot only looks for standard bet types.\n\nThe program will first scrape all live event names and odds based on the sport selected in the program. The live event names are matched against each sportsbook in order to compare live odds. Using a Nash equilibrium, the program will find if there are arbitrage betting opportunities. If an arbitrage is found, then the program will select that wager, enter the calculated wager amounts and place the bet.\n\nThe programs use multithreading to make them as fast as possible to find arbitrage opportunities. Also, the programs use the [undetected-chromedriver](https://pypi.org/project/undetected-chromedriver/) package to help avoid bot detection.\n\n**Please note** that most sportsbooks include a bet delay. After a bet is placed, the sportsbook will take several seconds to validate the bet. During this time, one sportsbook may accept your bet, while the other sportsbook may update its odds.\n\n## Troubleshooting Error\n\nIf you run into an error that states `AttributeError: 'ArbFinder' object has no attribute 'driver'` go to `chrome://settings/help` in your URL bar. There may be a relaunch option where your Chrome version is. Otherwise, try to upgrade your Chrome version. Your Chrome version may be different from the ChromeDriver version downloaded by the program.\n\n## Personalizing the programs\n\nUpdate this section of the code if you want to bet on a different sport:\n\n```\nself.sport = 'Baseball'\n```\n\nUpdate these sections of the code if you want to change your bet amount, lower & upper arbitrage return limit and max odd limit:\n\n```\nself.main_bet_amount = 100  # Total amount to wager. The program will split the two bets, so that the total wager is this amount\nself.lower_limit = 0.000  # Lower arbritage limit to bet on, as a percentage\nself.upper_limit = 0.070  # Upper arbritage limit to bet on, as a percentage (0.070 = 7%)\nself.bet_limit = 0.10  # Most websites require a minimum of $0.10 a wager on each bet\nself.odds_limit = 750  # The program will not wager above these odds (i.e. +750)\n```\n\nMost references state that wagers should be rounded to the dollar to help avoid arbitrage detection. Update the round function below to zero decimal places if you need:\n\n```\nself.result = [round(x, 2) for x in self.result]\n```\n\nSubmitting a wager has been commented out in the programs. You can submit a wager by uncommenting this section of code:\n\n```\nself.pool.apply_async(self.process, args=(9, 0, 0, 0,))\nself.pool.apply_async(self.process, args=(10, 0, 0, 0,))\n# Join the pools so they run in parallel\nself.pool.join()\n```\n\n## Additional information about the programs\n\nThe programs use the naming convention \"bid\" and \"ask.\" I built the programs from a framework that traded binary options and did not update the naming convention. \"Bid\" means DraftKings or William Hill, while \"ask\" means FanDuel.\n"
    },
    {
        "repo": "/cemunds/awesome-sports-camera-calibration",
        "language": null,
        "readme_contents": "# Awesome Sports Camera Calibration [![Awesome](https://awesome.re/badge.svg)](https://awesome.re)\n\nA collection of resources on Sports Camera Calibration\n\n## Contributing\n\nFeedback and contributions are welcome! To contribute, just create a [pull request](https://github.com/Fallscout/awesome-sports-camera-calibration/pulls).\n\n## Table of Contents\n* [Basics](#basics)\n* [Papers](#papers)\n\t* [Homography Estimation for Planar Scenarios](#homography-estimation-for-planar-scenarios)\n\t* [Dealing with Lens Distortion](#dealing-with-lens-distortion)\n\t* [Pan-Tilt-Zoom Camera Calibration](#pan-tilt-zoom-ptz-camera-calibration)\n\t* [Real-time Camera Pose Tracking](#real-time-camera-pose-tracking)\n\t* [Misc](#real-time-camera-pose-tracking)\n* [Datasets](#datasets)\n\n## Basics\n* [Multiple view geometry in computer vision](https://cseweb.ucsd.edu/classes/sp13/cse252B-a/HZ2eCh2.pdf) - Hartley, R., & Zisserman, A. (2004)\n\n## Papers\n\n### Homography Estimation for Planar Scenarios\n* [Robust incremental rectification of sports video sequences](https://iis.uibk.ac.at/public/papers/Hayet-2004-BMVC.pdf) - Hayet, J., Piater, J., & Verly, J. (2004)\n* [Combining line and point correspondences for homography estimation](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.186.4525&rep=rep1&type=pdf) - Dubrofsky, E., & Woodham, R. J. (2008)\n* [A new normalized method on line-based homography estimation](http://www.nlpr.ia.ac.cn/2008papers/gjkw/gk2.pdf) - Zeng, H., Deng, X., & Hu, Z. (2008)\n* [Using line and ellipse features for rectification of broadcast hockey video](https://www.cs.ubc.ca/labs/lci/thesis/ankgupta/gupta11crv.pdf) - Gupta, A., Little, J. J., & Woodham, R. J. (2011)\n* [A new accurate and fast homography computation algorithm for sports and traffic video analysis](https://ieeexplore.ieee.org/abstract/document/7990544) - Liu, S., Chen, J., Chang, C., & Ai, Y. (2017)\n\n### Dealing with Lens Distortion\n* [An algebraic approach to lens distortion by line rectification](http://ami.dis.ulpgc.es/biblio/bibliography/documentos/AlvarezSendraLensDistortionModel.pdf) - Alvarez, L., & Sendra, R. (2009)\n* [Algebraic lens distortion model estimation](https://www.ipol.im/pub/art/2011/ags-alde/article.pdf) - Alvarez, L., Gomez, L. & Sendra, R. (2010)\n* [Accurate depth dependent lens distortion models: An Application to Planar View Scenarios](https://www.researchgate.net/publication/220146002_Accurate_Depth_Dependent_Lens_Distortion_Models_An_Application_to_Planar_View_Scenarios) - Alvarez, L., G\u00f3mez, L., & Sendra, R. (2011)\n* [Radial distortion homography](https://www.cv-foundation.org/openaccess/content_cvpr_2015/papers/Kukelova_Radial_Distortion_Homography_2015_CVPR_paper.pdf) - Kukelova, Z., Heller, J., Bujnak, M., & Pajdla, T. (2015)\n\n### Pan-Tilt-Zoom (PTZ) Camera Calibration\n* [Active camera calibration using pan, tilt and roll](http://ami.dis.ulpgc.es/biblio/bibliography/documentos/PTZCalibrationBasuKavita.pdf) Basu, A., & Ravi, K. (1997)\n* [Autocalibration from planar scenes](https://hal.inria.fr/inria-00548325/document) - Triggs, B. (1998)\n* [Soccer video mosaicking using self-calibration and line tracking](https://ieeexplore.ieee.org/document/905407) - Kim, H., & Hong, K. S. (2000)\n* [Automatic camera calibration for image sequences of a football match](https://www.researchgate.net/profile/Flavio_Szenberg/publication/220781377_Automatic_Camera_Calibration_for_Image_Sequences_of_a_Football_Match/links/00b7d51a64210b6959000000.pdf) - Szenberg, F., Carvalho, P., & Gattass, M. (2001)\n* [Self-calibration of rotating and zooming cameras](https://www.researchgate.net/profile/Lourdes_Agapito/publication/225865990_Self-Calibration_of_Rotating_and_Zooming_Cameras/links/00b49528a1f46081ad000000.pdf) - Agapito, L. (2001)\n* [Acquiring multi-scale images by pan-tilt-zoom control and automatic multi-camera calibration](http://ami.dis.ulpgc.es/biblio/bibliography/documentos/Senior05acquiringmulti-scale.pdf) - Senior, A. W., Hampapur, A., & Lu, M. (2002)\n* [The effects of translational misalignment when self-calibration rotating and zooming cameras](https://www.robots.ox.ac.uk/~dwm/Publications/hayman_murray_tpami2003/hayman_murray_tpami2003.pdf) - Hayman, E., & Murray, D. W. (2003)\n* [Calibrating pan-tilt cameras in wide-area surveillance networks](https://graphics.stanford.edu/papers/PanTiltCalibration/PanTiltCalib_ICCV2003.pdf) - Davis, J., & Chen, X. (2003)\n* [Robust camera calibration for sport videos using court models](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.5.8990&rep=rep1&type=pdf) - Farin, D., Krabbe, S., Effelsberg, W., & de With, P. (2004)\n* [Fast camera calibration for the analysis of sport sequences](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.76.6647&rep=rep1&type=pdf) - Farin, D., Han, J., & de With, P. (2005)\n* [Automatic camera calibration for images of soccer match](https://waset.org/publications/14049/automatic-camera-calibration-for-images-of-soccer-match-) - Li, Q., & Luo, Y. (2005)\n* [An LMI approach for reliable PTZ camera self-calibration](http://ami.dis.ulpgc.es/biblio/bibliography/documentos/PTZCalibrationAnLMIApproachForReliablePTZCameraSelf-Calibration.pdf) - Li, H., & Shen, C. (2006)\n* [Online calibration of two zoom-pan-tilt units for planar dynamic events](https://egemenozden.files.wordpress.com/2016/08/dagm06.pdf) - N/A (2006)\n* [Pan-tilt-zoom camera calibration and high-resolution mosaic generation](https://snsinha.github.io/pdfs/SinhaCVIU2006.pdf) - Sinha, S. N., & Pollefeys, M. (2006)\n* [On-line rectification of sport sequences with moving cameras](https://pdfs.semanticscholar.org/dfde/125541628d98e65284ae1d98a85e7ab8f289.pdf) - Hayet, J., & Piater, J. (2007)\n* [Continual and robust estimation of camera parameters in broadcasted sports games](https://mediatum.ub.tum.de/doc/649729/649729.pdf) - Gedikli, S. (2009)\n* [Camera pose estimation in soccer scenes based on vanishing points](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.1005.8778&rep=rep1&type=pdf) - Babaee-Kashany, V., & Pourreza, H. R. (2010)\n* [Exploiting distinctive visual landmark maps in pan-tilt-zoom camera networks](https://www.sciencedirect.com/science/article/pii/S1077314210000305) - Del Bimbo, A., Dini, F., Lisanti, G., & Pernici, F. (2010)\n* [Automatic line mark recognition and its application in camera calibration in soccer video](https://ieeexplore.ieee.org/document/6012137) - Bu, J., Lao, S., & Bai, L. (2011)\n* [Robust multi-view camera calibration for wide-baseline camera networks](http://www-oldurls.inf.ethz.ch/personal/marc.pollefeys/pubs/PuweinWACV11.pdf) - Puwein, J., Ziegler, R., Vogel, J., & Pollefeys, M. (2011)\n* [PTZ camera network calibration from moving people in sports broadcasts](http://www-oldurls.inf.ethz.ch/personal/marc.pollefeys/pubs/PuweinWACV12.pdf) - Puwein, J., & Ziegler, R. (2012)\n* [Keeping a pan-tilt-zoom camera calibrated](https://www.researchgate.net/publication/240308786_Keeping_a_Pan-Tilt-Zoom_Camera_Calibrated) - Wu, Z., & Radke, R. (2013)\n* [Camera calibration in sport event scenarios](http://clok.uclan.ac.uk/18033/1/18033-Camera_calibration_in_sport_event_scenarios.pdf) - Aleman-Flores, M., Alvarez, L., Gomez, L., Henriquez Castellano, P., & Mazorra, L. (2014)\n* [Method for pan-tilt camera calibration using single control point](https://www.researchgate.net/publication/269935858_Method_for_pan-tilt_camera_calibration_using_single_control_point) - Li, Y., Zhang, J., Hu, W., & Tian, J. (2015)\n* [Court reconstruction for camera calibration in broadcast basketball videos](https://ieeexplore.ieee.org/document/7118240) - Wen, P., Cheng, W., Wang, Y., Chu, H., Tang, N. C., & Liao, H. M. (2016)\n* [Deep regression for monocular camera-based 6-DoF global localization in outdoor environments](http://ais.informatik.uni-freiburg.de/publications/papers/naseer17iros.pdf) - Nascer, T., & Burgard, W. (2017)\n* [Sports field localization via deep structured models](http://www.cs.toronto.edu/~namdar/pdfs/sports_cvpr_2017.pdf) - [[Code](https://nhoma.github.io/papers/sports_soccer_code.zip)] - Homayounfar, N., Fidler, S., & Urtasun, R. (2017)\n* [A two-point method for PTZ camera calibration in sports](https://arxiv.org/pdf/1801.09005.pdf) - Chen, J., Zhu, F., & Little, J. J. (2018)\n* [Calibrating cameras in poor-conditioned pitch-based sports games](http://150.162.46.34:8080/icassp2018/ICASSP18_USB/pdfs/0001902.pdf) - Zeng, R., Lakemond, R., Denman, S., Sridharan, S., Fookes, C., & Morgan, S. (2018)\n* [Sports Camera Calibration via Synthetic Data](http://openaccess.thecvf.com/content_CVPRW_2019/papers/CVSports/Chen_Sports_Camera_Calibration_via_Synthetic_Data_CVPRW_2019_paper.pdf) - [[Code Part1](https://github.com/lood339/SCCvSD)/[Code Part 2](https://github.com/lood339/pytorch-two-GAN)] - Chen, J., & Little, J. J. (2019)\n\n### Real-time Camera Pose Tracking\n* [A soccer field tracking method with wire frame model from TV images](https://ieeexplore.ieee.org/document/1421382) - Watanabe, T., Haseyama, M., & Kitajima, H. (2004)\n* [Real-time camera tracking using sports pitch markings](https://www.researchgate.net/publication/220243595_Real-time_camera_tracking_using_sports_pitch_markings) - Thomas, G. (2007)\n* [Realtime camera motion tracking in planar view scenarios](https://www.researchgate.net/publication/237842364_Real-Time_Camera_Motion_Tracking_in_Planar_View_Scenarios) - Alvarez, L., Gomez, L., Henriquez, P., & S\u00e1nchez, J. (2013)\n* [PoseNet: A convolutional network for real-time 6-DOF camera relocalization](https://www.cv-foundation.org/openaccess/content_iccv_2015/papers/Kendall_PoseNet_A_Convolutional_ICCV_2015_paper.pdf) - Kendall, A., Grimes, M., & Cipolla, R. (2015)\n* [Continuous localization and mapping of pan-tilt-zoom camera for wide area tracking](https://arxiv.org/pdf/1401.6606.pdf) - Lisanti, G., Masi, I., Pernici, F., & Del Bimbo, A. (2015)\n* [Pan-tilt-zoom SLAM for Sports Videos](https://bmvc2019.org/wp-content/uploads/papers/0329-paper.pdf) - [[Code](https://github.com/lulufa390/Pan-tilt-zoom-SLAM)] - Lu, J., Chen, J., & Little, J. J. (2019)\n* [Real-time camera pose estimation for sports fields](https://arxiv.org/pdf/2003.14109.pdf) - Citraro, L., Marquez-Neila, P., Savare, S., Jayaram, V., Dubout, C., Renault, F., hasfura, A., Ben Shitrit, H., & Fua, P. (2020)\n* [A robust and efficient framework for sports-field registration](https://www.amazon.science/publications/a-robust-and-efficient-framework-for-sports-field-registration) - Nie, X., Chen, S., & Hamid, R. (2021)\n\n### Misc\n* [Tracking players and a ball in video image sequence and estimating camera parameters for 3D interpretation of soccer games](http://www.aisl.cs.tut.ac.jp/~jun/pdffiles/yamada-icpr2002.pdf) - Yamada, A., Shirai, Y., & Miura, J. (2002)\n* [Tracking soccer ball in TV broadcast video](https://www.researchgate.net/publication/221356623_Tracking_Soccer_Ball_in_TV_Broadcast_Video) - Choi, K., & Seo, Y. (2005)\n* [A new method to calculate the camera focusing area and player position on play field in soccer video](https://www.researchgate.net/publication/228391113_A_new_method_to_calculate_the_camera_focusing_area_and_player_position_on_playfield_in_soccer_video) - Liu, Y., Huang, Q., Ye, Q., & Gao, W. (2005)\n* [Automatic production system of soccer sports video by digital camera work based on situation recognition](https://www.researchgate.net/publication/221558506_Automatic_Production_System_of_Soccer_Sports_Video_by_Digital_Camera_Work_Based_on_Situation_Recognition) - Ariki, Y., Kubota, S., & Kumano, M. (2006)\n* [Extracting 3D information from broadcast soccer video](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.89.870&rep=rep1&type=pdf) - Liu, Y., Liang, D., Huang, Q., & Gao, W. (2006)\n* [Fast arc detection algorithm for play field registration in soccer video mining](https://ieeexplore.ieee.org/document/4274696) - Wang, F., Sun, L., Yang, B., & Yang, S. (2006)\n* [Motion fields to predict play evolution in dynamic sport scenes](https://www.cc.gatech.edu/cpl/projects/playevolution/cvpr2010-pe.pdf) - Kim, K., Grundmann, M., Shamir, A., Matthews, I., Hodgins, J., & Essa, I. (2010)\n* [Automatic player labeling, tracking and field registration and trajectory mapping in broadcast soccer video](http://www.bmva.org/bmvc/2007/papers/paper-70.pdf) - Liu, J., Tong, X., Li, W., Wang, T., Zhang, Y., Wang, H., Yang, B., Sun, L., & Yang, S.(2011)\n* [An algorithm for highlights identification and summarization of broadcast soccer videos](https://link.springer.com/content/pdf/10.1007/978-3-642-33275-3_106.pdf) - Junior, W. A. G., & Borges, D. L. (2012)\n* [Automatic soccer video analysis and summarization](https://www.researchgate.net/publication/5613899_Automatic_Soccer_Video_Analysis_and_Summarization) - Ekin, A., Tekalp, A. M., & Mehrotra, R. (2003)\n* [Robust video registration applied to field-sports video analysis](https://ivul.kaust.edu.sa/Documents/Publications/2012/Robust%20Video%20Registration%20Applied%20to%20Field-Sports%20Video%20Analysis.pdf) - Ghanem, B., Zhang, T., & Ahuja, N. (2012)\n* [Automated top view registration of broadcast football videos](https://arxiv.org/pdf/1703.01437.pdf) - Sharma, R. A., Bhat, B., Gandhi, V., & Jawahar, C. V. (2017)\n* [Soccer on your tabletop](https://grail.cs.washington.edu/projects/soccer/soccer_on_your_tabletop.pdf) - Rematas, K., Kemelmacher-Shlizerman, I., Curless, B., & Seitz, S. (2018)\n* [Optimizing Through Learned Errors for Accurate Sports Field Registration](https://arxiv.org/pdf/1909.08034.pdf) [[Code](https://github.com/vcg-uvic/sportsfield_release)] - Jiang, W., Gamboa Higuera, J. C., Angles, B., Sun, W., Javan, M., & Moo Yi, K. (2020)\n* [SFLNet: Direct Sports Field Localization via CNN-Based Regression](https://link.springer.com/chapter/10.1007/978-3-030-41404-7_48) - Tarashima, S. (2020)\n\n## Datasets\n* [World Cup 2014 Dataset](http://www.cs.toronto.edu/~namdar/data/soccer_data.tar.gz) - Homayounfar, N., Fidler, S., & Urtasun, R. (2017)\n* [Highlights Dataset](https://www.cs.ubc.ca/~jhchen14/ccnn_player_detection/) - Lu, K., Chen, J., Little, J. J., & He, H. (2017)\n"
    },
    {
        "repo": "/havenxie/weapp-sportsnews",
        "language": "JavaScript",
        "readme_contents": "# \u5fae\u4fe1\u5c0f\u7a0b\u5e8f Sports News(\u4f53\u80b2\u65b0\u95fb) \u6301\u7eed\u66f4\u65b0\n\n\n## \u5c0f\u7a0b\u5e8f\u9884\u89c8\n\n<p align=\"center\">\n  <img src=\"./images/GIF5.gif\" alt=\"\u4f53\u80b2\u65b0\u95fb\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u6f14\u793a\" >\n</p>\n\n## \u4f7f\u7528\u6b65\u9aa4\n\n1. \u5c06\u4ed3\u5e93\u514b\u9686\u5230\u672c\u5730\uff1a\n\n    ```bash\n    $ git clone https://github.com/havenxie/weapp-sportsnews.git weapp-sportsnews --depth 1\n\n    $ cd weapp-sportsnews\n    ```\n\n2. \u6253\u5f00`\u5fae\u4fe1Web\u5f00\u53d1\u8005\u5de5\u5177`\n\n  - \u6211\u7528\u7684\u662f0.11.122100\u7248\u672c\n  - \u4e0d\u9700\u8981\u6240\u8c13\u7684\u7834\u89e3\uff0c\u7f51\u4e0a\u6240\u8c13\u7684\u7834\u89e3\u53ea\u662f\u9488\u5bf9\u4e4b\u524d\u7684`0.9.092100`\u7248\u672c\uff0c\u65b0\u7684\u5b98\u65b9\u7248\u672c\u4e0d\u9700\u8981\u7834\u89e3\uff01\n  - \u4e0b\u8f7d\u94fe\u63a5\uff1a`\"https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/download.html\"`\n\n3. \u9009\u62e9`\u6dfb\u52a0\u9879\u76ee`\uff0c\u586b\u5199\u6216\u9009\u62e9\u76f8\u5e94\u4fe1\u606f\n\n  - AppID\uff1a\u70b9\u51fb\u53f3\u4e0b\u89d2`\u65e0AppID`\uff08\u6211\u4e5f\u6ca1\u6709\u8d44\u683c\u62ff\u5230\uff09\n  - \u9879\u76ee\u540d\u79f0\uff1a\u968f\u4fbf\u586b\u5199\uff0c\u56e0\u4e3a\u4e0d\u6d89\u53ca\u5230\u90e8\u7f72\uff0c\u6240\u4ee5\u65e0\u6240\u8c13\n  - \u9879\u76ee\u76ee\u5f55\uff1a\u9009\u62e9\u521a\u521a\u514b\u9686\u7684\u6587\u4ef6\u5939\n  - \u70b9\u51fb`\u6dfb\u52a0\u9879\u76ee`\n\n4. \u4f60\u53ef\u4ee5\u9009\u62e9\u5728`\u5fae\u4fe1Web\u5f00\u53d1\u8005\u5de5\u5177`\u4e2d\u7f16\u7801\uff08\u4e5f\u53ef\u9009\u62e9\u4f60\u559c\u6b22\u7684\u7f16\u8f91\u5668\uff0c\u6211\u7528\u7684\u662fsublime,\u73b0\u5728\u53d1\u73b0vs code\u6bd4sublime\u597d\u7528\u591a\u4e86\uff09\n\n6. \u901a\u8fc7\u5de6\u4e0b\u89d2\u91cd\u542f\u6309\u94ae\uff0c\u5237\u65b0\u7f16\u7801\u8fc7\u540e\u7684\u9884\u89c8\n\n7. \u4ee3\u7801\u4e2d\u7528\u5230\u4e86\u5927\u91cfES6\u7684\u8bed\u6cd5\uff0c\u53ef\u80fd\u9700\u8981node\u73af\u5883\uff0c\u8bf7\u81ea\u884c\u5b89\u88c5\n\n8. \u5269\u4e0b\u7684\u53ef\u4ee5\u81ea\u7531\u53d1\u6325\u4e86\n\n9. \u8bbe\u7f6e\u9875\u6ca1\u6709\u505a\uff0c\u56e0\u4e3a\u4e0d\u77e5\u9053\u8981\u505a\u4e9b\u4ec0\u4e48\uff0c\u5047\u5982\u4f60\u6709\u5174\u8da3\u7684\u8bdd\u53ef\u4ee5\u81ea\u5df1\u53d1\u6325\n\n10. \u4e0b\u8f7d\u540e\u5c06images\u4e2d\u7684GIF5.jpg\u5220\u9664\u3002\n\n\n### \u6709\u4ec0\u4e48\u4e0d\u660e\u767d\u6216\u8005\u60f3\u627e\u6211\u4ea4\u6d41\u7684\u670b\u53cb\u53ef\u4ee5\u548c\u6211\u8054\u7cfb\n\n| \u4e2a\u4eba\u5fae\u4fe1 | \u4e2a\u4eba\u516c\u4f17\u53f7 |\n|:----:|:----:|\n| ![\u6211\u7684\u5fae\u4fe1](images/wechat.jpg) |  ![\u6211\u7684\u5fae\u4fe1](images/dingyue.jpg) |\n\n### \u81f3\u6b64\u544a\u4e00\u6bb5\u843d\uff0c\u5565\u65f6\u5019\u518d\u6709\u5174\u8da3\u518d\u6765\u7ee7\u7eed\u6dfb\u52a0\u529f\u80fd\u5427\u3002\n\n### \u6709\u5174\u8da3\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u4e00\u8d77\u6765\u63d0\u4ea4\u4ee3\u7801\u3002\u3002\u3002\n\n## \u8bb8\u53ef\n\n[MIT](./LICENSE) &copy; [havenxie](http://github.com/havenxie)"
    },
    {
        "repo": "/llSourcell/sports_betting_with_reinforcement_learning",
        "language": "Python",
        "readme_contents": "# Sports Betting with RL\n\n\n## Overview\n\nThis is the code for [this](https://youtu.be/mEIePvxdbkQ) video on Youtube by Siraj Raval on Sports Betting using Reinforcement Learning. This is apart of the Move 37 course at the [School of AI](http://www.theschool.ai).\n\n## Dependencies\n\nNone.\n\n## Usage\n\nType python value_iteration.py into terminal and it will run.\n\n## History\n\nThis is an adapted version of the \"Gambler's Problem\" that I've applied to sports betting. Details below\n\n-The Gambler Problem as discussed in Example 4.3 in Reinforcement Learning: An Introduction by Richard S. Sutton and Andrew G. Barto.\n-The problem from the book is described below:\n\n**Gambler\u2019s Problem**: A gambler has the opportunity to make bets\non the outcomes of a sequence of coin flips. If the coin comes up heads, he wins as\nmany dollars as he has staked on that flip; if it is tails, he loses his stake. The game\nends when the gambler wins by reaching his goal of $100, or loses by running out of\nmoney. On each flip, the gambler must decide what portion of his capital to stake,\nin integer numbers of dollars. This problem can be formulated as an undiscounted,\nepisodic, finite MDP. The state is the gambler\u2019s capital, s \u2208 {1, 2, . . . , 99} and the\nactions are stakes, a \u2208 {0, 1, . . . , min(s, 100\u2212s)}. The reward is zero on all transitions\nexcept those on which the gambler reaches his goal, when it is +1. The state-value\nfunction then gives the probability of winning from each state. A policy is a mapping\nfrom levels of capital to stakes. The optimal policy maximizes the probability of\nreaching the goal. Let ph denote the probability of the coin coming up heads. If ph\nis known, then the entire problem is known and it can be solved, for instance, by\nvalue iteration\n"
    },
    {
        "repo": "/jfainberg/self_dialogue_corpus",
        "language": "Python",
        "readme_contents": "# The Self-dialogue Corpus\nThis is an early release of the Self-dialogue Corpus containing 24,165 conversations, or 3,653,313 words, across 23 topics. For more information on the data, please see [our corpus paper](https://arxiv.org/pdf/1809.06641.pdf) or [our submission to the Alexa Prize](http://alexaprize.s3.amazonaws.com/2017/technical-article/edina.pdf).\n\n### Statistics\n\n\n| Category | Count     |\n---------- | -----------\n| Topics   | 23        |\n| Conversations | 24,165 |\n| Words    | 3,653,313 |\n| Turns    | 141,945   |\n| Unique users | 2,717 |\n| Conversations per user | ~9 |\n| Unique tokens | 117,068 |\n\nTopics include movies, music, sports, and subtopics within these.\n\n### Using the data\n* `corpus` contains the raw CSVs from Amazon Mechanical Turk, sorted by individual tasks (topics);\n* `blocked_workers.txt` lists workers who did not comply with the requirements of the tasks, these are omitted by default;\n* `get_data.py` is a preprocessing script which will format the CSVs into text (by default saved to `dialogues`), along with various options (see below).\n\n#### `get_data.py`\nExample usage: `python get_data.py`. This will by default read from `corpus` and write to `dialogues`. \n\nOptional arguments:\n* `--inDir` Directory to read corpus from\n* `--outDir` Directory to write processed files \n* `--output-naming` whether to name output files with integers (`integer`) or by assignment_id (`assignment_id`);\n* `--remove-punctuation` removes punctuation from the output;\n* `--set-case` sets case of output to `original`, `upper` or `lower`;\n* `--exclude-topic` excludes any of the topics (or subdirectories of `corpus`), e.g. `--exclude-topic music`;\n* `--include-only` includes only the given topics, e.g. `--include-only music`.\n\n### Citation\nFor research using this data, please cite:\n```\n@article{fainberg2018talking,\n  title={Talking to myself: self-dialogues as data for conversational agents},\n  author={Fainberg, Joachim and Krause, Ben and Dobre, Mihai and Damonte, Marco and Kahembwe, Emmanuel and Duma, Daniel and Webber, Bonnie and Fancellu, Federico},\n  journal={arXiv preprint arXiv:1809.06641},\n  year={2018}\n}\n@article{krause2017edina,\n  title={Edina: Building an Open Domain Socialbot with Self-dialogues},\n  author={Krause, Ben and Damonte, Marco and Dobre, Mihai and Duma, Daniel and Fainberg, Joachim and Fancellu, Federico and Kahembwe, Emmanuel and Cheng, Jianpeng and Webber, Bonnie},\n  journal={Alexa Prize Proceedings},\n  year={2017}\n}\n```\n"
    },
    {
        "repo": "/bitfireAT/icsx5",
        "language": "Kotlin",
        "readme_contents": "\n\n[![Tests](https://github.com/bitfireAT/icsx5/actions/workflows/test-dev.yml/badge.svg)](https://github.com/bitfireAT/icsx5/actions/workflows/test-dev.yml)\n[![License](https://img.shields.io/github/license/bitfireAT/icsx5)](https://github.com/bitfireAT/icsx5/blob/main/LICENSE)\n[![F-Droid](https://img.shields.io/f-droid/v/at.bitfire.icsdroid)](https://f-droid.org/packages/at.bitfire.icsdroid/)\n\n\nICSx\u2075\n========\n\nICSx\u2075 is an Android app to subscribe to remote Webcal feeds / iCalendar files (like\ntime tables of your school/university or event files of your sports team).\n\nPlease see the [ICSx\u2075 Web site](https://icsx5.bitfire.at) for comprehensive information about ICSx\u2075.\n\nNews and updates: [@davx5app@fosstodon.org](https://fosstodon.org/@davx5app)\n\nHelp, discussion, ideas, bug reports: [ICSx\u2075 forum](https://icsx5.bitfire.at/forums/)\n\n\n\nContributions\n=======\n\nWe're happy about contributions! Just send a pull request for small changes or in case\nof bigger changes, please let us know in the forum before.\n\n## Translations\nICSx\u2075 is available [on Transifex](https://www.transifex.com/bitfireAT/icsx5/). There you can propose\nchanges to the translations, or create new ones. Feel free to suggest new languages, people will\nlove it.\n\n\n\nLicense \n=======\n\nICSx\u2075 is licensed under the [GPLv3 License](LICENSE).\n\nCopyright \u00a9 Ricki Hirner ([bitfire web engineering GmbH](https://www.bitfire.at)) and [contributors](https://github.com/bitfireAT/icsx5/graphs/contributors).\n\nThis program comes with ABSOLUTELY NO WARRANTY. This is free software, and you are welcome\nto redistribute it under the conditions of the [GNU GPL v3](https://www.gnu.org/licenses/gpl-3.0.html).\n\n"
    },
    {
        "repo": "/tarkah/lazystream",
        "language": "Rust",
        "readme_contents": "# LazyStream\n![Test](https://github.com/tarkah/lazystream/workflows/Test/badge.svg)\n\n\n  - [Download](#download)\n  - [Overview](#overview)\n  - [Shell Completions](#shell-completions)\n  - [xTeVe Setup for Plex / Emby](#xteve-setup-for-plex--emby)\n\n## Download\nThe latest release for each platform can be downloaded from the following link.\nJust extract the archive and run from the `lazystream` executable.\n\n[https://github.com/tarkah/lazystream/releases/latest](https://github.com/tarkah/lazystream/releases/latest)\n\n## Overview\nEasily get LazyMan stream links, output directly or to m3u / xmltv formats. Streams can also be recorded or casted.\n\n- Supports both NHL and MLB games. Use `--sport` option to specify `mlb` or `nhl` [default: nhl]\n\n- Defaults to grabbing the current days games. `--date YYYYMMDD` can be specified for a certain day. \n\n- xmltv and m3u playlist formats can be generated for all games using the `generate` subcommand\n\n- Games can be recorded using the `record` subcommand. This requires StreamLink is installed and in your path. If a game is live, you can use the `--restart` flag to start recording from the beginning of the stream. Quality `--quality` can be specified to use a specific quality setting.\n\n- Games can be casted to a chromecast using the `cast` subcommand. In addition to Streamlink, VLC is required to cast the stream.\n\n- Play games directly to VLC with the `play` subcommand. Requires both Streamlink and VLC.\n\n```\n\u276f lazystream --help\n\nlazystream\ntarkah <admin@tarkah.dev>\nEasily get LazyMan stream links, output directly or to m3u / xmltv formats. Streams can also be recorded or casted.\n\nUSAGE:\n    lazystream [FLAGS] [OPTIONS] <SUBCOMMAND>\n\nFLAGS:\n        --disable-retry    Disables unavailable stream retry for `play`, `record`, and `cast` commands. Program will\n                           exit instead\n    -h, --help             Prints help information\n    -V, --version          Prints version information\n\nOPTIONS:\n        --sport <sport>        Specify which sport to get streams for [default: nhl]  [possible values: mlb, nhl]\n        --date <YYYYMMDD>      Specify what date to use for games, defaults to today\n        --cdn <cdn>            Specify which CDN to use [default: akc]  [possible values: akc, l3c]\n        --quality <quality>    Specify a quality to use, otherwise stream will be adaptive [possible values: 720p60,\n                               720p, 540p, 504p, 360p, 288p, 224p, 216p]\n\nSUBCOMMANDS:\n    select         Select stream link via command line\n    generate       Generate an xmltv and/or playlist formatted output for all games\n    play           Play a game with VLC, requires StreamLink and VLC\n    record         Record a game, requires StreamLink\n    cast           Cast a game, requires StreamLink and VLC\n    completions    Output shell completions to a target directory\n    help           Prints this message or the help of the given subcommand(s)\n\n\u276f lazystream select --sport nhl\n\n |        \\   __  /\\ \\   / ___|__ __|  _ \\  ____|    \\     \\  | \n |       _ \\     /  \\   /\\___ \\   |   |   | __|     _ \\   |\\/ | \n |      ___ \\   /      |       |  |   __ <  |      ___ \\  |   | \n_____|_/    _\\____|   _| _____/  _|  _| \\_\\_____|_/    _\\_|  _| \n\n\nPick a game for 2019-12-09...\n\n1) 4:00 PM - Chicago Blackhawks @ Boston Bruins\n2) 4:00 PM - Colorado Avalanche @ Montr\u00c3\u00a9al Canadiens\n3) 4:00 PM - Minnesota Wild @ Tampa Bay Lightning\n4) 4:00 PM - Vegas Golden Knights @ New York Islanders\n5) 4:00 PM - Arizona Coyotes @ Philadelphia Flyers\n6) 4:00 PM - San Jose Sharks @ Carolina Hurricanes\n7) 4:00 PM - New York Rangers @ Columbus Blue Jackets\n8) 5:30 PM - Winnipeg Jets @ Dallas Stars\n9) 6:00 PM - Buffalo Sabres @ Calgary Flames\n\n>>> 4\n\nPick a stream...\n\n1) HOME\n2) AWAY\n3) COMPOSITE\n\n>>> 2\n\nhttp://nhl.freegamez.ga/getM3U8.php?league=nhl&date=2019-12-05&id=70395003&cdn=akc\n```\n\n## Shell Completions\n\nShell completions can be generated for Bash, Fish and Zsh. Target shell and target directory must be supplied.\n\n```\nlazystream completions bash ~/.local/share/bash-completion/completions/\n```\n\n## xTeVe Setup for Plex / Emby\n\nA docker container has been created by [@taylorbourne](https://github.com/taylorbourne) / [xteve_lazystream](https://github.com/taylorbourne/xteve_lazystream) that automatically sets up xTeVe with this program to generate daily updated xmltv playlists that can be setup with Emby / Plex Live TV.\n"
    },
    {
        "repo": "/ChenFengYe/SportsCap",
        "language": "Python",
        "readme_contents": "# SportsCap: Monocular 3D Human Motion Capture and Fine-grained Understanding in Challenging Sports Videos\n### [ProjectPage](https://chenxin.tech/SportsCap.html) | [Paper](https://arxiv.org/abs/2104.11452) | [Video](https://www.youtube.com/watch?v=TrqAaaX97KY) |  Dataset ([Part01](https://drive.google.com/file/d/1hUlGglrlWdjZNFFQh2ck3UaMDL8sDwQv/view?usp=sharing)|[Part02](https://drive.google.com/file/d/1NswiD-wpuAyHbSgdUCZ2s9QmVIFPcLjA/view?usp=sharing))\n[Xin Chen](https://chenxin.tech/), Anqi Pang, [Wei Yang](https://scholar.google.com/citations?user=fRjxdPgAAAAJ&hl=en), [Yuexin Ma](http://yuexinma.me/aboutme.html), [Lan Xu](http://xu-lan.com/), [Jingyi Yu](http://www.yu-jingyi.com/).</br>\n\n\nThis repository contains the official implementation for the paper: [SportsCap: Monocular 3D Human Motion Capture and Fine-grained Understanding in Challenging Sports Videos (IJCV 2021)](https://arxiv.org/abs/2104.11452). Our work is capable of simultaneously capturing 3D human motions and understanding fine-grained actions from monocular challenging sports video input.<br>\n<p float=\"left\">\n  <img src=\"./README/teaser.png\" width=\"800\" />\n</p>\n\n## Abstract\nMarkerless motion capture and understanding of professional non-daily human movements is an important yet unsolved task, which suffers from complex motion patterns and severe self-occlusion, especially for the monocular setting. In this paper, we propose SportsCap -- the first approach for simultaneously capturing 3D human motions and understanding fine-grained actions from monocular challenging sports video input. Our approach utilizes the semantic and temporally structured sub-motion prior in the embedding space for motion capture and understanding in a data-driven multi-task manner. Comprehensive experiments on both public and our proposed datasets show that with a challenging monocular sports video input, our novel approach not only significantly improves the accuracy of 3D human motion capture, but also recovers accurate fine-grained semantic action attributes.\n\n[comment]: <To enable robust capture under complex motion patterns, we propose an effective motion embedding module to recover both the implicit motion embedding and explicit 3D motion details via a corresponding mapping function as well as a sub-motion classifier. Based on such hybrid motion information, we introduce a multi-stream spatial-temporal Graph Convolutional Network(ST-GCN) to predict the fine-grained semantic action attributes, and adopt a semantic attribute mapping block to assemble various correlated action attributes into a high-level action label for the overall detailed understanding of the whole sequence, so as to enable various applications like action assessment or motion scoring.> \n\n## Licenses\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /></a><br />This work is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.\n\nAll material is made available under [Creative Commons BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode) license. You can **use, redistribute, and adapt** the material for **non-commercial purposes**, as long as you give appropriate credit by **citing our paper** and **indicating any changes** that you've made.\n\n## The SMART Dataset\nSportsCap proposes a challenging sports dataset called Sports Motion and Recognition Tasks (SMART) dataset, which contains per-frame action labels, manually annotated pose, and action assessment of various challenging sports video clips from professional referees.\n\n<p float=\"left\">\n  <img src=\"./README/dataset.gif\" width=\"800\" />\n</p>\n\n### Download\nYou can download the SMART dataset (17 GB, version 1.0) from the Google Drive [[SMART_part01](https://drive.google.com/file/d/1hUlGglrlWdjZNFFQh2ck3UaMDL8sDwQv/view?usp=sharing) | [SMART_part02](https://drive.google.com/file/d/1NswiD-wpuAyHbSgdUCZ2s9QmVIFPcLjA/view?usp=sharing)]. The SMART dataset includes source images (>60,000), annotations(>45,000, both pose and action), sport motion embedding spaces, videos (coming soon) and tools.\n\n### Annotation\nPlease load these JSON files in python to parse these annotations about 2D key-points of poses and fine-grained action labels.\n```\nTable_VideoInfo_diving.json\nTable_VideoInfo_gym.json\nTable_VideoInfo_polevalut_highjump_badminton.json\n```\n### Tools\nThe tools folder includes several functions to load the annotation and calculate the pose variables. More useful scripts are coming soon.\n```\nutils.py - json_load, crop_img_skes, cal_body_bbox ...\n```\n## Sports Motion Embedding Spaces\nWith the annotated 2D poses and MoCap 3D pose data, we collect the Sports Motion Embedding Spaces (SMES), the 2D/3D pose priors for various sports. SMES provides strong prior and regularization to ensure that the generated pose result lies in the corresponding action space.\n<p float=\"left\">\n  <img src=\"./README/MES.png\" width=\"800\" />\n</p>\n\n### Download\nYou can download the Motion Embedding Spaces (SMES) (7 MB, version 1.0) separately from [GoogleDrive](https://drive.google.com/file/d/1gWyBxMUrImkWoz8YWIm_XrCsGpxovK0Q/view?usp=sharing). The released SMES-V1.0 includes many sports, like vault, uneven bar, boxing, diving, hurdles, pole vault, high jump, and so on.\n\n### Usage\nComing soon.\n\n## Citation\nIf you find our code or paper useful, please consider citing:\n```\n@article{chen2021sportscap,\n  title={SportsCap: Monocular 3D Human Motion Capture and Fine-Grained Understanding in Challenging Sports Videos},\n  author={Xin Chen and Anqi Pang and Wei Yang and Yuexin Ma and Lan Xu and Jingyi Yu},\n  journal={International Journal of Computer Vision},\n  year={2021},\n  month={Aug},\n  url={https://doi.org/10.1007/s11263-021-01486-4}\n}\n```\n\n## Relevant Works\n[**ChallenCap: Monocular 3D Capture of Challenging Human Performances using Multi-Modal References (CVPR Oral 2021)**](https://arxiv.org/abs/2103.06747)<br>\nYannan He, Anqi Pang, Xin Chen, Han Liang, Minye Wu, Yuexin Ma, Lan Xu\n\n[**TightCap: 3D Human Shape Capture with Clothing Tightness Field (TOG 2021)**](https://chenxin.tech/TightCap.html)<br>\nXin Chen, Anqi Pang, Wei Yang, Peihao Wang, Lan Xu, Jingyi Yu\n\n[**AutoSweep: Recovering 3D Editable Objects from a Single Photograph (TVCG 2018)**](https://chenxin.tech/AutoSweep.html)<br>\nXin Chen, Yuwei Li, Xi Luo, Tianjia Shao, Jingyi Yu, Kun Zhou, Youyi Zheng\n\n[**End-to-end Recovery of Human Shape and Pose (CVPR 2018)**](https://github.com/akanazawa/hmr)<br>\nAngjoo Kanazawa, Michael J. Black, David W. Jacobs, Jitendra Malik\n"
    },
    {
        "repo": "/perfanalytics/pose2sim",
        "language": "Python",
        "readme_contents": "[![Continuous integration](https://github.com/perfanalytics/pose2sim/actions/workflows/continuous-integration.yml/badge.svg?branch=main)](https://github.com/perfanalytics/pose2sim/actions/workflows/continuous-integration.yml)\n[![PyPI version](https://badge.fury.io/py/Pose2Sim.svg)](https://badge.fury.io/py/Pose2Sim) \\\n[![Downloads](https://static.pepy.tech/badge/pose2sim)](https://pepy.tech/project/pose2sim)\n[![Stars](https://badgen.net/github/stars/perfanalytics/pose2sim)](https://github.com/perfanalytics/pose2sim/stargazers)\n[![GitHub forks](https://badgen.net/github/forks/perfanalytics/pose2sim)](https://GitHub.com/perfanalytics/pose2sim/forks)\n[![GitHub issues](https://img.shields.io/github/issues/perfanalytics/pose2sim)](https://github.com/perfanalytics/pose2sim/issues)\n[![GitHub issues-closed](https://img.shields.io/github/issues-closed/perfanalytics/pose2sim)](https://GitHub.com/perfanalytics/pose2sim/issues?q=is%3Aissue+is%3Aclosed)\n\\\n[![status](https://joss.theoj.org/papers/a31cb207a180f7ac9838d049e3a0de26/status.svg)](https://joss.theoj.org/papers/a31cb207a180f7ac9838d049e3a0de26)\n[![DOI](https://zenodo.org/badge/501642916.svg)](https://zenodo.org/badge/latestdoi/501642916)\n[![License](https://img.shields.io/badge/License-BSD_3--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)\n\n\n# Pose2Sim\n\n> **_News_: Version 0.4 released:** \\\n**Calibration used to be the main stumbling block for users: it should be easier and better now!**\\\nTo upgrade, type `pip install pose2sim --upgrade`. You will need to update your [User\\Config.toml](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Empty_project/User/Config.toml) file.\\\n*N.B.:* As always, I am more than happy to welcome contributors (see [How to contribute](#how-to-contribute)).\n\n`Pose2Sim` provides a workflow for 3D markerless kinematics, as an alternative to the more usual marker-based motion capture methods. It aims to provide a free tool to obtain research-grade results from consumer-grade equipment. Any combination of phone, webcam, gopro, etc can be used.\n\nPose2Sim stands for \"OpenPose to OpenSim\", as it uses OpenPose inputs (2D keypoints coordinates obtained from multiple videos) and leads to an OpenSim result (full-body 3D joint angles). Other 2D pose estimators can alternatively be used as inputs.\n\nIf you can only use one single camera and don't mind losing some accuracy, please consider using [Sports2D](https://github.com/davidpagnon/Sports2D).\n\n\n<img src=\"Content/Pose2Sim_workflow.jpg\" width=\"760\">\n\n<img src='Content/Activities_verylow.gif' title='Other more or less challenging tasks and conditions.' width=\"760\">\n\n# Contents\n1. [Installation and Demonstration](#installation-and-demonstration)\n   1. [Installation](#installation)\n   2. [Demonstration Part-1: Build 3D TRC file on Python](#demonstration-part-1-build-3d-trc-file-on-python)\n   3. [Demonstration Part-2: Obtain 3D joint angles with OpenSim](#demonstration-part-2-obtain-3d-joint-angles-with-opensim)\n2. [Use on your own data](#use-on-your-own-data)\n   1. [Prepare for running on your own data](#prepare-for-running-on-your-own-data)\n   2. [2D pose estimation](#2d-pose-estimation)\n      1. [With OpenPose](#with-openpose)\n      2. [With Mediapipe](#with-mediapipe)\n      3. [With DeepLabCut](#with-deeplabcut)\n      4. [With AlphaPose](#with-alphapose)\n   3. [Camera calibration](#camera-calibration)\n      1. [Convert from Qualisys, Optitrack, Vicon, OpenCap, EasyMocap, or bioCV](#convert-from-qualisys-optitrack-vicon-opencap-easymocap-or-biocv)\n      2. [Calculate from scratch](#calculate-from-scratch)\n   4. [Camera synchronization](#camera-synchronization)\n   5. [Tracking, Triangulating, Filtering](#tracking-triangulating-filtering)\n      1. [Associate persons across cameras](#associate-persons-across-cameras)\n      2. [Triangulating keypoints](#triangulating-keypoints)\n      3. [Filtering 3D coordinates](#filtering-3d-coordinates)\n   6. [OpenSim kinematics](#opensim-kinematics)\n      1. [OpenSim Scaling](#opensim-scaling)\n      2. [OpenSim Inverse kinematics](#opensim-inverse-kinematics)\n      3. [Command Line](#command-line)\n   7. [Batch processing](#batch-processing)\n3. [Utilities](#utilities)\n4. [How to cite and how to contribute](#how-to-cite-and-how-to-contribute)\n   1. [How to cite](#how-to-cite)\n   2. [How to contribute and to-do list](#how-to-contribute-and-to-do-list)\n\n# Installation and Demonstration\n\n## Installation\n1. **Install OpenPose** (instructions [there](https://github.com/CMU-Perceptual-Computing-Lab/openpose/blob/master/doc/installation/0_index.md)). \\\n*Windows portable demo is enough.*\n2. **Install OpenSim 4.x** ([there](https://simtk.org/frs/index.php?group_id=91)). \\\n*Tested up to v4.4-beta on Windows. Has to be compiled from source on Linux (see [there](https://simtk-confluence.stanford.edu:8443/display/OpenSim/Linux+Support)).*\n3. ***Optional.*** *Install Anaconda or [Miniconda](https://docs.conda.io/en/latest/miniconda.html). \\\n   Open an Anaconda terminal and create a virtual environment with typing:*\n   <pre><i>conda create -n Pose2Sim python=3.8 -y \n   conda activate Pose2Sim</i></pre>\n   \n3. **Install Pose2Sim**:\\\nIf you don't use Anaconda, type `python -V` in terminal to make sure python>=3.8 is installed.\n   - OPTION 1: **Quick install:** Open a terminal. \n       ``` cmd\n       pip install pose2sim\n       ```\n     \n   - OPTION 2: **Build from source and test the last changes:**\n     Open a terminal in the directory of your choice and Clone the Pose2Sim repository.\n       ``` cmd\n       git clone --depth 1 https://github.com/perfanalytics/pose2sim.git\n       cd pose2sim\n       pip install .\n       ```\n          \n## Demonstration Part-1: Build 3D TRC file on Python  \n> _**This demonstration provides an example experiment of a person balancing on a beam, filmed with 4 calibrated cameras processed with OpenPose.**_ \n\nOpen a terminal, enter `pip show pose2sim`, report package location. \\\nCopy this path and go to the Demo folder with `cd <path>\\pose2sim\\Demo`. \\\nType `ipython`, and test the following code:\n``` python\nfrom Pose2Sim import Pose2Sim\nPose2Sim.calibration()\nPose2Sim.personAssociation()\nPose2Sim.triangulation()\nPose2Sim.filtering()\n```\nYou should obtain a plot of all the 3D coordinates trajectories. You can check the logs in`Demo\\Users\\logs.txt`.\\\nResults are stored as .trc files in the `Demo/pose-3d` directory.\n\n*N.B.:* Default parameters have been provided in [Demo\\User\\Config.toml](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Demo/User/Config.toml) but can be edited.\\\n*N.B.:* *Try calibration tool by changing `calibration_type` to `calculate` instead of `convert` (more info [there](#calculate-from-scratch)).*\n<br/>\n\n## Demonstration Part-2: Obtain 3D joint angles with OpenSim  \n> _**In the same vein as you would do with marker-based kinematics, start with scaling your model, and then perform inverse kinematics.**_ \n\n### Scaling\n1. Open OpenSim.\n2. Open the provided `Model_Pose2Sim_Body25b.osim` model from `pose2sim/Demo/opensim`. *(File -> Open Model)*\n3. Load the provided `Scaling_Setup_Pose2Sim_Body25b.xml` scaling file from `pose2sim/Demo/opensim`. *(Tools -> Scale model -> Load)*\n4. Run. You should see your skeletal model take the static pose.\n\n### Inverse kinematics\n1. Load the provided `IK_Setup_Pose2Sim_Body25b.xml` scaling file from `pose2sim/Demo/opensim`. *(Tools -> Inverse kinematics -> Load)*\n2. Run. You should see your skeletal model move in the Vizualizer window.\n<br/>\n\n# Use on your own data\n\n> _**Deeper explanations and instructions are given below.**_\n\n## Prepare for running on your own data\n  > _**Get ready.**_\n  \n  1. Find your `Pose2Sim\\Empty_project`, copy-paste it where you like and give it the name of your choice.\n  2. Edit the [User\\Config.toml](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Empty_project/User/Config.toml) file as needed, **especially regarding the path to your project**. \n  3. Populate the `raw-2d`folder with your videos.\n  \n       <pre>\n       Project\n       \u2502\n       \u251c\u2500\u2500opensim\n       \u2502    \u251c\u2500\u2500Geometry\n       \u2502    \u251c\u2500\u2500Model_Pose2Sim_Body25b.osim\n       \u2502    \u251c\u2500\u2500Scaling_Setup_Pose2Sim_Body25b.xml\n       \u2502    \u2514\u2500\u2500IK_Setup_Pose2Sim_Body25b.xml\n       \u2502        \n       \u251c\u2500\u2500 <b>raw\n       \u2502    \u251c\u2500\u2500vid_cam1.mp4 (or other extension)\n       \u2502    \u251c\u2500\u2500...\n       \u2502    \u2514\u2500\u2500vid_camN.mp4</b>\n       \u2502\n       \u2514\u2500\u2500User\n           \u2514\u2500\u2500Config.toml\n       </b>\n    \n## 2D pose estimation\n> _**Estimate 2D pose from images with Openpose or another pose estimation solution.**_ \\\nN.B.: First film a short static pose that will be used for scaling the OpenSim model (A-pose for example), and then film your motions of interest.\\\nN.B.: Note that the names of your camera folders must follow the same order as in the calibration file, and end with '_json'.\n\n### With OpenPose:\nThe accuracy and robustness of Pose2Sim have been thoroughly assessed only with OpenPose, and especially with the BODY_25B model. Consequently, we recommend using this 2D pose estimation solution. See [OpenPose repository](https://github.com/CMU-Perceptual-Computing-Lab/openpose) for installation and running.\n* Open a command prompt in your **OpenPose** directory. \\\n  Launch OpenPose for each raw image folder: \n  ``` cmd\n  bin\\OpenPoseDemo.exe --model_pose BODY_25B --video <PATH_TO_PROJECT_DIR>\\raw-2d\\vid_cam1.mp4 --write_json <PATH_TO_PROJECT_DIR>\\pose-2d\\pose_cam1_json\n  ```\n* The [BODY_25B model](https://github.com/CMU-Perceptual-Computing-Lab/openpose_train/tree/master/experimental_models) has more accurate results than the standard BODY_25 one and has been extensively tested for Pose2Sim. \\\nYou can also use the [BODY_135 model](https://github.com/CMU-Perceptual-Computing-Lab/openpose_train/tree/master/experimental_models), which allows for the evaluation of pronation/supination, wrist flexion, and wrist deviation.\\\nAll other OpenPose models (BODY_25, COCO, MPII) are also supported.\\\nMake sure you modify the [User\\Config.toml](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Empty_project/User/Config.toml) file accordingly.\n* Use one of the `json_display_with_img.py` or `json_display_with_img.py` scripts (see [Utilities](#utilities)) if you want to display 2D pose detections.\n\n**N.B.:** *OpenPose BODY_25B is the default 2D pose estimation model used in Pose2Sim. However, other skeleton models from other 2D pose estimation solutions can be used alternatively.* \\\n    - You will first need to convert your 2D detection files to the OpenPose format (see [Utilities](#utilities)). \\\n    - Then, change the `pose_model` in the [User\\Config.toml](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Empty_project/User/Config.toml) file. You may also need to choose a different `tracked_keypoint` if the Neck is not detected by the chosen model. \\\n    - Finally, use the corresponding OpenSim model and setup files, which are provided in the `Empty_project\\opensim` folder. \n  \n Available models are:    \n    - OpenPose BODY_25B, BODY_25, BODY_135, COCO, MPII \\\n    - Mediapipe BLAZEPOSE \\\n    - DEEPLABCUT \\\n    - AlphaPose HALPE_26, HALPE_68, HALPE_136, COCO_133, COCO, MPII\n\n### With MediaPipe:\n[Mediapipe BlazePose](https://google.github.io/mediapipe/solutions/pose.html) is very fast, fully runs under Python, handles upside-down postures and wrist movements (but no subtalar ankle angles). \\\nHowever, it is less robust and accurate than OpenPose, and can only detect a single person.\n* Use the script `Blazepose_runsave.py` (see [Utilities](#utilities)) to run BlazePose under Python, and store the detected coordinates in OpenPose (json) or DeepLabCut (h5 or csv) format: \n  ``` cmd\n  python -m Blazepose_runsave -i rinput_file -dJs\n  ```\n  Type in `python -m Blazepose_runsave -h` for explanation on parameters and for additional ones.\n* Make sure you change the `pose_model` and the `tracked_keypoint` in the [User\\Config.toml](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Empty_project/User/Config.toml) file.\n\n### With DeepLabCut:\nIf you need to detect specific points on a human being, an animal, or an object, you can also train your own model with [DeepLabCut](https://github.com/DeepLabCut/DeepLabCut).\n1. Train your DeepLabCut model and run it on your images or videos (more instruction on their repository)\n2. Translate the h5 2D coordinates to json files (with `DLC_to_OpenPose.py` script, see [Utilities](#utilities)): \n   ``` cmd\n   python -m DLC_to_OpenPose -i rinput_h5_file\n   ```\n3. Report the model keypoints in the [skeleton.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/skeletons.py) file, and make sure you change the `pose_model` and the `tracked_keypoint` in the [User\\Config.toml](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Empty_project/User/Config.toml) file.\n4. Create an OpenSim model if you need 3D joint angles.\n\n### With AlphaPose:\n[AlphaPose](https://github.com/MVIG-SJTU/AlphaPose) is one of the main competitors of OpenPose, and its accuracy is comparable. As a top-down approach (unlike OpenPose which is bottom-up), it is faster on single-person detection, but slower on multi-person detection.\n* Install and run AlphaPose on your videos (more instruction on their repository)\n* Translate the AlphaPose single json file to OpenPose frame-by-frame files (with `AlphaPose_to_OpenPose.py` script, see [Utilities](#utilities)): \n   ``` cmd\n   python -m AlphaPose_to_OpenPose -i input_alphapose_json_file\n   ```\n* Make sure you change the `pose_model` and the `tracked_keypoint` in the [User\\Config.toml](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Empty_project/User/Config.toml) file.\n\n<img src=\"Content/Pose2D.png\" width=\"760\">\n\nN.B.: Markers are not needed in Pose2Sim and were used here for validation\n\n\n<details>\n  <summary>The project hierarchy becomes: (CLICK TO SHOW)</summary>\n    <pre>\n   Project\n   \u2502\n   \u251c\u2500\u2500opensim\n   \u2502    \u251c\u2500\u2500Geometry\n   \u2502    \u251c\u2500\u2500Model_Pose2Sim_Body25b.osim\n   \u2502    \u251c\u2500\u2500Scaling_Setup_Pose2Sim_Body25b.xml\n   \u2502    \u2514\u2500\u2500IK_Setup_Pose2Sim_Body25b.xml\n   \u2502\n   <i><b>\u251c\u2500\u2500pose-2d\n   \u2502    \u251c\u2500\u2500pose_cam1_json\n   \u2502    \u251c\u2500\u2500...\n   \u2502    \u2514\u2500\u2500pose_camN_json</i></b>\n   \u2502        \n   \u251c\u2500\u2500 raw-2d\n   \u2502    \u251c\u2500\u2500vid_cam1.mp4\n   \u2502    \u251c\u2500\u2500...\n   \u2502    \u2514\u2500\u2500vid_camN.mp4\n   \u2502\n   \u2514\u2500\u2500User\n       \u2514\u2500\u2500Config.toml\n   </pre>\n</details>\n\n## Camera calibration\n> _**Convert a preexisting calibration file, or calculate intrinsic and extrinsic parameters from scratch.**_ \\\n> _**N.B.:**_ You can visualize camera calibration in 3D with my (experimental) [Maya-Mocap tool](https://github.com/davidpagnon/Maya-Mocap). \n\nOpen an Anaconda prompt or a terminal, type `ipython`.\\\nBy default, `calibration()` will look for `Config.toml` in the `User` folder of your current directory. If you want to store it somewhere else (e.g. in your data directory), specify this path as an argument: `Pose2Sim.calibration(r'path_to_config.toml')`.\n\n``` python\nfrom Pose2Sim import Pose2Sim\nPose2Sim.calibration()\n```\n\nOutput:\\\n<img src=\"Content/Calib2D.png\" width=\"760\">\n<img src=\"Content/CalibFile.png\" width=\"760\">\n\n### Convert from Qualisys, Optitrack, Vicon, OpenCap, EasyMocap, or bioCV\n      \nIf you already have a calibration file, set `calibration_type` type to `convert` in your [User\\Config.toml](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Empty_project/User/Config.toml) file.\n- **From [Qualisys](https://www.qualisys.com):**\n  - Export calibration to `.qca.txt` within QTM.\n  - Copy it in the `calibration` Pose2Sim folder.\n  - set `convert_from` to 'qualisys' in your [User\\Config.toml](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Empty_project/User/Config.toml) file. Change `binning_factor` to 2 if you film in 540p.\n- **From [Optitrack](https://optitrack.com/):** Exporting calibration will be available in Motive 3.2. In the meantime:\n  - Calculate intrinsics with a board (see next section).\n  - Use their C++ API [to retrieve extrinsic properties](https://docs.optitrack.com/developer-tools/motive-api/motive-api-function-reference#tt_cameraxlocation). Translation can be copied as is in your `Calib.toml` file, but TT_CameraOrientationMatrix first needs to be [converted to a Rodrigues vector](https://docs.opencv.org/3.4/d9/d0c/group__calib3d.html#ga61585db663d9da06b68e70cfbf6a1eac) with OpenCV. See instructions [here](https://github.com/perfanalytics/pose2sim/issues/28).\n- **From [Vicon](http://www.vicon.com/Software/Nexus):**  \n  - Copy your `.xcp` Vicon calibration file to the Pose2Sim `calibration` folder.\n  - set `convert_from` to 'vicon' in your [User\\Config.toml](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Empty_project/User/Config.toml) file. No other setting is needed.\n- **From [OpenCap](https://www.opencap.ai/):**  \n  - Copy your `.pickle` OpenCap calibration files to the Pose2Sim `calibration` folder.\n  - set `convert_from` to 'opencap' in your [User\\Config.toml](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Empty_project/User/Config.toml) file. No other setting is needed.\n- **From [EasyMocap](https://github.com/zju3dv/EasyMocap/):**  \n  - Copy your `intri.yml` and `extri.yml` files to the Pose2Sim `calibration` folder.\n  - set `convert_from` to 'easymocap' in your [User\\Config.toml](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Empty_project/User/Config.toml) file. No other setting is needed.\n- **From [bioCV](https://github.com/camera-mc-dev/.github/blob/main/profile/mocapPipe.md):**  \n  - Copy your bioCV calibration files (no extension) to the Pose2Sim `calibration` folder.\n  - set `convert_from` to 'biocv' in your [User\\Config.toml](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Empty_project/User/Config.toml) file. No other setting is needed.\n\n\n### Calculate from scratch\n\n> Calculate calibration parameters with a board, or with points (such as detected on a wand or a human body).\n\n- **With a board:**\n  > *N.B.:* Try the calibration tool on the Demo by changing `calibration_type` to `calculate` in [User\\Config.toml](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Empty_project/User/Config.toml).\\\n  For the sake of practicality, there are voluntarily few board images for intrinsic calibration, and few points to click for extrinsic calibration. In spite of this, your reprojection error should be under 1-2 cm, which [does not hinder the quality of kinematic results in practice](https://www.mdpi.com/1424-8220/21/19/6530/htm#:~:text=Angle%20results%20were,Table%203).).\n  \n  - **Calculate intrinsic parameters:**\n\n    > *N.B.:* _Intrinsic parameters:_ camera properties (focal length, optical center, distortion), usually need to be calculated only once in their lifetime. In theory, cameras with same model and same settings will have identical intrinsic parameters.\\\n    > *N.B.:* If you already calculated intrinsic parameters earlier, you can skip this step. Copy your intrinsic parameters (`size`, `mat`, and `dist`) in a new `Calib*.toml` file, and set `overwrite_intrinsics` to false. Run Demo to obtain an example `Calib.toml` file.\n\n    - Create a folder for each camera in your `calibration\\intrinsics` folder.\n    - For each camera, film a checkerboard or a charucoboard. Either the board or the camera can be moved.\n    - Adjust parameters in the [User\\Config.toml](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Empty_project/User/Config.toml) file.\n    - Make sure that the board:\\\n      is filmed from different angles, covers a large part of the video frame, and is in focus.\\\n      is flat, without reflections, surrounded by a white border, and is not rotationally invariant (Nrows \u2260 Ncols, and Nrows odd if Ncols even).\n    \n    <img src=\"Content/Calib_int.png\" width=\"600\">\n\n    ***Intrinsic calibration error should be below 0.5 px.***\n        \n  - **Calculate extrinsic parameters:** \n\n    > *N.B.:* _Extrinsic parameters:_ camera placement in space (position and orientation), need to be calculated every time a camera is moved. Can be calculated from a board, or from points in the scene with known coordinates.\n\n    - Create a folder for each camera in your `calibration\\extrinsics` folder.\n    - Once your cameras are in place, shortly film either a board laid on the floor, or the raw scene\\\n    (only one frame is needed, but do not just take a photo unless you are sure it does not change the image format).\n    - Adjust parameters in the [User\\Config.toml](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Empty_project/User/Config.toml) file.\n    - Then,\n      - **If you film a board:**\\\n        Make sure that it is seen by all cameras. \\\n        It should preferably be larger than the one used for intrinsics, as results will not be very accurate out of the covered zone.\n      - **If you film the raw scene** (more flexible and potentially more accurate if points are spread out):\\\n        Manually measure the 3D coordinates of 10 or more points in the scene (tiles, lines on wall, boxes, treadmill dimensions, etc). These points should be as spread out as possible.\\\n        Then you will click on the corresponding image points for each view.\n    \n    <img src=\"Content/Calib_ext.png\" width=\"920\">\n    \n    ***Intrinsic calibration error should be below 1 cm, but depending on your application, results will still be potentially acceptable up to 2.5 cm.***\n\n- **With points:**\n  - Points can be detected from a wand.\\\n  [Want to contribute?](#how-to-contribute)\n  - For a more automatic calibration, OpenPose keypoints could also be used for calibration.\\\n  [Want to contribute?](#how-to-contribute) \n\n<details>\n  <summary>The project hierarchy becomes: (CLICK TO SHOW)</summary>\n    <pre>\n   Project\n   \u2502\n   \u251c\u2500\u2500<i><b>calibration\n   \u2502   \u251c\u2500\u2500intrinsics\n   \u2502   \u2502  \u251c\u2500\u2500int_cam1_img\n   \u2502   \u2502  \u251c\u2500\u2500...\n   \u2502   \u2502  \u2514\u2500\u2500int_camN_img\n   \u2502   \u251c\u2500\u2500extrinsics\n   \u2502   \u2502  \u251c\u2500\u2500ext_cam1_img\n   \u2502   \u2502  \u251c\u2500\u2500...\n   \u2502   \u2502  \u2514\u2500\u2500ext_camN_img\n   \u2502   \u2514\u2500\u2500Calib.toml</i></b>\n   \u2502\n   \u251c\u2500\u2500opensim\n   \u2502    \u251c\u2500\u2500Geometry\n   \u2502    \u251c\u2500\u2500Model_Pose2Sim_Body25b.osim\n   \u2502    \u251c\u2500\u2500Scaling_Setup_Pose2Sim_Body25b.xml\n   \u2502    \u2514\u2500\u2500IK_Setup_Pose2Sim_Body25b.xml\n   \u2502\n   \u251c\u2500\u2500pose-2d\n   \u2502    \u251c\u2500\u2500pose_cam1_json\n   \u2502    \u251c\u2500\u2500...\n   \u2502    \u2514\u2500\u2500pose_camN_json\n   \u2502        \n   \u251c\u2500\u2500 raw-2d\n   \u2502    \u251c\u2500\u2500vid_cam1.mp4\n   \u2502    \u251c\u2500\u2500...\n   \u2502    \u2514\u2500\u2500vid_camN.mp4\n   \u2502\n   \u2514\u2500\u2500User\n       \u2514\u2500\u2500Config.toml\n   </pre>\n</details>\n\n\n## Camera synchronization\n\n> _**Cameras need to be synchronized, so that 2D points correspond to the same position across cameras.**_\\\n*N.B.: Skip this step if your cameras are already synchronized.*\n\nIf your cameras are not natively synchronized, you can use [this script](https://github.com/perfanalytics/pose2sim/blob/draft/Pose2Sim/Utilities/synchronize_cams.py).\\\nAlternatively, use a clap, a flash, or a beep noise to synchronize them.\n\n\n## Tracking, Triangulating, Filtering\n\n### Associate persons across cameras\n\n> _**Track the person viewed by the most cameras, in case of several detections by OpenPose.**_ \\\n*N.B.: Skip this step if only one person is in the field of view.*\\\n> [Want to contribute?](#how-to-contribute) _**Allow for multiple person analysis.**_\n\n\nOpen an Anaconda prompt or a terminal, type `ipython`.\\\nBy default, `personAssociation()` will look for `Config.toml` in the `User` folder of your current directory. If you want to store it somewhere else (e.g. in your data directory), specify this path as an argument: `Pose2Sim.personAssociation(r'path_to_config.toml')`.\n``` python\nfrom Pose2Sim import Pose2Sim\nPose2Sim.personAssociation()\n```\n\nCheck printed output. If results are not satisfying, try and release the constraints in the [User\\Config.toml](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Empty_project/User/Config.toml) file.\n\nOutput:\\\n<img src=\"Content/Track2D.png\" width=\"760\">\n\n<details>\n  <summary>The project hierarchy becomes: (CLICK TO SHOW)</summary>\n    <pre>\n   Project\n   \u2502\n   \u251c\u2500\u2500calibration\n   \u2502   \u251c\u2500\u2500intrinsics\n   \u2502   \u2502  \u251c\u2500\u2500int_cam1_img\n   \u2502   \u2502  \u251c\u2500\u2500...\n   \u2502   \u2502  \u2514\u2500\u2500int_camN_img\n   \u2502   \u251c\u2500\u2500extrinsics\n   \u2502   \u2502  \u251c\u2500\u2500ext_cam1_img\n   \u2502   \u2502  \u251c\u2500\u2500...\n   \u2502   \u2502  \u2514\u2500\u2500ext_camN_img\n   \u2502   \u2514\u2500\u2500Calib.toml\n   \u2502\n   \u251c\u2500\u2500opensim\n   \u2502    \u251c\u2500\u2500Geometry\n   \u2502    \u251c\u2500\u2500Model_Pose2Sim_Body25b.osim\n   \u2502    \u251c\u2500\u2500Scaling_Setup_Pose2Sim_Body25b.xml\n   \u2502    \u2514\u2500\u2500IK_Setup_Pose2Sim_Body25b.xml\n   \u2502\n   \u251c\u2500\u2500pose-2d\n   \u2502   \u251c\u2500\u2500pose_cam1_json\n   \u2502   \u251c\u2500\u2500...\n   \u2502   \u2514\u2500\u2500pose_camN_json\n   \u2502\n   <i><b>\u251c\u2500\u2500pose-2d-tracked\n   \u2502   \u251c\u2500\u2500tracked_cam1_json\n   \u2502   \u251c\u2500\u2500...\n   \u2502   \u2514\u2500\u2500tracked_camN_json</i></b>\n   \u2502        \n   \u251c\u2500\u2500 raw-2d\n   \u2502    \u251c\u2500\u2500vid_cam1.mp4\n   \u2502    \u251c\u2500\u2500...\n   \u2502    \u2514\u2500\u2500vid_camN.mp4\n   \u2502\n   \u2514\u2500\u2500User\n       \u2514\u2500\u2500Config.toml\n   </pre>\n</details>\n   \n\n### Triangulating keypoints\n> _**Triangulate your 2D coordinates in a robust way.**_ \\\n> _**N.B.:**_ You can visualize your resulting 3D coordinates with my (experimental) [Maya-Mocap tool](https://github.com/davidpagnon/Maya-Mocap). \n\nOpen an Anaconda prompt or a terminal, type `ipython`.\\\nBy default, `triangulation()` will look for `Config.toml` in the `User` folder of your current directory. If you want to store it somewhere else (e.g. in your data directory), specify this path as an argument: `Pose2Sim.triangulation(r'path_to_config.toml')`.\n\n``` python\nfrom Pose2Sim import Pose2Sim\nPose2Sim.triangulation()\n```\n\nCheck printed output, and vizualise your trc in OpenSim: `File -> Preview experimental data`.\\\nIf your triangulation is not satisfying, try and release the constraints in the `Config.toml` file.\n\nOutput:\\\n<img src=\"Content/Triangulate3D.png\" width=\"760\">\n\n\n<details>\n  <summary>The project hierarchy becomes: (CLICK TO SHOW)</summary>\n    <pre>\n   Project\n   \u2502\n   \u251c\u2500\u2500calibration\n   \u2502   \u251c\u2500\u2500intrinsics\n   \u2502   \u2502  \u251c\u2500\u2500int_cam1_img\n   \u2502   \u2502  \u251c\u2500\u2500...\n   \u2502   \u2502  \u2514\u2500\u2500int_camN_img\n   \u2502   \u251c\u2500\u2500extrinsics\n   \u2502   \u2502  \u251c\u2500\u2500ext_cam1_img\n   \u2502   \u2502  \u251c\u2500\u2500...\n   \u2502   \u2502  \u2514\u2500\u2500ext_camN_img\n   \u2502   \u2514\u2500\u2500Calib.toml\n   \u2502\n   \u251c\u2500\u2500opensim\n   \u2502    \u251c\u2500\u2500Geometry\n   \u2502    \u251c\u2500\u2500Model_Pose2Sim_Body25b.osim\n   \u2502    \u251c\u2500\u2500Scaling_Setup_Pose2Sim_Body25b.xml\n   \u2502    \u2514\u2500\u2500IK_Setup_Pose2Sim_Body25b.xml\n   \u2502\n   \u251c\u2500\u2500pose-2d\n   \u2502   \u251c\u2500\u2500pose_cam1_json\n   \u2502   \u251c\u2500\u2500...\n   \u2502   \u2514\u2500\u2500pose_camN_json\n   \u2502\n   \u251c\u2500\u2500pose-2d-tracked\n   \u2502   \u251c\u2500\u2500tracked_cam1_json\n   \u2502   \u251c\u2500\u2500...\n   \u2502   \u2514\u2500\u2500tracked_camN_json\n   \u2502\n   <i><b>\u251c\u2500\u2500pose-3d\n       \u2514\u2500\u2500Pose-3d.trc</i></b>>\n   \u2502        \n   \u251c\u2500\u2500 raw-2d\n   \u2502    \u251c\u2500\u2500vid_cam1.mp4\n   \u2502    \u251c\u2500\u2500...\n   \u2502    \u2514\u2500\u2500vid_camN.mp4\n   \u2502\n   \u2514\u2500\u2500User\n       \u2514\u2500\u2500Config.toml\n   </pre>\n</details>\n\n\n### Filtering 3D coordinates\n> _**Filter your 3D coordinates.**_\\\n> _**N.B.:**_ You can visualize your resulting filtered 3D coordinates with my (experimental) [Maya-Mocap tool](https://github.com/davidpagnon/Maya-Mocap). \n\nOpen an Anaconda prompt or a terminal, type `ipython`.\\\nBy default, `filtering()` will look for `Config.toml` in the `User` folder of your current directory. If you want to store it somewhere else (e.g. in your data directory), specify this path as an argument: `Pose2Sim.filtering(r'path_to_config.toml')`.\n\n``` python\nfrom Pose2Sim import Pose2Sim\nPose2Sim.filtering()\n```\n\nCheck your filtration with the displayed figures, and vizualise your trc in OpenSim. If your filtering is not satisfying, try and change the parameters in the `Config.toml` file.\n\nOutput:\\\n<img src=\"Content/FilterPlot.png\" width=\"760\">\n\n<img src=\"Content/Filter3D.png\" width=\"760\">\n\n\n<details>\n  <summary>The project hierarchy becomes: (CLICK TO SHOW)</summary>\n    <pre>\n   Project\n   \u2502\n   \u251c\u2500\u2500calibration\n   \u2502   \u251c\u2500\u2500intrinsics\n   \u2502   \u2502  \u251c\u2500\u2500int_cam1_img\n   \u2502   \u2502  \u251c\u2500\u2500...\n   \u2502   \u2502  \u2514\u2500\u2500int_camN_img\n   \u2502   \u251c\u2500\u2500extrinsics\n   \u2502   \u2502  \u251c\u2500\u2500ext_cam1_img\n   \u2502   \u2502  \u251c\u2500\u2500...\n   \u2502   \u2502  \u2514\u2500\u2500ext_camN_img\n   \u2502   \u2514\u2500\u2500Calib.toml\n   \u2502\n   \u251c\u2500\u2500opensim\n   \u2502    \u251c\u2500\u2500Geometry\n   \u2502    \u251c\u2500\u2500Model_Pose2Sim_Body25b.osim\n   \u2502    \u251c\u2500\u2500Scaling_Setup_Pose2Sim_Body25b.xml\n   \u2502    \u2514\u2500\u2500IK_Setup_Pose2Sim_Body25b.xml\n   \u2502\n   \u251c\u2500\u2500pose-2d\n   \u2502   \u251c\u2500\u2500pose_cam1_json\n   \u2502   \u251c\u2500\u2500...\n   \u2502   \u2514\u2500\u2500pose_camN_json\n   \u2502\n   \u251c\u2500\u2500pose-2d-tracked\n   \u2502   \u251c\u2500\u2500tracked_cam1_json\n   \u2502   \u251c\u2500\u2500...\n   \u2502   \u2514\u2500\u2500tracked_camN_json\n   \u2502\n   <i><b>\u251c\u2500\u2500pose-3d\n   \u2502   \u251c\u2500\u2500Pose-3d.trc\n   \u2502   \u2514\u2500\u2500Pose-3d-filtered.trc</i></b>\n   \u2502        \n   \u251c\u2500\u2500 raw-2d\n   \u2502    \u251c\u2500\u2500vid_cam1.mp4\n   \u2502    \u251c\u2500\u2500...\n   \u2502    \u2514\u2500\u2500vid_camN.mp4\n   \u2502\n   \u2514\u2500\u2500User\n       \u2514\u2500\u2500Config.toml\n   </pre>\n</details>\n\n\n## OpenSim kinematics\n> _**Obtain 3D joint angles.**_\n\n### OpenSim Scaling\n1. Use the previous steps to capture a static pose, typically an A-pose or a T-pose.\n2. Open OpenSim.\n3. Open the provided `Model_Pose2Sim_Body25b.osim` model from `pose2sim/Empty_project/opensim`. *(File -> Open Model)*\n4. Load the provided `Scaling_Setup_Pose2Sim_Body25b.xml` scaling file from `pose2sim/Empty_project/opensim`. *(Tools -> Scale model -> Load)*\n5. Replace the example static .trc file with your own data.\n6. Run\n7. Save the new scaled OpenSim model.\n\n### OpenSim Inverse kinematics\n1. Use Pose2Sim to generate 3D trajectories.\n2. Open OpenSim.\n3. Load the provided `IK_Setup_Pose2Sim_Body25b.xml` scaling file from `pose2sim/Empty_project/opensim`. *(Tools -> Inverse kinematics -> Load)*\n4. Replace the example .trc file with your own data, and specify the path to your angle kinematics output file.\n5. Run\n6. Motion results will appear as .mot file in the `pose2sim/Empty_project/opensim` directory (automatically saved).\n\n<img src=\"Content/OpenSim.JPG\" width=\"380\">\n\n\n### Command line\nAlternatively, you can use command-line tools:\n\n- Open an Anaconda terminal in your OpenSim/bin directory, typically `C:\\OpenSim <Version>\\bin`.\\\n  You'll need to adjust the `time_range`, `output_motion_file`, and enter the full paths to the input and output `.osim`, `.trc`, and `.mot` files in your setup file.\n  ``` cmd\n  opensim-cmd run-tool <PATH TO YOUR SCALING OR IK SETUP FILE>.xml\n  ```\n\n- You can also run OpenSim directly in Python:\n  ``` python\n  import subprocess\n  subprocess.call([\"opensim-cmd\", \"run-tool\", r\"<PATH TO YOUR SCALING OR IK SETUP FILE>.xml\"])\n  ```\n\n- Or take advantage of the full the OpenSim Python API. See [there](https://simtk-confluence.stanford.edu:8443/display/OpenSim/Scripting+in+Python) for installation instructions (conda install may take a while).\\\nMake sure to replace `py38np120` with your Python version (3.8 in this case) and with your numpy version (1.20 here).\n  ``` cmd\n  conda install -c opensim-org opensim-moco=4.4=py38np120 -y\n  ```\n  If you run into a DLL error while importing opensim, open the file `<Pose2Sim-env>\\Lib\\opensim\\__init__.py` and replace `conda`by `conda-meta` line 4. `<Pose2Sim-env>` location can be found with `conda env list`.\\\n  Then run: \n  `ipython`\n  ``` python\n  import opensim\n  opensim.ScaleTool(\"<PATH TO YOUR SCALING OR IK SETUP FILE>.xml\").run()\n  opensim.InverseKinematicsTool(\"<PATH TO YOUR SCALING OR IK SETUP FILE>.xml\").run()\n  ```\n  You can also run other API commands. See [there](https://simtk-confluence.stanford.edu:8443/display/OpenSim/Common+Scripting+Commands#CommonScriptingCommands-UsingtheTools) for more instructions on how to use it.\n\n<details>\n  <summary>The project hierarchy becomes: (CLICK TO SHOW)</summary>\n    <pre>\n   Project\n   \u2502\n   \u251c\u2500\u2500calibration\n   \u2502   \u251c\u2500\u2500intrinsics\n   \u2502   \u2502  \u251c\u2500\u2500int_cam1_img\n   \u2502   \u2502  \u251c\u2500\u2500...\n   \u2502   \u2502  \u2514\u2500\u2500int_camN_img\n   \u2502   \u251c\u2500\u2500extrinsics\n   \u2502   \u2502  \u251c\u2500\u2500ext_cam1_img\n   \u2502   \u2502  \u251c\u2500\u2500...\n   \u2502   \u2502  \u2514\u2500\u2500ext_camN_img\n   \u2502   \u2514\u2500\u2500Calib.toml\n   \u2502\n   \u251c\u2500\u2500<i><b>opensim</i></b>  \n   \u2502    \u251c\u2500\u2500Geometry\n   \u2502    \u251c\u2500\u2500Model_Pose2Sim_Body25b.osim\n   \u2502    \u251c\u2500\u2500Scaling_Setup_Pose2Sim_Body25b.xml\n   \u2502    \u251c\u2500\u2500<i><b>Model_Pose2Sim_Body25b_Scaled.osim</i></b>  \n   \u2502    \u251c\u2500\u2500IK_Setup_Pose2Sim_Body25b.xml\n   \u2502    \u2514\u2500\u2500<i><b>IK_result.mot</i></b>   \n   \u2502\n   \u251c\u2500\u2500pose\n   \u2502   \u251c\u2500\u2500pose_cam1_json\n   \u2502   \u251c\u2500\u2500...\n   \u2502   \u2514\u2500\u2500pose_camN_json\n   \u2502\n   \u251c\u2500\u2500pose-associated\n   \u2502   \u251c\u2500\u2500tracked_cam1_json\n   \u2502   \u251c\u2500\u2500...\n   \u2502   \u2514\u2500\u2500tracked_camN_json\n   \u2502\n   \u251c\u2500\u2500triangulation\n   \u2502   \u251c\u2500\u2500triangulation.trc\n   \u2502   \u2514\u2500\u2500triangulation-filtered.trc\n   \u2502        \n   \u251c\u2500\u2500 raw\n   \u2502    \u251c\u2500\u2500vid_cam1.mp4\n   \u2502    \u251c\u2500\u2500...\n   \u2502    \u2514\u2500\u2500vid_camN.mp4\n   \u2502\n   \u2514\u2500\u2500User\n       \u2514\u2500\u2500Config.toml\n   </pre>\n</details>\n\n\n## Batch processing\nIf you need to batch process multiple data or with multiple different parameters, you can run any Pose2Sim function with a `config` dictionary instead of a file. For example:\n``` python\nfrom Pose2Sim import Pose2Sim\nimport toml\n\nconfig_dict = toml.load('User/Config.toml')\nconfig_dict['project']['pose_folder_name'] = new_project_path\nPose2Sim.triangulate(config_dict)\n```\nOr into a loop:\n``` python\nfrom Pose2Sim import Pose2Sim\nimport toml\nconfig_dict = toml.load('User/Config.toml')\n\n# Change project_path\nfor new_project_path in new_project_paths:\n  config_dict['project']['project_dir'] = new_project_path\n  config_dict['filtering']['display_figures'] = False\n\n  # Run any Pose2Sim function with config_dict instead of a path\n  Pose2Sim.triangulation(config_dict)\n  \n  # Now change filtering type\n  for new_filter in ['butterworth', 'kalman', 'gaussian']:\n    config_dict['filtering']['type'] = new_filter\n    Pose2Sim.filtering(config_dict)\n```\n\n\n# Utilities\nA list of standalone tools (see [Utilities](https://github.com/perfanalytics/pose2sim/tree/main/Pose2Sim/Utilities)), which can be either run as scripts, or imported as functions. Check usage in the docstrings of each Python file. The figure below shows how some of these toolscan be used to further extend Pose2Sim usage.\n\n\n<details>\n  <summary><b>Converting calibration files</b> (CLICK TO SHOW)</summary>\n    <pre>\n\n[Blazepose_runsave.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/Blazepose_runsave.py)\nRuns BlazePose on a video, and saves coordinates in OpenPose (json) or DeepLabCut (h5 or csv) format.\n\n[DLC_to_OpenPose.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/DLC_to_OpenPose.py)\nConverts a DeepLabCut (h5) 2D pose estimation file into OpenPose (json) files.\n\n[AlphaPose_to_OpenPose.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/AlphaPose_to_OpenPose.py)\nConverts AlphaPose single json file to OpenPose frame-by-frame files.\n\n[calib_from_checkerboard.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/calib_from_checkerboard.py)\nCalibrates cameras with images or a video of a checkerboard, saves calibration in a Pose2Sim .toml calibration file.\nYou should probably use Pose2Sim.calibration() instead, which is much easier and better.\n\n[calib_qca_to_toml.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/calib_qca_to_toml.py)\nConverts a Qualisys .qca.txt calibration file to the Pose2Sim .toml calibration file (similar to what is used in [AniPose](https://anipose.readthedocs.io/en/latest/)).\n\n[calib_toml_to_qca.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/calib_toml_to_qca.py)\nConverts a Pose2Sim .toml calibration file (e.g., from a checkerboard) to a Qualisys .qca.txt calibration file.\n\n[calib_easymocap_to_toml.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/calib_easymocap_to_toml.py)\nConverts EasyMocap intrinsic and extrinsic .yml calibration files to an OpenCV .toml calibration file.\n\n[calib_toml_to_easymocap.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/calib_toml_to_easymocap.py)\nConverts an OpenCV .toml calibration file to EasyMocap intrinsic and extrinsic .yml calibration files.\n\n[calib_toml_to_opencap.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/calib_toml_to_opencap.py)\nConverts an OpenCV .toml calibration file to OpenCap .pickle calibration files.\n\n[calib_toml_to_opencap.py]( )\nTo convert OpenCap calibration tiles to a .toml file, please use Pose2Sim.calibration() and set convert_from = 'opencap' in Config.toml.\n   </pre>\n</details>\n\n<details>\n  <summary><b>Plotting tools</b> (CLICK TO SHOW)</summary>\n    <pre>\n\n[json_display_with_img.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/json_display_with_img.py)\nOverlays 2D detected json coordinates on original raw images. High confidence keypoints are green, low confidence ones are red.\n\n[json_display_without_img.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/json_display_without_img.py)\nPlots an animation of 2D detected json coordinates. \n\n[trc_plot.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/trc_plot.py)\nDisplays X, Y, Z coordinates of each 3D keypoint of a TRC file in a different matplotlib tab.\n   </pre>\n</details>\n\n<details>\n  <summary><b>Other trc tools</b> (CLICK TO SHOW)</summary>\n    <pre>\n\n[c3d_to_trc.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/c3d_to_trc.py)\nConverts 3D point data of a .c3d file to a .trc file compatible with OpenSim. No analog data (force plates, emg) nor computed data (angles, powers, etc) are retrieved.\n\n[trc_desample.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/trc_desample.py)\nUndersamples a trc file.\n\n[trc_Zup_to_Yup.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/trc_Zup_to_Yup.py)\nChanges Z-up system coordinates to Y-up system coordinates.\n\n[trc_filter.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/trc_filter.py)\nFilters trc files. Available filters: Butterworth, Kalman, Butterworth on speed, Gaussian, LOESS, Median.\n\n[trc_gaitevents.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/trc_gaitevents.py)\nDetects gait events from point coordinates according to [Zeni et al. (2008)](https://www.sciencedirect.com/science/article/abs/pii/S0966636207001804?via%3Dihub).\n\n[trc_combine.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/trc_combine.py)\nCombine two trc files, for example a triangulated DeepLabCut trc file and a triangulated OpenPose trc file.\n\n[trc_from_mot_osim.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/trc_from_mot_osim.py)\nBuild a trc file from a .mot motion file and a .osim model file.\n\n[csv_from_mot_osim.py](https://github.com/perfanalytics/pose2sim/blob/main/Pose2Sim/Utilities/csv_from_mot_osim.py)\nConverts a mot file to a .csv file with rotation and orientation of all segments.\n\n   </pre>\n</details>\n\n<img src=\"Content/Pose2Sim_workflow_utilities.jpg\" width=\"760\">\n\n# How to cite and how to contribute\n### How to cite\nIf you use this code or data, please cite [Pagnon et al., 2022b](https://doi.org/10.21105/joss.04362), [Pagnon et al., 2022a](https://www.mdpi.com/1424-8220/22/7/2712), or [Pagnon et al., 2021](https://www.mdpi.com/1424-8220/21/19/6530).\n    \n    @Article{Pagnon_2022_JOSS, \n      AUTHOR = {Pagnon, David and Domalain, Mathieu and Reveret, Lionel}, \n      TITLE = {Pose2Sim: An open-source Python package for multiview markerless kinematics}, \n      JOURNAL = {Journal of Open Source Software}, \n      YEAR = {2022},\n      DOI = {10.21105/joss.04362}, \n      URL = {https://joss.theoj.org/papers/10.21105/joss.04362}\n     }\n\n    @Article{Pagnon_2022_Accuracy,\n      AUTHOR = {Pagnon, David and Domalain, Mathieu and Reveret, Lionel},\n      TITLE = {Pose2Sim: An End-to-End Workflow for 3D Markerless Sports Kinematics\u2014Part 2: Accuracy},\n      JOURNAL = {Sensors},\n      YEAR = {2022},\n      DOI = {10.3390/s22072712},\n      URL = {https://www.mdpi.com/1424-8220/22/7/2712}\n    }\n\n    @Article{Pagnon_2021_Robustness,\n      AUTHOR = {Pagnon, David and Domalain, Mathieu and Reveret, Lionel},\n      TITLE = {Pose2Sim: An End-to-End Workflow for 3D Markerless Sports Kinematics\u2014Part 1: Robustness},\n      JOURNAL = {Sensors},\n      YEAR = {2021},\n      DOI = {10.3390/s21196530},\n      URL = {https://www.mdpi.com/1424-8220/21/19/6530}\n    }\n\n### How to contribute and to-do list\n\nI would happily welcome any proposal for new features, code improvement, and more!\\\nIf you want to contribute to Pose2Sim, please follow [this guide](https://docs.github.com/en/get-started/quickstart/contributing-to-projects) on how to fork, modify and push code, and submit a pull request. I would appreciate it if you provided as much useful information as possible about how you modified the code, and a rationale for why you're making this pull request. Please also specify on which operating system and on which Python version you have tested the code.\n\n</br>\n\n**Main to-do list**\n- Graphical User Interface\n- Multiple person triangulation\n- Synchronization\n- Self-calibration based on keypoint detection\n\n<details>\n  <summary><b>Detailed to-do list</b> (CLICK TO SHOW)</summary>\n    <pre>\n       \n&#10004; **Pose:** Support OpenPose [body_25b](https://github.com/CMU-Perceptual-Computing-Lab/openpose_train/tree/master/experimental_models#body_25b-model---option-2-recommended) for more accuracy, [body_135](https://github.com/CMU-Perceptual-Computing-Lab/openpose_train/tree/master/experimental_models#single-network-whole-body-pose-estimation-model) for pronation/supination.\n&#10004; **Pose:** Support [BlazePose](https://developers.google.com/mediapipe/solutions/vision/pose_landmarker) for faster inference (on mobile device).\n&#10004; **Pose:** Support [DeepLabCut](http://www.mackenziemathislab.org/deeplabcut) for training on custom datasets.\n&#10004; **Pose:** Support [AlphaPose](https://github.com/MVIG-SJTU/AlphaPose) as an alternative to OpenPose.\n&#9634; **Pose:** Support [MMPose](https://github.com/open-mmlab/mmpose), [SLEAP](https://sleap.ai/), etc.\n\n&#10004; **Calibration:** Convert [Qualisys](https://www.qualisys.com) .qca.txt calibration file.\n&#10004; **Calibration:** Convert [Optitrack](https://optitrack.com/) extrinsic calibration file.\n&#10004; **Calibration:** Convert [Vicon](http://www.vicon.com/Software/Nexus) .xcp calibration file.\n&#10004; **Calibration:** Convert [OpenCap](https://www.opencap.ai/) .pickle calibration files.\n&#10004; **Calibration:** Convert [EasyMocap](https://github.com/zju3dv/EasyMocap/) .yml calibration files.\n&#10004; **Calibration:** Convert [bioCV](https://github.com/camera-mc-dev/.github/blob/main/profile/mocapPipe.md) calibration files.\n&#10004; **Calibration:** Easier and clearer calibration procedure: separate intrinsic and extrinsic parameter calculation, edit corner detection if some are wrongly detected (or not visible). \n&#10004; **Calibration:** Possibility to evaluate extrinsic parameters from cues on scene.\n&#9634; **Calibration:** Once object points have been detected or clicked once, track them for live calibration of moving cameras. Propose to click again when they are lost.\n&#9634; **Calibration:** Fine-tune calibration with bundle adjustment.\n&#9634; **Calibration:** Support ChArUco board detection (see [there](https://mecaruco2.readthedocs.io/en/latest/notebooks_rst/Aruco/sandbox/ludovic/aruco_calibration_rotation.html)).\n&#9634; **Calibration:** Calculate calibration with points rather than board. (1) SBA calibration with wand (cf [Argus](https://argus.web.unc.edu), see converter [here](https://github.com/backyardbiomech/DLCconverterDLT/blob/master/DLTcameraPosition.py)). Set world reference frame in the end.\n&#9634; **Calibration:** Alternatively, self-calibrate with [OpenPose keypoints](https://ietresearch.onlinelibrary.wiley.com/doi/full/10.1049/cvi2.12130). Set world reference frame in the end.\n\n&#9634; **Synchronization:** Synchronize cameras on 2D keypoint speeds. Cf [this draft script](https://github.com/perfanalytics/pose2sim/blob/draft/Pose2Sim/Utilities/synchronize_cams.py).\n\n&#10004; **Person Association:** Automatically choose the main person to triangulate.\n&#9634; **Person Association:** Multiple persons association. 1. Triangulate all the persons whose reprojection error is below a certain threshold (instead of only the one with minimum error), and then track in time with speed cf [Slembrouck 2020](https://link.springer.com/chapter/10.1007/978-3-030-40605-9_15)? or 2. Based on affinity matrices [Dong 2021](https://arxiv.org/pdf/1901.04111.pdf)? or 3. Based on occupancy maps [Yildiz 2012](https://link.springer.com/chapter/10.1007/978-3-642-35749-7_10)? or 4. With a neural network [Huang 2023](https://arxiv.org/pdf/2304.09471.pdf)?\n\n&#10004; **Triangulation:** Triangulation weighted with confidence.\n&#10004; **Triangulation:** Set a likelihood threshold below which a camera should not be used, a reprojection error threshold, and a minimum number of remaining cameras below which triangulation is skipped for this frame.\n&#10004; **Triangulation:** Show mean reprojection error in px and in mm for each keypoint.\n&#10004; **Triangulation:** Show how many cameras on average had to be excluded for each keypoint.\n&#10004; **Triangulation:** Evaluate which cameras were the least reliable.\n&#10004; **Triangulation:** Show which frames had to be interpolated for each keypoint.\n&#9634; **Triangulation:** [Undistort](https://docs.opencv.org/3.4/da/d54/group__imgproc__transform.html#ga887960ea1bde84784e7f1710a922b93c) 2D points before triangulating (and [distort](https://github.com/lambdaloop/aniposelib/blob/d03b485c4e178d7cff076e9fe1ac36837db49158/aniposelib/cameras.py#L301) them before computing reprojection error).\n&#9634; **Triangulation:** Multiple person kinematics (output multiple .trc coordinates files). Triangulate all persons with reprojection error above threshold, and identify them by minimizing their displacement across frames.\n&#9634; **Triangulation:** Offer the possibility of triangulating with Sparse Bundle Adjustment (SBA), Extended Kalman Filter (EKF), Full Trajectory Estimation (FTE) (see [AcinoSet](https://github.com/African-Robotics-Unit/AcinoSet)).\n&#9634; **Triangulation:** Solve limb swapping (although not really an issue with Body_25b). Try triangulating with opposite side if reprojection error too large. Alternatively, ignore right and left sides, use RANSAC or SDS triangulation, and then choose right or left by majority voting. More confidence can be given to cameras whose plane is the most coplanar to the right/left line.\n&#9634; **Triangulation:** Implement normalized DLT and RANSAC triangulation, Outlier rejection (sliding z-score?), as well as a [triangulation refinement step](https://doi.org/10.1109/TMM.2022.3171102).\n\n&#10004; **Filtering:** Available filtering methods: Butterworth, Butterworth on speed, Gaussian, Median, LOESS (polynomial smoothing).\n&#10004; **Filtering:** Implement Kalman filter and Kalman smoother.\n&#9634; **Filtering:** Implement [smoothNet](https://github.com/perfanalytics/pose2sim/issues/29)\n\n&#10004; **OpenSim:** Integrate better spine from [lifting fullbody model](https://pubmed.ncbi.nlm.nih.gov/30714401) to the [gait full-body model](https://nmbl.stanford.edu/wp-content/uploads/07505900.pdf), more accurate for the knee.\n&#10004; **OpenSim:** Optimize model marker positions as compared to ground-truth marker-based positions.\n&#10004; **OpenSim:** Add scaling and inverse kinematics setup files.\n&#10004; **OpenSim:** Add full model with contact spheres ([SmoothSphereHalfSpaceForce](https://simtk.org/api_docs/opensim/api_docs/classOpenSim_1_1SmoothSphereHalfSpaceForce.html#details)) and full-body muscles ([DeGrooteFregly2016Muscle](https://simtk.org/api_docs/opensim/api_docs/classOpenSim_1_1DeGrooteFregly2016Muscle.html#details)), for [Moco](https://opensim-org.github.io/opensim-moco-site/) for example.\n&#9634; **OpenSim:** Implement optimal fixed-interval Kalman smoothing for inverse kinematics ([this OpenSim fork](https://github.com/antoinefalisse/opensim-core/blob/kalman_smoother/OpenSim/Tools/InverseKinematicsKSTool.cpp)), or [Biorbd](https://github.com/pyomeca/biorbd/blob/f776fe02e1472aebe94a5c89f0309360b52e2cbc/src/RigidBody/KalmanReconsMarkers.cpp))\n\n&#9634; **GUI:** 3D plot of cameras and of triangulated keypoints.\n&#9634; **GUI:** Demo on Google Colab (see [Sports2D](https://bit.ly/Sports2D_Colab) for OpenPose and Python package installation on Google Drive).\n&#9634; **GUI:** Blender add-on (cf [MPP2SOS](https://blendermarket.com/products/mocap-mpp2soss)), or webapp (e.g., with [Napari](https://napari.org/stable). See my draft project [Maya-Mocap](https://github.com/davidpagnon/Maya-Mocap) and [BlendOsim](https://github.com/JonathanCamargo/BlendOsim).\n\n&#10004; **Demo:** Provide Demo data for users to test the code.\n&#9634; **Demo:** Add videos for users to experiment with other pose detection frameworks\n&#9634; **Demo:** Time shift videos and json to demonstrate synchronization\n&#9634; **Demo:** Add another virtual person to demonstrate personAssociation\n&#9634; **Tutorials:** Make video tutorials.\n&#9634; **Doc:** Use [Sphinx](https://www.sphinx-doc.org/en/master) or [MkDocs](https://www.mkdocs.org) for clearer documentation.\n\n&#9634; **Catch errors**\n&#10004; **Pip package**\n&#9634; **Conda package** \n&#9634; **Docker image**\n&#9634; Run pose estimation and OpenSim from within Pose2Sim\n&#9634; **Run from command line via click or typer**\n&#9634; **Utilities**: Export other data from c3d files into .mot or .sto files (angles, powers, forces, moments, GRF, EMG...)\n\n&#9634; **Bug:** common.py, class plotWindow(). Python crashes after a few runs of `Pose2Sim.filtering()` when `display_figures=true`. See [there](https://github.com/superjax/plotWindow/issues/7).\n&#9634; **Bug:** calibration.py. FFMPEG error message when calibration files are images. See [there](https://github.com/perfanalytics/pose2sim/issues/33#:~:text=In%20order%20to%20check,filter%20this%20message%20yet.).\n\n</pre>\n</details>\n\n</br>\n\n**Acknowledgements:**\n- Supervised my PhD: [@lreveret](https://github.com/lreveret) (INRIA, Universit\u00e9 Grenoble Alpes), and [@mdomalai](https://github.com/mdomalai) (Universit\u00e9 de Poitiers).\n- Provided the Demo data: [@aaiaueil](https://github.com/aaiaueil) from Universit\u00e9 Gustave Eiffel.\n- Tested the code and provided feedback: [@simonozan](https://github.com/simonozan), [@daeyongyang](https://github.com/daeyongyang), [@ANaaim](https://github.com/ANaaim), [@rlagnsals](https://github.com/rlagnsals)\n- Provided a code snippet for Optitrack calibration: [@claraaudap](https://github.com/claraaudap) (Universit\u00e9 Bretagne Sud).\n- Issued MPP2SOS, a (non-free) Blender extension based on Pose2Sim: [@carlosedubarreto](https://github.com/carlosedubarreto)\n\n</br>\n\n**Pose2Sim releases:**\n- [x] v0.1: Published online\n- [x] v0.2: Published associated paper\n- [x] v0.3: Supported other pose estimation algorithms\n- [x] v0.4: New calibration tool\n- [ ] v0.5: Supports multi-person analysis\n- [ ] v0.6: New synchronization tool\n- [ ] v0.7: Graphical User Interface\n- [ ] v1.0: First accomplished release\n"
    },
    {
        "repo": "/Tangshitao/ClipShots",
        "language": "Python",
        "readme_contents": "# ClipShots dataset\nThis repository contains the ClipShots dataset introduced in our [paper](https://arxiv.org/pdf/1808.04234.pdf). The videos are [here](https://pan.baidu.com/s/1J3fdQxPUtkMe6i8moCXZ0A) or [Google cloud](https://drive.google.com/drive/folders/1AAhTbNroSFsygHBXa88emCU7f50MxI8t?usp=sharing). Please rename the directory ClipShots to data.tar.gz to use data.\n\n## Introduction\nClipShots is the first large-scale dataset for shot boundary detection collected from Youtube and Weibo covering more than 20 categories, including sports, TV shows, animals, etc. In contrast to previous shot boundary detection dataset, e.g. TRECVID and RAI, which only consist of documentaries or talk shows where the frames are relatively static, we construct a database containing short videos from Youtube and Weibo. Many short videos are home-made, with more challenges, e.g. hand-held vibrations and large occlusion. The types of these videos are various, including movie spotlights, competition highlights, family videos recorded by mobile phones etc. Each video has a length of 1-20 minutes. The gradual transitions in our database include dissolve, fade in fade out, and sliding in sliding out.\n\n## Description\nThe database contains 3 sets of data, training set, testing set and 'only_gradual' set. The trainig set and the 'only_gradual' set are for training and the testing set is for evaluation. For the 'only_gradual' set, we annotate the gradual transitions because of insufficent gradual transitions in training set. In `video_lists`, there are 3 files that contain the video names of them respectively. The evaluation script is in `tools`.\n\n## Main results\nWe list some strong baselines here.\n<table>\n    <thead>\n        <tr>\n            <th>Methods</th>\n            <th colspan=3>Cut</th>\n            <th colspan=3>Gradual</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td></td>\n            <td>Precision</td>\n            <td>Recall</td>\n            <td>F1-score</td>\n            <td>Precision</td>\n            <td>Recall</td>\n            <td>F1-score</td>\n        </tr>\n        <tr>\n            <td>deepSBD (Alexnet-like, origin)</td>\n            <td>0.731</td>\n            <td>0.921</td>\n            <td>0.815</td>\n            <td>0.837</td>\n            <td>0.386</td>\n            <td>0.528</td>\n        </tr>\n        <tr>\n            <td>deepSBD (ResNet-18)</td>\n            <td>0.765</td>\n            <td>0.910</td>\n            <td>0.831</td>\n            <td>0.770</td>\n            <td>0.622</td>\n            <td>0.688</td>\n        </tr>\n        <tr>\n            <td>DSM</td>\n            <td>0.776</td>\n            <td>0.934</td>\n            <td>0.848</td>\n            <td>0.840</td>\n            <td>0.904</td>\n            <td>0.870</td>\n        </tr>\n    </tbody>\n</table>\n\nPlease refer to [this paper](https://arxiv.org/pdf/1705.03281.pdf) for deepSBD and [our paper](https://arxiv.org/pdf/1808.04234.pdf) for DSM. We also release the baseline codes [here](https://github.com/Tangshitao/ClipShots_basline). Please email shitaot@gmail.com if you have any questions.\n"
    },
    {
        "repo": "/meysubb/Sports_Data_Reference",
        "language": null,
        "readme_contents": "# README \n\nFigured I would use this as a repo to document and update where to find data for various different sports.\n\nThe goal is to make it a bit easier for people to find whatever sports data they are looking for. \n\n## Languages \n\nFeel free to add info on other languages etc. In the future, I (or we) can document where to find APIs. \n\n[R Packages](R/Data.md)  \n[Python](Python/Data.md)   \n[JS](JS/Data.md)  \n[.NET](.NET/Data.md)  \n\n## API/DATA\n\n[API](API/Data.md)\n[Raw Data](Raw_Data/Data.md)\n\n## Contribute\n\nThere are two ways to contribute:\n\n1) Make a Pull Request\n2) Fill out this [google form](https://docs.google.com/forms/d/e/1FAIpQLSdaTujrZUEk21sVSuJTyZjAuWSDlg-fj-R12-oyX75VmeFzTg/viewform?usp=sf_link), and i'll do it!\n"
    },
    {
        "repo": "/droher/boxball",
        "language": "Python",
        "readme_contents": "<p align=\"center\">\n<img src=\"./assets/boxball.jpg\" width=\"50%\">\n</p>\n<p align=\"center\">\n<img alt=\"GitHub release\" src=\"https://img.shields.io/github/release/droher/boxball.svg\">\n<a href=\"https://circleci.com/gh/droher/boxball\">\n    <img src=\"https://circleci.com/gh/droher/boxball.svg?style=shield&circle-token=2b78bfd4c600c640c479f2f2d9eaa38823ad8b96\"/>\n</a>\n<a href=\"https://www.codacy.com?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=droher/boxball&amp;utm_campaign=Badge_Grade\">\n    <img src=\"https://api.codacy.com/project/badge/Grade/9a163160d3db4621b941b3297bfb9edf\"/>\n</a>\n<a href=\"https://www.codacy.com?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=droher/boxball&amp;utm_campaign=Badge_Coverage\">\n    <img src=\"https://api.codacy.com/project/badge/Coverage/9a163160d3db4621b941b3297bfb9edf\"/>\n</a>\n<img alt=\"Docker Pulls\" src=\"https://img.shields.io/docker/pulls/doublewick/boxball.svg\">\n<a href=\"https://opensource.org/licenses/Apache-2.0\">\n    <img src=\"https://img.shields.io/badge/License-Apache%202.0-blue.svg\" /></a>\n<br>\n</p>\n\n## Introduction\n**Boxball** creates prepopulated databases of the two most significant open source baseball datasets:\n[Retrosheet](http://retrosheet.org) and the [Baseball Databank](https://github.com/chadwickbureau/baseballdatabank).\nRetrosheet contains information on every major-league pitch since 2000, every play since 1928,\nevery box score since 1901, and every game since 1871.\nThe Databank (based on the [Lahman Database](http://www.seanlahman.com/baseball-archive/statistics/)) contains yearly\nsummaries for every player and team in history. In addition to the data and databases themselves, Boxball relies on the following tools:\n*   [Docker](https://docs.docker.com/engine/docker-overview/) for repeatable builds and easy distribution\n*   [SQLAlchemy](https://www.sqlalchemy.org/) for abstracting away DDL differences between databases\n*   [Chadwick](https://github.com/chadwickbureau/chadwick) for translating Retrosheet's complex event files into a relational format\n\nFollow the instructions below to install your distribution of choice. The full set of images is also available on\nDocker Hub.\n\nThe Retrosheet schema is extensively documented in the code; see the source [here](https://github.com/droher/boxball/blob/master/transform/src/schemas/retrosheet.py)\nuntil I find a prettier solution.\n\nIf you find the project useful, please consider donating to:\n*   The [Ali Forney Center](https://aliforneycenter.donordrive.com/index.cfm?fuseaction=donate.general) for homeless LGBTQ youth\n*   [350.org](https://act.350.org/donate/build/), a grassroots international climate change organization\n\nFeel free to [contact me](mailto:david@boxball.io) with questions or comments! \n\n## Requirements\n*   [Docker](https://docs.docker.com/install/) (v18.06, earlier versions may not work)\n*   2-20GB Disk space (depends on distribution choice)\n*   500MB-8GB RAM available to Docker (depends on distribution choice)\n\n## Distributions\n### Column-Oriented Databases\n#### Postgres cstore_fdw (Recommended)\nThis distribution uses the [cstore_fdw](https://github.com/citusdata/cstore_fdw) extension to turn PostgreSQL\ninto a column-oriented database. This means that you get the rich featureset of Postgres,\nbut with a huge improvement in speed and disk usage. To install and run the database server:\n\n`docker run --name postgres-cstore-fdw -d -p 5433:5432 -e POSTGRES_PASSWORD=\"postgres\" -v ~/boxball/postgres-cstore-fdw:/var/lib/postgresql/data doublewick/boxball:postgres-cstore-fdw-latest`\n\nRoughly an hour after the image is downloaded, the data will be fully loaded into the database, and you can connect to it as the user `postgres`\nwith password `postgres` on port `5433`\n(either using the `psql` command line tool or a database client of your choice). The data will be persisted on your machine in\n`~/boxball/postgres-cstore-fdw` (~1.5GB), which means you can stop/remove the container without having to reload the data\nwhen you turn it back on.\n\n#### Clickhouse\n[Clickhouse](https://clickhouse.yandex/) is a database developed by Yandex with some very impressive performance benchmarks. It uses less\ndisk space than Postgres cstore_fdw, but significantly more RAM (~5GB). I've yet to run any query performance comparisons.\nTo install and run the database server:\n\n`docker run --name clickhouse -d -p 8123:8123 -v ~/boxball/clickhouse:/var/lib/clickhouse doublewick/boxball:clickhouse-latest`\n\n15-30 minutes after the image is downloaded, the data will be fully loaded into the database, and you can connect to it either by attaching the\ncontainer and using the `clickhouse-client` CLI or by using a local database client on port `8123` as the user `default`. \nThe data will be persisted on your machine in\n`~/boxball/clickhouse` (~700MB), which means you can stop/remove the container without having to reload the data\nwhen you turn it back on.\n\n#### Drill\n[Drill](https://drill.apache.org/) is a framework that allows for SQL queries directly on files, without having to declare any schema.\nIt is usually used on a computing cluster with massive datasets, but we use a single-node setup. To install and run:\n\n`docker run --name drill -id -p 8047:8047 -p 31010:31010 -v ~/boxball/drill:/data doublewick/boxball:drill-latest`\n \nData will be immediately available to query after the image is downloaded. Use port `8047` to access the Web UI \n(which includes a SQL runner) and port `31010` to connect via a database client.\nYou may also attach the container and query from the command line.\nThe data will be persisted on your machine in `~/boxball/drill` (~700MB).\n\n### Traditional (Row-oriented) Databases\nNote: these frameworks are likely to be prohibitively slow when querying play-by-play data, and they take up significantly\nmore disk space than their columnar counterparts.\n#### Postgres\nSimilar configuration to the cstore_fdw extended version above, but stored in the conventional way.\n\n`docker run --name postgres -d -p 5432:5432 -e POSTGRES_PASSWORD=\"postgres\" -v ~/boxball/postgres:/var/lib/postgresql/data doublewick/boxball:postgres-latest`\n\nRoughly 90 minutes after the image is downloaded, the data will be fully loaded into the database,\nand you can connect to it as the user `postgres` with password `postgres` on port `5432`\n(either using the `psql` command line tool or a database client of your choice). The data will be persisted on your machine in\n`~/boxball/postgres` (~12GB), which means you can stop/remove the container without having to reload the data\nwhen you turn it back on.\n\n#### MySQL\nTo install and run:\n\n`docker run --name mysql -d -p 3306:3306 -v ~/boxball/mysql:/var/lib/mysql doublewick/boxball:mysql-latest`\n\nRoughly two hours after the image is downloaded, the data will be fully loaded into the database,\nand you can connect to it as the user `root` on port `3306`. The data will be persisted on your machine in\n`~/boxball/mysql` (~12GB), which means you can stop/remove the container without having to reload the data\nwhen you turn it back on.\n\n#### SQLite (with web UI)\nTo install and run:\n\n`docker run --name sqlite -d -p 8080:8080 -v ~/boxball/sqlite:/db doublewick/boxball:sqlite-latest`\n\nRoughly two minutes after the image is downloaded, the data will be fully loaded into the database. `localhost:8080`\nwill provide a [web UI](https://github.com/coleifer/sqlite-web) where you can write queries and perform schema exploration.\n\n### Flat File Downloads\n\n#### Parquet\nParquet is a columnar data format originally developed for the Hadoop ecosystem. It has solid support in Spark, Pandas,\nand many other frameworks.\n[OneDrive](https://1drv.ms/u/s!AtpEocFNRNBWhAqZMaj40Bb8__6u?e=dNJiod)\n\n#### CSV\nThe original CSVs from the extract step (each CSV file is compressed in the ZSTD format).\n[OneDrive](https://1drv.ms/u/s!AtpEocFNRNBWhDLuZqcmXYOIieKQ?e=xP4Azs)\n\n## Acknowledgements\nTed Turocy's [Chadwick Bureau](http://chadwick-bureau.com/) developed the tools and repos that made this project possible. I am also grateful to [Sean\nLahman](http://www.seanlahman.com/) for creating his database, which I have been using for over 15 years. I was able\nto develop and host this project for free thanks to the generous open-source plans of [Jetbrains](https://www.jetbrains.com/?from=boxball), CircleCI, Github, and Docker Hub.\n\nRetrosheet represents the collective effort of thousands of baseball fans over 150 years of scorekeeping and data entry.\nI hope Boxball facilitates more historical research to continue this tradition.\n\n## Licence(s)\nAll code is released under the Apache 2.0 license. Baseball Databank data is distributed under the [CC-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/)\nlicense. Retrosheet data is released under the condition that the below text appear prominently:\n\n``` \nThe information used here was obtained free of\ncharge from and is copyrighted by Retrosheet.  Interested\nparties may contact Retrosheet at \"www.retrosheet.org\".\n```\n"
    },
    {
        "repo": "/ryankrumenacker/sports-betting-arbitrage-project",
        "language": "Jupyter Notebook",
        "readme_contents": "# Statistical Arbitrage for Sports Betting Project\n\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/113403062/190924275-629eaf18-183c-4781-81a2-fd0337143ba9.jpg\" alt=\"animated\"/>\n</p>\n\n*Above is an example of what the output Excel file may look like.*\n\nThis project was made in March 2022. In this project, I utilize the **Live Sports Odds API** (https://the-odds-api.com/) to find statistical arbitrage opportunities in upcoming sporting events across the world. For sports betting purposes, an arbitrage opportunity is when two books are offering such distinct odds that if a bettor makes a particular bet with one book and another particular bet with another book, they can hedge their bets in such a way that they will be guaranteed to make a profit. \n\nThe **Live Sports Odds API** is a free, open source API that tracks the current odds of essentially any given sporting event that is offered by books across the United States. With data from the API, the program is able to find all possible artbitrage opportunities across the eight nearest upcoming sporting events. Once the program finds these opportunities and makes the necessary calculations for the user to understand the output, it writes all findings to an Excel file for the user to access. This file includes the **ID** and **Sport Key** (both of which are specific metrics to the Live Sports Odds API), along with the **Expected Earnings, Bookmaker, Name, Odds**, and **Amount to Buy** with each book for each respective bet. Each row in the file represents one artbitrage opportunity.\n\nAll of the code for this program is included in the **Arbitrage.ipynb** file. Each chunk of code is commented so that the user knows exactly what is happening in each step of the program. Please note that the API does not update instantaneously, and since all books are constantly altering their odds as to eliminate such opportunities for bettors, the program will occasionally output odds that are slightly inaccurate due to the fact that they have already been updated on the book's website. \n\nThe **Books.txt** file contains a list of all of the US bookmakers that are supported by the **Live Sports Odds API** as of 3/17/22 for reference. This information is also on the documentation website for the API listed above.\n\nNOTE: In order to use this project, you will need to acquire an API key from the website linked above. It is entirely free. Once you have done this, add your API key to the **API_KEY.txt** file.\n"
    },
    {
        "repo": "/crli/vue-sports",
        "language": "JavaScript",
        "readme_contents": "# vue-sports\n\n> A Vue.js project\n\n\u4eff\u51e4\u51f0\u65b0\u95fb\u4f53\u80b2\u677f\u5757+\u8d5b\u4e8b\u6570\u636e\n\n\u4f53\u80b2\u65b0\u95fb\u677f\u5757\u5df2\u7ecf\u5b8c\u6210(\u6682\u65f6\u672a\u7528\u5230vuex) \uff0c\u6b63\u5728\u5f04\u4f53\u80b2\u8d5b\u4e8b\u6570\u636e\u63a5\u53e3(\u8ba1\u5212\u52a0\u5165vuex)\n\n<p align=\"center\">\n  <img src=\"./src/assets/img/lx.gif\" alt=\"\u51e4\u51f0\u65b0\u95fb\u4f53\u80b2\u677f\u5757\" >\n</p>\n\n## Build Setup\n\n``` bash\n# install dependencies\nnpm install\n\n# serve with hot reload at localhost:8080\nnpm run dev\n\n# build for production with minification\nnpm run build\n\n# build for production and view the bundle analyzer report\nnpm run build --report\n```\n\n# \u76ee\u6807\u529f\u80fd\n- [x] \u4f53\u80b2\u65b0\u95fb -- \u5b8c\u6210\n- [ ] \u6bd4\u8d5b\u6570\u636e -- \u672a\u5b8c\u6210\n"
    },
    {
        "repo": "/isoteemu/sports-tracker-liberator",
        "language": "Python",
        "readme_contents": "# Sports Tracker Liberator\n\nUnder a catchy name lies an implementation which uses/implements Endomondo Mobile Api.\n\n## Status\n\nCurrently only Endomondo Api is somewhat implemented. Retrieving stuff somewhat works, and submitting new workouts works as in most basic form. All social media crap is ignored.\n\n## Usage\n\n### Authentication\n\nEndomondo implements basic token mechanism, except that earlier versions didn't do that correctly and was only protected by *can't be arsed with it* -securitysystem. Later App versions tried to fix this, while maintaining backward compatibility by implementing a second, `secureToken` param. This is mainly used for social media crap, so we'll conveniently ignore it.\n\nTo authenticate, one needs existing email and password:\n\n\tfrom endomondo import MobileApi\n\tendomondo = MobileApi(email='email@example.com', password='p4ssw0rd')\n\n\tauth_token = endomondo.get_auth_token()\n\nThis will return an `auth_token`, which can be stored on keychain or similar. In future, it should be used to skip whole login juggalloo.\n\n\tendomondo = MobileApi(auth_token=auth_token)\n\n### Retrieving workouts:\nTo retrieve latest workouts:\n\n\tendomondo.get_workouts()\n\nEndomondo Mobile Api provides some oddities, and one of them is that `maxResults` actually work! And as usually in REST APIs, `before` date can be defined:\n\n\tworkouts = endomondo.get_workouts(maxResults=2)\n\tendomondo.get_workouts(before=workouts[-1].start_time)\n\nStructure for `workouts` page is similar to other providers, except paging links are missing.\n\n### Retrieving single workout\n\n`MobileApi.get_workout()` accepts either existing workout, or workout ID.\n\n\tworkout = endomondo.get_workout(workoutId='234246')\n\t[...]\n\treload = endomondo.get_workout(workout)\n\nFor workouts, or workout history, you can pass `fields` param to define, which attributes you are interested at. Again, a bit suprisingly, this works.\n\n\tsocial_workout = endomondo.get_workout(fields=['lcp_count'])\n\nThease attributes aren't documented anywhere, but most of known can be found \u00edn `MobileApi.get_workout()`, and they follow somewhat logical naming conventions.\n\n### Creating a workout and a track.\n\nSome, if not most of program logic lies in mobile app, and server just stores data. This means that one needs to calculate most of their data by themselves.\n\nCurrently only most basic workout creation is supported. Later if/when workout update is added, more features becomes available. This is somewhat related to implementation of Endomondo Mobile Api, as only sport type, calories, hydration, duration and distance in form of track point is created. After initial creation, rest of data is updated to it.\n\nTo create workout:\n\n\tfrom endomondo import MobileApi, Workout, TrackPoint\n\tfrom datetime import datetime\n\n\tendomondo = MobileApi(auth_token='1234')\n\n\tworkout = Workout()\n\n\tworkout.start_time = datetime.utcnow()\n\n\t# See ``workout.sports``\n\tworkout.sport = 0\n\n\t# Units are in user' local units, and only Metric is supported.\n\t# `distance` is in km.\n\t# Note that at creation time, this is not required. It's only used for automatic track point generation.\n\tworkout.distance = 1.5\n\n\t# Duration in seconds\n\tworkout.duration = 600\n\n\tendomondo.post_workout(workout=workout, properties={'audioMessage': 'false'})\n\n\tif workout.id:\n\t\tprint \"Saved!\"\n\nAltought track points aren't technically required by Endomondo backend, which is likely just for a sake of backwards compatibility, and in practice you always want to have at least one `TrackPoint` in your `Workout`. `MobileApi.post_workout()` can automate this, and will create one if none exists.\n\n### Other\n\nFor other, tested, functionality see `main.py`\n\n## Disclaimer, legalese and everything else.\n\nThis is _not_ affiliated or endorset by Endomondo, or any other party. If you are copying this for a commercial project, be aware that it *might* be so that clean room implementation rules aren't fully complied with.\n"
    },
    {
        "repo": "/gingeleski/odds-portal-scraper",
        "language": "Python",
        "readme_contents": "\n# Odds Portal scraping\n\nThis repository contains multiple scraping projects for Odds Portal.\n\nEach one has its own `README.md` so just look in the directories, as detailed below.\n\nMainly `full_scraper/` is the most comprehensive and will cover most use cases.\n\n**Note that all projects here were developed with Python 3.x and you should run/develop them with at least that**\n\n| Directory name  | Description                                                                       |\n|-----------------|-----------------------------------------------------------------------------------|\n| `full_scraper`  | Will scrape nearly any sport and output as JSON. Most comprehensive and flexible. |\n| `soccer_to_sql` | Scrapes soccer odds and scores then puts them in a SQLite database.               |\n| `predictions`   | Scrapes predictions of users you follow - public or private - and saves them off. |\n"
    },
    {
        "repo": "/mmmmmtasty/SportScanner",
        "language": "Python",
        "readme_contents": "# SportScanner\n\n[![Join the chat at https://gitter.im/mmmmmtasty/SportScanner](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mmmmmtasty/SportScanner?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n# This project is no longer actively maintained. Please submit PRs and I will review but support is patchy at best! Thanks for watching!\n\nScanner and Metadata Agent for Plex that uses www.thesportsdb.com\n\n# Installation\n\nPlex main folder location:\n\n    * '%LOCALAPPDATA%\\Plex Media Server\\'                                        # Windows Vista/7/8\n    * '%USERPROFILE%\\Local Settings\\Application Data\\Plex Media Server\\'         # Windows XP, 2003, Home Server\n    * '$HOME/Library/Application Support/Plex Media Server/'                     # Mac OS\n    * '$PLEX_HOME/Library/Application Support/Plex Media Server/',               # Linux\n    * '/var/lib/plexmediaserver/Library/Application Support/Plex Media Server/', # Debian,Fedora,CentOS,Ubuntu\n    * '/usr/local/plexdata/Plex Media Server/',                                  # FreeBSD\n    * '/usr/pbi/plexmediaserver-amd64/plexdata/Plex Media Server/',              # FreeNAS\n    * '${JAIL_ROOT}/var/db/plexdata/Plex Media Server/',                         # FreeNAS\n    * '/c/.plex/Library/Application Support/Plex Media Server/',                 # ReadyNAS\n    * '/share/MD0_DATA/.qpkg/PlexMediaServer/Library/Plex Media Server/',        # QNAP\n    * '/volume1/Plex/Library/Application Support/Plex Media Server/',            # Synology, Asustor\n    * '/raid0/data/module/Plex/sys/Plex Media Server/',                          # Thecus\n    * '/raid0/data/PLEX_CONFIG/Plex Media Server/'                               # Thecus Plex community\n\n - Download the latest release from https://github.com/mmmmmtasty/SportScanner/releases\n - Extract files\n - Copy the extracted directory \"Scanners\" into your Plex main folder location - check the list above for more clues\n - Copy the extracted directory \"SportScanner.bundle\" into the Plug-ins directory in your main folder location - check the list above for more clues\n - You may need to restart Plex\n - Create a new library and under Advanced options you should be able to select \"SportScanner\" as both your scanner and metadata agent.\n\n# Media Format\n\nThe SportScanner scanner requires one of two folder structures to work correctly, the first of which matches Plex's standard folder structure.\n\n## RECOMMENDED METHOD\n\nFollow the Plex standards for folder structure - TV Show\\Season\\<files>. For SportScanner, TV Shows = League Name. For example for 2015/2016 NHL you would do something like the following:\n\n - ~LibraryRoot/NHL/Season 1516/NHL.2015.09.25.New-York-Islanders.vs.Philadelphia-Flyers.720p.HDTV.60fps.x264-Reborn4HD_h.mp4\n\nIn this scenario you still need all the information in the file name, I aim to remove that requirement down the line. The only information that comes only from the folder structure is the season. \n\n## Alternative naming standard\n\nYou can also choose to ignore the season directory and have the scanner work it out with a folder structure like so:\n\n - ~LibraryRoot/Ice Hockey/NHL/NHL.2015.09.25.New-York-Islanders.vs.Philadelphia-Flyers.720p.HDTV.60fps.x264-Reborn4HD_h.mp4\n\n THERE IS A DOWN SIDE TO THIS! For this to work you must include a file in each league directory called \"SportScanner.txt\" that contains information about how the seasons work for this sport. The first line in the file will always be \"XXXX\" or \"XXYY\". \"XXXX\" means that the seasons happens within one calendar year and will therefore be named \"2015\" of \"1999\" for example. \"XXYY\" means that a season occurs across two seasons and will take the format \"1516\" or \"9899\" for example. When you define the season as \"XXYY\" you MUST then on the next line write the integer values of a month and a day in the form \"month,day\". This should be a a month and a day somewhere in the off-season for that sport. This tells the scanner when one season has finished and the next one is beginning to ensure that it puts files in the correct season based off the date the event happened. As an example, if you are trying to add NHL you would create a file at the following path:\n\n  - ~LibraryRoot/Ice Hockey/NHL/SportScanner.txt\n\nIn this instance the contents of this file would be as follows, saying that seasons should be in \"XXYY\" format and a date in the middle of the off-season is 1st July:\n\nXXYY\n7,1\n\n## NOT RECOMMENDED (but works for now)\n\nSportScanner does not actually pay attention to the name of the League directory when it comes to matching events - all info has to be in the filename. This means that you can still group all sports together and as long as they share a season format you can create a SportScanner.txt file as outlined above and everything will work.\n\nThis is rubbish, it kind of accidentally works, I don't recommend it as I will cut it out as part of improvement works in future.\n\n# Known Issues\n - No posters for seasons\n - Can only handle individual files, not multipart or those in folders\n - All information must be in the filename regardless of the directory structure.\n\n# Additional Metadata\n\nThe presence of a .SportScanner metadata file can be used to append additional text to the title of the event as well as override a portion of the episode number.\nNormally the episode number is of the form `YYMMDDHHHH` where YY is the year, MM is the month, DD is the day, and HHHH is based on a hash.  If the first line of the `.SportScanner` file is a number it will be used in place of the hash.\nThe second line of the `.SportScanner` file will be appended to the title of the event.\n\n - ~LibraryRoot/Formula 1/Season 2019/Formula 1 2019-06-30 Austrian Grand Prix - 03 Post-Race Analysis.mp4\n - ~LibraryRoot/Formula 1/Season 2019/Formula 1 2019-06-30 Austrian Grand Prix - 03 Post-Race Analysis.SportScanner\n\nIn the above example, the `Formula 1 2019-06-30 Austrian Grand Prix - 03 Post-Race Analysis.SportScanner` file contains the following text:\n\n```\n3\n(Post-Race Analysis)\n```\n\nThe resulting episode number is `1906300003` and the resulting title is `Austrian Grand Prix (Post-Race Analysis)`\n\n# API Key\n\nif you have your own API key for thesportsdb.com and want to use it, create a file in the SportScanner data directory.  On Linux, this directory is\n```\n/var/lib/plexmediaserver/Library/Application Support/Plex Media Server/Plug-in Support/Data/com.plexapp.agents.sportscanner\n```\nCreate a plain text file named 'SportScanner.ini' in that directory (case sensitive if your OS is) and enter\n```\n[thesportsdb.com]\napikey=<your api key>\n```\n"
    },
    {
        "repo": "/sportsdataverse/sportyR",
        "language": "R",
        "readme_contents": "\n<!-- README.md is generated from README.Rmd. Please edit that file -->\n\n# sportyR <img src=\"https://raw.githubusercontent.com/sportsdataverse/sportyR/main/logos/sportyr-logo-hex.png\" align=\"right\" width=\"120\"/>\n\n[![CRAN\nversion](https://img.shields.io/badge/dynamic/json?style=flat&color=ff552e&label=CRAN%20version&prefix=v&query=%24.Version&url=https%3A%2F%2Fcrandb.r-pkg.org%2FsportyR)](https://CRAN.R-project.org/package=sportyR)\n[![CRAN\ndownloads](https://img.shields.io/badge/dynamic/json?style=flat&color=ff552e&label=Downloads&query=%24%5B0%5D.downloads&url=https%3A%2F%2Fcranlogs.r-pkg.org%2Fdownloads%2Ftotal%2F2021-10-26%3Alast-day%2FsportyR)](https://CRAN.R-project.org/package=sportyR)\n[![Version-Number](https://img.shields.io/github/r-package/v/sportsdataverse/sportyR?label=sportyR&logo=R&style=flat&color=ff552e&logoColor=1d9bf0)](https://github.com/sportsdataverse/sportyR/)\n[![R-CMD-check](https://img.shields.io/github/workflow/status/sportsdataverse/sportyR/R-CMD-check?label=R-CMD-Check&logo=R&&style=flat&logoColor=1d9bf0)](https://github.com/sportsdataverse/sportyR/actions/workflows/R-CMD-check.yaml)\n[![codecov](https://img.shields.io/codecov/c/github/sportsdataverse/sportyR?color=ff552e&label=codecov&logo=codecov)](https://codecov.io/gh/sportsdataverse/sportyR)\n[![Lifecycle:maturing](https://img.shields.io/badge/lifecycle-maturing-blue.svg?style=flat&logo=github&color=ff552e)](https://github.com/sportsdataverse/sportyR/)\n[![Twitter\nFollow](https://img.shields.io/twitter/follow/sportyR_pkg?&label=%40sportyR_pkg&logo=twitter&style=flat&color=ff552e)](https://twitter.com/sportyR_pkg)\n[![Twitter\nFollow](https://img.shields.io/twitter/follow/sportsdataverse?&label=%40sportsdataverse&logo=twitter&style=flat&color=ff552e)](https://twitter.com/sportsdataverse)\n\nAs the field of sports analytics evolve, there\u2019s a growing need for\nmethods to both track and visualize players throughout the game. This\npackage aims to make this easy regardless of sport needed to be plotted.\n\nThis repository contains code necessary to draw scale versions of\nplaying surfaces to visualize play-by-play data for baseball,\nbasketball, curling, football, hockey, soccer, and tennis in **R**. For\nthe **Python** version of this package, click\n[here](https://github.com/sportsdataverse/sportypy).\n\n## Installation\n\nThe most recent release of `sportyR` is available on\n[CRAN](https://cran.r-project.org/web/packages/sportyR/index.html), and\nit can be installed directly via:\n\n``` r\n# Install released version from CRAN\ninstall.packages(\"sportyR\")\n```\n\nThe development version of `sportyR` can be installed from\n[GitHub](https://github.com/sportsdataverse/sportyR) with:\n\n``` r\n# Install development version from GitHub\ndevtools::install_github(\"sportsdataverse/sportyR\")\n```\n\nOnce the library is installed, be sure to load it into the working\nenvironment.\n\n``` r\n# Required to use package\nlibrary(sportyR)\n```\n\n## Plotting Functions\n\nAll plotting functions in this library are named as `geom_{sport}()`,\nand take the following arguments:\n\n- `league`: the league code for the sport. In all functions, this will\n  ***NOT*** have a default value. The supplied league is\n  **case-insensitive**. Future iterations of this package may allow the\n  full league name to be supplied if desired (e.g.\n  `league = 'National Basketball Associaton'` instead of\n  `league = 'NBA'`), but this feature is not currently available.\n\n- `display_range`: This automatically \u201czooms\u201d in on the area of the plot\n  you\u2019re interested in. Valid ranges here vary by sport, but can be\n  found by calling `?geom_{sport}` and reading about the display ranges\n\n- `x_trans` and `y_trans`: By default, the origin of the coordinate\n  system *always* lies at the center of the plot. For example, `(0, 0)`\n  on a basketball court lies along the division line and on the line\n  that connects the center of each basket. If you want to shift the\n  origin (and therefore the entire plot), use `x_trans` and `y_trans` to\n  do so\n\n- `{surface_type}_updates`: A list of updates to the parameters that\n  define the surface. I\u2019ll demo how to use this to change a hockey rink\n  in a different vignette, but I\u2019ll call this out here\n\n- `color_updates`: A list that contains updates to the features\u2019 colors\n  on the plot. These are named by what the feature is, using\n  `snake_case` to specify the names. To get the list of color names you\n  can change, try running `cani_color_league_features()` with your\n  desired league\n\n- `rotation`: An angle (in degrees) that you\u2019d like to rotate the plot\n  by, where +is counterclockwise\n\n- `xlims` and `ylims`: Any limits you\u2019d like to put on the plot in the x\n  and y direction. These will overwrite anything set by the\n  `display_range` parameter\n\n- `{surface}_units`: If your data is in units that are different than\n  how the rule book of the league specifies the units (e.g.\u00a0you\u2019ve got\n  NHL data in inches, but the rule book describes the rink in feet),\n  change this parameter to match the units you\u2019ve got your data in.\n  You\u2019re welcome to change the units of the data as well, but this is\n  provided for convenience\n\n## TV View and Display Ranges\n\n### TV View\n\nAll of the `geom_{sport}()` functions, by default, will draw the surface\nin what can be considered \u201cTV view\u201d, or the way that the surface would\ntypically be displayed on a television broadcast. This typically means\nthe action moves from left to right across the screen (a basketball game\nthat has the baskets on the left and right end of the court). As\nmentioned above, it is possible to change this to be in any orientation\nthrough the `rotation` parameter to each `geom_{sport}()` function.\n\nThere are a few exceptions to this:\n\n- `geom_baseball()` is displayed from the high-home view by default, as\n  baseball coordinates typically have the `+y` axis extending from the\n  back tip of home plate towards center field\n\n- `geom_tennis()` is displayed with the court diagrammed from the\n  perspective of the chair umpire\n\n### Display Ranges\n\nRelated to the idea of custom displays of the plot is the concept of the\n`display_range` parameter in the `geom_{sport}()` function. This is\nunique to each sport, but globally supported across the package. This\nparameter allows the specification of a designated region of the surface\nto display. As an example, if you\u2019re trying to limit the analysis of NFL\ndata to being inside of the red zone, you may want to do something\nsimilar to the following:\n\n``` r\n# Display only the red zone of the football field\ngeom_football(\"nfl\", display_range = \"red zone\")\n```\n\n<img src=\"man/figures/README-readme-display-range-demo-1.png\" width=\"100%\" />\n\nAnother use case would be to make the data you\u2019re viewing easier to see.\nSay you wanted to look at curling data, but only cared about stone\npositions in the house (and not the path as to how the stones got\nthere). You might do this:\n\n``` r\n# Display only the house on a curling sheet\ngeom_curling(\"wcf\", display_range = \"house\")\n```\n\n<img src=\"man/figures/README-readme-display-range-curling-demo-1.png\" width=\"100%\" />\n\n## Plot Units\n\nEach plot function has a standardized unit of measure in which the plot\nis created, and is standardized by the primary units specified in their\nrespective rule books. They are as follows (and any explanation is in\nparentheses):\n\n|   Sport    |              League              | Primary Plotting Unit |\n|:----------:|:--------------------------------:|:---------------------:|\n|  Baseball  |          Little League           |         `ft`          |\n|  Baseball  |               MiLB               |         `ft`          |\n|  Baseball  |               MLB                |         `ft`          |\n|  Baseball  |               NCAA               |         `ft`          |\n|  Baseball  |        NFHS (High School)        |         `ft`          |\n|  Baseball  |               Pony               |         `ft`          |\n| Basketball |               FIBA               |          `m`          |\n| Basketball |               NBA                |         `ft`          |\n| Basketball |           NBA G League           |         `ft`          |\n| Basketball |               NCAA               |         `ft`          |\n| Basketball |               NFHS               |         `ft`          |\n| Basketball |               WNBA               |         `ft`          |\n|  Curling   |  WCF (World Curling Federation)  |         `ft`          |\n|  Football  |               CFL                |         `yd`          |\n|  Football  |               NCAA               |         `yd`          |\n|  Football  | NFHS11 (High School, 11 players) |         `yd`          |\n|  Football  |  NFHS6 (High School, 6 players)  |         `yd`          |\n|  Football  |  NFHS8 (High School, 8 players)  |         `yd`          |\n|  Football  |  NFHS9 (High School, 9 players)  |         `yd`          |\n|  Football  |               NFL                |         `yd`          |\n|   Hockey   |               AHL                |         `ft`          |\n|   Hockey   |               ECHL               |         `ft`          |\n|   Hockey   |               IIHF               |          `m`          |\n|   Hockey   |               NCAA               |         `ft`          |\n|   Hockey   |               NHL                |         `ft`          |\n|   Hockey   |               NWHL               |         `ft`          |\n|   Hockey   |               OHL                |         `ft`          |\n|   Hockey   |               PHF                |         `ft`          |\n|   Hockey   |              QMJHL               |         `ft`          |\n|   Hockey   |               USHL               |         `ft`          |\n|  Lacrosse  |              NCAAM               |         `yd`          |\n|  Lacrosse  |              NCAAW               |          `m`          |\n|  Lacrosse  |               NLL                |         `ft`          |\n|  Lacrosse  |               PLL                |         `yd`          |\n|  Lacrosse  |            USA Men\u2019s             |         `yd`          |\n|  Lacrosse  |           USA Women\u2019s            |          `m`          |\n|  Lacrosse  |          World Lacrosse          |         `ft`          |\n|   Soccer   |               EPL                |          `m`          |\n|   Soccer   |               FIFA               |          `m`          |\n|   Soccer   |               MLS                |         `yd`          |\n|   Soccer   |               NCAA               |         `yd`          |\n|   Soccer   |               NWSL               |         `yd`          |\n|   Tennis   |               ATP                |         `ft`          |\n|   Tennis   |               ITA                |         `ft`          |\n|   Tennis   |               ITF                |         `ft`          |\n|   Tennis   |               NCAA               |         `ft`          |\n|   Tennis   |               USTA               |         `ft`          |\n|   Tennis   |               WTA                |         `ft`          |\n| Volleyball |               FIVB               |          `m`          |\n| Volleyball |               NCAA               |          `m`          |\n| Volleyball |          USA Volleyball          |          `m`          |\n\nHowever, since the data that is supplied may come in various units of\nmeasure, the plots are able to be generated in the data\u2019s units. This is\ndone via the `unit` argument in `geom_{sport}()`. The features\nthemselves will look visually identical, but the underlying coordinate\ngrid will change.\n\nAdditionally, the `convert_units()` function can be called on a data\nframe to convert from the data\u2019s arguments to the plot\u2019s. For example,\nif soccer data is given in yards, but is desirable to be plotted in\nmeters, calling\n`convert_units(tracking_data, 'yd', 'm', conversion_columns = c('x', 'y'))`\nwill convert the x and y coordinates from yards to meters.\n\nAs mentioned [above](#plotting-functions), the `geom_{sport}()` family\nof functions allow for rotations of surfaces via the `rotation`\nargument. To make this easy, `sportyR` also allows for the rotation of\ndata frames\u2019 coordinates ***so long as they contain an*** `x` ***and***\n`y` ***column*** via the `rotate_coords()` function. Reflection is also\npossible through `reflect()`.\n\n## Surface Examples\n\nMost playing surfaces are standard in size, so they can be rendered via\na call to the proper `geom_{sport}()` function like so:\n\n``` r\n# Draw a basic MLB infield plot\ngeom_baseball(\"mlb\", display_range = \"infield\")\n```\n\n<img src=\"man/figures/README-readme-mlb-example-1.png\" width=\"100%\" />\n\n``` r\n# Create a 100m by 75m FIFA pitch\ngeom_soccer(\n  \"fifa\",\n  pitch_updates = list(\n    pitch_length = 100,\n    pitch_width = 75\n  )\n)\n```\n\n<img src=\"man/figures/README-readme-fifa-example-1.png\" width=\"100%\" />\n\nIt\u2019s also possible to plot partial surfaces and rotated surfaces:\n\n``` r\n# Draw half of a rotated NBA court\ngeom_basketball(\"nba\", display_range = \"offense\", rotation = 270)\n```\n\n<img src=\"man/figures/README-readme-nhl-example-1.png\" width=\"100%\" />\n\n## License\n\nThis package is released under the [GPL 3.0\nLicense](https://github.com/sportsdataverse/sportyR/blob/master/LICENSE.md).\n\n## Contributions\n\n### League Office\n\nThe package maintainers and functional engineers\n\n- [Ross Drucker](https://github.com/rossdrucker) - `sportyR`\n  Commissioner\n\n### General Managers\n\nContribute by adding a new sport and become its general manager. Current\ngeneral managers (and their sports) are:\n\n- [Ross Drucker](https://github.com/rossdrucker) - Baseball\n- [Ross Drucker](https://github.com/rossdrucker) - Basketball\n- [Ross Drucker](https://github.com/rossdrucker) - Curling\n- [Ross Drucker](https://github.com/rossdrucker) - Football\n- [Ross Drucker](https://github.com/rossdrucker) - Hockey\n- [Ross Drucker](https://github.com/rossdrucker) - Soccer\n- [Ross Drucker](https://github.com/rossdrucker) - Tennis\n- [Ross Drucker](https://github.com/rossdrucker) - Volleyball\n\n### Coaching Staffs\n\nNotice something for a sport that already exists, but isn\u2019t quite right?\nJoin that sport\u2019s coaching staff!\n\n### Scout Team\n\nBy regularly reporting issues, making very slight modifications, fixing\ntypos, or just helping others navigate their own issues, you\u2019re able to\njoin the Scout Team!\n\n### Acknowledgements\n\nMuch of the underling code structure in `sportyR`, beginning with\n`v2.0.0`, was influenced by [The\nBucketless](https://github.com/the-bucketless)\u2019s work on the\n[hockey_rink](https://github.com/the-bucketless/hockey_rink) package for\nPython.\n\n### `sportyR`tist\n\nThe `sportyR` logo was created by Lindsey Kelso. Check her out on\n[Instagram](http://Instagram.com/kelsokreationsbylindsey) or her [online\nshop](http://kelsokreationsbylindsey.bigcartel.com)!\n"
    },
    {
        "repo": "/abusufyanvu/6S191_MIT_DeepLearning",
        "language": "Jupyter Notebook",
        "readme_contents": "Summary\nMIT's introductory course on deep learning methods with applications to computer vision, natural language processing, biology, and more! Students will gain foundational knowledge of deep learning algorithms and get practical experience in building neural networks in TensorFlow. \n\n\nPrerequisites \nWe expect basic knowledge of calculus (e.g., taking derivatives), linear algebra (e.g., matrix multiplication), and probability (e.g., Bayes theorem) -- we'll try to explain everything else along the way! Experience in Python is helpful but not necessary. This class is taught during MIT's IAP term by current MIT PhD researchers. Listeners are welcome!\n\n\nThis repository contains all of the code and software labs for MIT 6.S191: Introduction to Deep Learning! All lecture slides and videos are available on the course website. http://introtodeeplearning.com/\n\nOpening the labs in Google Colaboratory:\nThe 2021 6.S191 labs will be run in Google's Colaboratory, a Jupyter notebook environment that runs entirely in the cloud, you don't need to download anything. To run these labs, you must have a Google account.\n\nOn this Github repo, navigate to the lab folder you want to run (lab1, lab2, lab3) and open the appropriate python notebook (*.ipynb). Click the \"Run in Colab\" link on the top of the lab. That's it!\n\nRunning the labs\nNow, to run the labs, open the Jupyter notebook on Colab. Navigate to the \"Runtime\" tab --> \"Change runtime type\". In the pop-up window, under \"Runtime type\" select \"Python 3\", and under \"Hardware accelerator\" select \"GPU\". Go through the notebooks and fill in the #TODO cells to get the code to compile for yourself!\n\nMIT Deep Learning package\nYou might notice that inside the labs we install the mitdeeplearning python package from the Python Package repository:\n\npip install mitdeeplearning\n\nThis package contains convienence functions that we use throughout the course and can be imported like any other Python package.\n\n>>> import mitdeeplearning as mdl\n\nWe do this for you in each of the labs, but the package is also open source under the same license so you can also use it outside the class.\n"
    },
    {
        "repo": "/myusuf3/courtside",
        "language": "JavaScript",
        "readme_contents": "==================================================\nCourtside: pick up sports app.\n==================================================\n\nMake game plans and let all your friends know about it.\n\n============\nInstallation\n============\n\n.. image::  http://i.imgur.com/Igf1i.png\n\n- To install requirements::\n\n    $ pip install -r requirements.txt\n\n- You will need to create a keys file in keys module for the twitter and fb app keys, ones there are old and not used.\n\n.. image:: http://cl.ly/image/0I2B3A1t0h0V/Screen%20Shot%202013-07-14%20at%205.10.25%20PM.png\n\n=============\nContributions\n=============\n\nAll software contributions are welcome and encouraged.\n\n\n========\nTwitter\n========\n\n- Mahdi Yusuf @myusuf3\n- Omar Shammas @omarshammas\n- Serena Ngai @serenangai\n"
    },
    {
        "repo": "/rprokap/pset-9",
        "language": "JavaScript",
        "readme_contents": "chess and stuff\n"
    },
    {
        "repo": "/quotientbot/Quotient-Bot",
        "language": "Python",
        "readme_contents": "![Language](https://img.shields.io/badge/lang-Python%203.8-green)\n![discord.py Version](https://img.shields.io/badge/lib-discord.py%202.0-blue)\n![Db](https://img.shields.io/badge/db-PostgreSQL-blue)\n![Library](https://img.shields.io/badge/orm-Tortoise%20ORM-purple)\n\n<img align=\"right\" src=\"https://cdn.discordapp.com/attachments/782161513825042462/937419510447751249/quotient.png\" alt=\"Logo\" width=\"25%\">\n\n## Quotient - The Ultimate Discord Bot for Esports Management\n\n\nQuotient is the ultimate open-source Discord bot designed specifically for esports servers. Our goal is to empower esports communities by simplifying and streamlining the organization and management of scrims, tournaments, and other events.\n> The source here is only for educational purposes.\n\n## Features\nQuotient is a multi-functional bot that provides a comprehensive range of features, including:\n```\n- Automated Scrims Management\n- Automated Tournaments Management\n- Easy to use Web-Dashboard\n- Community engagement tools\n- and much much more...\n```\n## Installation\nTo install Quotient, simply add the bot to your Discord server using the following link: [`Add Quotient to your server`](https://discord.com/oauth2/authorize?client_id=746348747918934096&scope=applications.commands%20bot&permissions=536737213566). <br>\nWe would rather prefer you not running a direct cloned instance of Quotient. It would be a ton better to just Invite the running instance.\n\nIf you decide to edit, compile or use this code in any way. Kindly respect the [`LICENSE`](LICENSE).\n\n## How do I contribute?\n\nContributions are Welcome:) kindly open an issue first for discussion.\nIt's also a good option to join the [`Support Server`](https://discord.gg/aBM5xz6) \n\n## Contact Us\nIf you have any questions or feedback, please feel free to reach out to us on our [`Support Server`](https://discord.gg/aBM5xz6) or create an issue on this repository. Thank you for choosing Quotient!\n\n## License\nThis project is licensed under the MPL-2.0 license - see the [LICENSE](LICENSE) file for details.\n___\n### Contributors \ud83d\udc65\n<a href=\"https://github.com/quotientbot/Quotient-Bot/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=quotientbot/Quotient-Bot\" />\n</a>\n\n\n"
    },
    {
        "repo": "/LandonPatmore/yahoo-fantasy-bot",
        "language": "Kotlin",
        "readme_contents": "# **THIS REPO HAS BEEN ARCHIVED AND IS NOT BEING ACTIVELY MAINTAINED ANYMORE. IT WAS A FUN 4 YEARS, BUT I DON'T USE YAHOO FANTASY ANYMORE AND SADLY DON'T HAVE THE TIME TO SUPPORT IT. THANKS EVERYONE FOR USING IT!**\n\n[![Deploy](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy)\n\n**Note: Frontend does not work in safari (v3.0.0)**\n\n### Feel free to contribute!\n\n#### Current Roadmap\n\n- [x] Kotlin (because why not :?)\n- [x] Reactive X\n- [ ] Docker Support\n- [x] More in depth messages\n- [ ] Respond to chat commands from various messaging services\n- [ ] Clean up code\n\n**Auto-deploys do not happen automatically. You will need to come back and click the \"Deploy\" button again to get the latest bot. It will reset everything. Just follow all the steps again and you will be good!**\n\n# Yahoo Fantasy Bot\nBot that alerts GroupMe, Slack, and Discord users about various things happening in their Yahoo Fantasy Football League.\n## What it does:\n\n>**League Transaction Alerts**\n>* ADD\n>* DROP\n>* ADD/DROP\n>* TRADE\n>* COMMISH CHANGES\n\n## What it can do:\n\n- You can customize all alerts and send them whenever and however many times you want!\n\n![](https://i.imgur.com/1Ol63Al.png)\n \n## Follow these steps EXACTLY!\n1. Click the `Deploy to Heroku` button at the top. It will auto-deploy the application to Heroku.\n2. Name the application whatever you would like.\n3. Follow the below section.\n\n---\n\n### (REQUIRED) Setting up Yahoo API\nYou will need a Yahoo Access Token, Client ID, and Client Secret for this bot to work.\n\n1. Go to https://developer.yahoo.com/apps/\n2. Click \"Create an App\" button\n\n![](https://imgur.com/VDgZ1Ze.png)\n\n3. Fill out required information.\n * Name the application whatever you would like\n * Click \"Installed Application\"\n * The Redirect URI will be https://\\<the name of your application\\>.herokuapp.com/auth\n * Click \"Fantasy Sports\" and then \"Read\"\n * Click \"Create App\"\n \n![](https://imgur.com/VqctUfM.png)\n\n4. You will see your: Yahoo Client ID and Client Secret. Save these for later.\n\n![](https://imgur.com/NbUwOmD.png)\n\n5. To get your league ID: (2 Ways)\n\n **On the website**\n * Go to Yahoo Fantasy Football and click your league\n * Go to settings page\n * At the top, you will see \"League ID\", save for later\n \n **In the app**\n * Open the app\n * Click \"League\" tab\n * Click \"Settings\" at the top\n * At the top, you will see \"League ID#\", save for later\n\n---\n\n5. **The following sections are all optional, but at least one of them is needed. All of them can be used as well!**\n\n(The following sections were taken from [dtcarls/ff_bot](https://github.com/dtcarls/ff_bot) as the steps are the exact same. They are tweaked a little bit.)\n\n--- \n\n### (Optional) GroupMe Setup\n<details>\n <summary>Click to expand</summary>\n <p>\n Go to www.groupme.com and sign up or login\n \n If you don't have one for your league already, create a new \"Group Chat\"\n \n ![](https://i.imgur.com/32ioDoZ.png)\n \n Next we will setup the bot for GroupMe\n \n Go to https://dev.groupme.com/session/new and login\n \n Click \"Create Bot\"\n \n ![](https://i.imgur.com/TI1bpwE.png)\n \n Create your bot. GroupMe does a good job explaining what each thing is.\n \n ![](https://i.imgur.com/DQUcuuI.png)\n \n After you have created your bot you will see something similar to this. Click \"Edit\"\n \n ![](https://i.imgur.com/Z9vwKKt.png)\n \n This page is important as you will need the \"Bot ID\" on this page.You can also send a test message with the text box to be sure it is connected to your chat room.\n Side note: If you use the bot id depicted in the page you will spam an empty chat room so not worth the effort\n \n ![](https://i.imgur.com/k65EZFJ.png)\n </p>\n</details>\n--- \n\n### (Optional) Slack setup\n<details>\n <summary>Click to expand</summary>\n <p>\n Go to https://slack.com/signin and sign in to the workspace the bot will be in\n \n If you don't have one for your league already, create a new League Channel\n \n Next we will setup the bot for Slack\n \n Go to https://api.slack.com/apps/new\n \n Name the app, and choose the intended workspace from the dropdown.\n \n Select the Incoming Webhooks section on the side.\n \n ![](https://i.imgur.com/ziRQCVP.png)\n \n Change the toggle from Off to On.\n \n Select Add New Webhook to Workspace\n \n ![](https://i.imgur.com/tJRRrfz.png)\n \n In the Post to dropdown, select the channel you want to send messages to, then\n select Authorize.\n \n This page is important as you will need the \"Webhook URL\" on this page.\n \n ![](https://i.imgur.com/mmzhDS0.png)\n </p>\n</details>\n--- \n\n### (Optional) Discord setup\n<details>\n <summary>Click to expand</summary>\n <p>\n Log into or create a discord account\n \n Go to or create a discord server to receive messages in\n \n Open the server settings\n \n ![](https://i.imgur.com/bDk2ttJ.png)\n \n Go to Webhooks\n \n ![](https://i.imgur.com/mfFHGbT.png)\n \n Create a webhook, give it a name and pick which channel to receive messages in\n \n ![](https://i.imgur.com/NAJLv6D.png)\n \n Save the \"Webhook URL\" on this page\n \n ![](https://i.imgur.com/U4MKZSY.png)\n </p>\n</details>\n--- \n\n6. Follow the below section.\n\n\n### Heroku Setup\n\n1. Go to your [dashboard](https://dashboard.heroku.com/apps). Now you will need to setup your environment variables so that it works for your league. Click Settings at your dashboard. Then click \"Reveal Config Vars\" button and you will see something like this.\n\n![](https://imgur.com/8k1tZPs.png)\n\n2. Fill out all the variables (You can have any combination of messaging services (0..n).)\n3. Click \"Deploy App\". This will automatically configure the dynos and run all required scripts to create the bot. (this will take a bit)\n4. Click \"Overview\"\n5. Click \"Configure Dynos\" and turn on the \"web\" and \"bot\" dyno\n6. Click \"Open App\" at the top right\n7. Follow the setup\n8. Once you are authorized you can add all types of alerts for your league!\n9. IMPORTANT: Once done adding alerts, Click \"Configure Dynos\" and turn OFF the \"web\" dyno (failing to do this will put your bot to sleep because of heroku policy, thus your bot will not function.)\n\n### You are all set! Enjoy the bot!\n\n## License\n```\nMIT License\n\nCopyright (c) 2018 Landon Patmore\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n```\n"
    },
    {
        "repo": "/avijit9/awesome-computer-vision-in-sports",
        "language": null,
        "readme_contents": "[![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n# awesome-computer-vision-in-sports\n\n## Papers by the year of publications\n\n### 2022\n\n- SoccerNet 2022 Challenges Results, ACM MMSports'22 [[Paper]](https://arxiv.org/abs/2210.02365)\n- DeepSportradar-v1: Computer Vision Dataset for Sports Understanding with High Quality Annotations, ACM MMSports'22 [[Paper]](https://arxiv.org/abs/2208.08190)\n\n### 2021\n\n- LoL-V2T: Large-Scale Esports Video Description Dataset, CVPRW'21 [[Paper]](https://openaccess.thecvf.com/content/CVPR2021W/CVSports/papers/Tanaka_LoL-V2T_Large-Scale_Esports_Video_Description_Dataset_CVPRW_2021_paper.pdf)\n- Contrastive Learning for Sports Video: Unsupervised Player Classification, CVPRW'21  [[Paper]](https://openaccess.thecvf.com/content/CVPR2021W/CVSports/papers/Koshkina_Contrastive_Learning_for_Sports_Video_Unsupervised_Player_Classification_CVPRW_2021_paper.pdf)\n- Automated Tackle Injury Risk Assessment in Contact-Based Sports - A Rugby Union Example, CVPRW'21  [[Paper]](https://openaccess.thecvf.com/content/CVPR2021W/CVSports/papers/Martin_Automated_Tackle_Injury_Risk_Assessment_in_Contact-Based_Sports_-_A_CVPRW_2021_paper.pdf)\n- Toward Improving the Visual Characterization of Sport Activities With Abstracted Scene Graphs, CVPRW'21 [[Paper]](https://openaccess.thecvf.com/content/CVPR2021W/CVSports/papers/Rahimi_Toward_Improving_the_Visual_Characterization_of_Sport_Activities_With_Abstracted_CVPRW_2021_paper.pdf)\n- Detecting and Matching Related Objects With One Proposal Multiple Predictions, CVPRW'21 [[Paper]](https://openaccess.thecvf.com/content/CVPR2021W/CVSports/papers/Liu_Detecting_and_Matching_Related_Objects_With_One_Proposal_Multiple_Predictions_CVPRW_2021_paper.pdf)\n- SoccerNet-v2: A Dataset and Benchmarks for Holistic Understanding of Broadcast Soccer Videos, CVPRW'21 [[Paper]](https://openaccess.thecvf.com/content/CVPR2021W/CVSports/papers/Deliege_SoccerNet-v2_A_Dataset_and_Benchmarks_for_Holistic_Understanding_of_Broadcast_CVPRW_2021_paper.pdf)\n- Table Tennis Stroke Recognition Using Two-Dimensional Human Pose Estimation, CVPRW'21 [[Paper]](https://openaccess.thecvf.com/content/CVPR2021W/CVSports/papers/Kulkarni_Table_Tennis_Stroke_Recognition_Using_Two-Dimensional_Human_Pose_Estimation_CVPRW_2021_paper.pdf)\n- Puck Localization and Multi-Task Event Recognition in Broadcast Hockey Videos, CVPRW'21 [[Paper]](https://openaccess.thecvf.com/content/CVPR2021W/CVSports/papers/Giancola_Temporally-Aware_Feature_Pooling_for_Action_Spotting_in_Soccer_Broadcasts_CVPRW_2021_paper.pdf)\n- Automatic Play Segmentation of Hockey Videos, CVPRW'21 [[Paper]](https://openaccess.thecvf.com/content/CVPR2021W/CVSports/papers/Pidaparthy_Automatic_Play_Segmentation_of_Hockey_Videos_CVPRW_2021_paper.pdf)\n- DeepDarts: Modeling Keypoints as Objects for Automatic Scorekeeping in Darts Using a Single Camera, CVPRW'21 [[Paper]](https://openaccess.thecvf.com/content/CVPR2021W/CVSports/papers/McNally_DeepDarts_Modeling_Keypoints_as_Objects_for_Automatic_Scorekeeping_in_Darts_CVPRW_2021_paper.pdf)\n- Camera Calibration and Player Localization in SoccerNet-v2 and Investigation of Their Representations for Action Spotting, CVPRW'21 [[Paper]](https://openaccess.thecvf.com/content/CVPR2021W/CVSports/papers/Cioppa_Camera_Calibration_and_Player_Localization_in_SoccerNet-v2_and_Investigation_of_CVPRW_2021_paper.pdf)\n\n### 2020\n\n- Actor-Transformers for Group Activity Recognition, CVPR'20 [[Paper]](http://isis-data.science.uva.nl/cgmsnoek/pub/gavrilyuk-transformers-cvpr2020.pdf)\n\n- Progressive Relation Learning for Group Activity Recognition, CVPR'20 [[Paper]](https://arxiv.org/pdf/1908.02948.pdf)\n\n- Group Activity Detection from Trajectory and Video Data in Soccer, CVPRW'20 [[Paper]](https://openaccess.thecvf.com/content_CVPRW_2020/papers/w53/Sanford_Group_Activity_Detection_From_Trajectory_and_Video_Data_in_Soccer_CVPRW_2020_paper.pdf)\n\n- FALCONS: FAst Learner-grader for CONtorted poses in Sports, CVPRW'20 [[Paper]](https://openaccess.thecvf.com/content_CVPRW_2020/papers/w53/Nekoui_FALCONS_FAst_Learner-Grader_for_CONtorted_Poses_in_Sports_CVPRW_2020_paper.pdf)\n\n- As Seen on TV: Automatic Basketball Video Production using Gaussian-based Actionness and Game States Recognition, CVPRW'20 [[Paper]](https://openaccess.thecvf.com/content_CVPRW_2020/papers/w53/Quiroga_As_Seen_on_TV_Automatic_Basketball_Video_Production_Using_Gaussian-Based_CVPRW_2020_paper.pdf)\n\n- Decoupling Video and Human Motion: Towards Practical Event Detection in Athlete Recordings, CVPRW'20 [[Paper]](https://openaccess.thecvf.com/content_CVPRW_2020/papers/w53/Einfalt_Decoupling_Video_and_Human_Motion_Towards_Practical_Event_Detection_in_CVPRW_2020_paper.pdf)\n\n- Utilizing Mask R-CNN for Waterline Detection in Canoe Sprint Video Analysis, CVPRW'20 [[Paper]](https://openaccess.thecvf.com/content_CVPRW_2020/papers/w53/von_Braun_Utilizing_Mask_R-CNN_for_Waterline_Detection_in_Canoe_Sprint_Video_CVPRW_2020_paper.pdf)\n\n- TTNet: Real-time temporal and spatial video analysis of table tennis, CVPRW'20 [[Paper]](https://arxiv.org/pdf/2004.09927.pdf)\n\n### 2019\n\n- Learning Actor Relation Graphs for Group Activity Recognition, CVPR'19 [[Paper]](https://openaccess.thecvf.com/content_CVPR_2019/papers/Wu_Learning_Actor_Relation_Graphs_for_Group_Activity_Recognition_CVPR_2019_paper.pdf)\n\n\n### 2018\n\n- Soccer on Your Tabletop, CVPR'18 [[Paper]](https://grail.cs.washington.edu/projects/soccer/soccer_on_your_tabletop.pdf)\n\n- Egocentric Basketball Motion Planning From a Single First-Person Image, CVPR'18 [[Paper]](https://arxiv.org/pdf/1803.01413)\n\n-  Towards Structured Analysis of Broadcast Badminton Videos, WACV'18 [[Paper]](http://cvit.iiit.ac.in/images/ConferencePapers/2018/badminton_analytics.pdf)\n\n- Fine-grained Activity Recognition in Baseball Videos, CVPRW'18 [[Paper]](https://arxiv.org/pdf/1804.03247.pdf)\n\n- Where Will They Go? Predicting Fine-Grained Adversarial Multi-Agent Motion using Conditional Variational Autoencoders, ECCV'18 [[Paper]](https://openaccess.thecvf.com/content_ECCV_2018/papers/Panna_Felsen_Where_Will_They_ECCV_2018_paper.pdf)\n\n- Fine-grained Video Captioning for Sports Narrative, ECCV'18 [[Paper]](https://openaccess.thecvf.com/content_cvpr_2018/papers/Yu_Fine-Grained_Video_Captioning_CVPR_2018_paper.pdf)\n\n\n### 2017\n\n- What will Happen Next? Forecasting Player Moves in Sports Videos, ICCV'17 [[Paper]](http://openaccess.thecvf.com/content_ICCV_2017/papers/Felsen_What_Will_Happen_ICCV_2017_paper.pdf)\n\n- Not all passes are created equal: Objectively measuring the risk and reward of passes in soccer from tracking data, SIGKDD'17 [[Paper]](https://dl.acm.org/citation.cfm?id=3098051)\n\n- SmartTennisTV: An automatic indexing system for tennis, NCVPRIPG'17 [[Paper]](https://researchweb.iiit.ac.in/~anurag.ghosh/static/smarttennistv-automatic-indexing.pdf)\n\n- Social Scene Understanding: End-to-End Multi-Person Action Localization and Collective Activity Recognition, CVPR'17 [[Paper]](http://openaccess.thecvf.com/content_cvpr_2017/papers/Bagautdinov_Social_Scene_Understanding_CVPR_2017_paper.pdf)\n\n- Coordinated Multi-Agent Imitation Learning, ICML'17 [[Paper]](http://proceedings.mlr.press/v70/le17a/le17a.pdf)\n\n### 2016\n\n- Chalkboarding: A new spatiotemporal query paradigm for sports play retrieval, ACM IUI'16 [[Paper]](https://dl.acm.org/citation.cfm?id=2856772)\n\n- What players do with the ball: a physically constrained interaction modeling, CVPR'16 [[Paper]](https://www.cv-foundation.org/openaccess/content_cvpr_2016/papers/Maksai_What_Players_Do_CVPR_2016_paper.pdf)\n\n- Generating long-term trajectories using deep hierarchical networks, NIPS'16 [[Paper]](http://papers.nips.cc/paper/6520-generating-long-term-trajectories-using-deep-hierarchical-networks.pdf)\n\n- Detecting Events and Key Actors in Multi-Person Videos, CVPR'16 [[Paper]](http://openaccess.thecvf.com/content_cvpr_2016/papers/Ramanathan_Detecting_Events_and_CVPR_2016_paper.pdf)\n\n### 2015\n\n- Mimicking human camera operators, WACV'15 [[Paper]](https://pdfs.semanticscholar.org/e73b/4b7c48a4aeca81ec132e9e147dc19d103ded.pdf)\n\n- Quality vs Quantity\u201d- Improved Shot Prediction in Soccer using Strategic Features from Spatiotemporal Data-Paper, MIT Sloan Sports Analytics Conference'15 [[Paper]](https://s3-us-west-1.amazonaws.com/disneyresearch/wp-content/uploads/20150308192147/Quality-vs-Quantity%E2%80%9D-Improved-Shot-Prediction-in-Soccer-using-Strategic-Features-from-Spatiotemporal-Data-Paper.pdf)\n\n### 2014\n\n- How to get an open shot: Analyzing team movement in basketball using tracking data, MIT SLOAN'14 [[Paper]](https://s3-us-west-1.amazonaws.com/disneyresearch/wp-content/uploads/20141125014436/How-to-Get-an-Open-Shot-Analyzing-Team-Movement-in-Basketball-using-Tracking-Data-Paper.pdf)\n\n### 2013\n\n- Take your eyes off the ball: Improving ball-tracking by focusing on team play, CVIU'13 [[Paper]](https://infoscience.epfl.ch/record/185107/files/top_infosci_1.pdf)\n\n- Detecting and tracking sports players with random forests and context-conditioned motion models, CVPR'13 [[Paper]](https://www.cv-foundation.org/openaccess/content_cvpr_2013/papers/Liu_Tracking_Sports_Players_2013_CVPR_paper.pdf)\n\n- Representing and discovering adversarial team behaviors using player roles, CVPR'13 [[Paper]](http://openaccess.thecvf.com/content_cvpr_2013/papers/Lucey_Representing_and_Discovering_2013_CVPR_paper.pdf)\n\n- Recognising team activities from noisy data, CVPRW'13 [[Paper]](https://www.cv-foundation.org/openaccess/content_cvpr_workshops_2013/W19/papers/Bialkowski_Recognising_Team_Activities_2013_CVPR_paper.pdf)\n\n### 2012\n\n- Point-less calibration: Camera parameters from gradient-based alignment to edge images, WACV'12 [[Paper]](http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6163012)\n\n\n## Datasets Available\n\n[1] Volleyball Dataset [[Link]](https://github.com/mostafa-saad/deep-activity-rec)\n\n"
    },
    {
        "repo": "/MCG-NJU/SportsMOT",
        "language": "Python",
        "readme_contents": "# SportsMOT\n\nThe official repo of the ICCV 2023 paper [**SportsMOT: A Large Multi-Object Tracking Dataset in Multiple Sports Scenes**](https://arxiv.org/abs/2304.05170)\n\n![SportsMOT](https://user-images.githubusercontent.com/49837632/166649078-06cf2bbd-0bc7-4872-bf10-670ef7961e15.gif)\n\n\n\n:basketball::volleyball::soccer:\n## News\n\n- \ud83d\udd25 Code for our [**MixSort**](https://github.com/MCG-NJU/MixSort) has been released.\n- \ud83d\udd25 Our paper **SportsMOT** is accepted to ICCV2023. Code for the proposed method **MixSort** will be released in a few days.\n- SportsMOT test set has been made public on [**Codalab**](https://codalab.lisn.upsaclay.fr/competitions/12424#participate). Welcome!\n- [Notifications and reminders](./competition.md) for DeeperAction@ECCV-2022 competition.[***Finished***]\n- SportsMOT is used for [DeeperAction@ECCV-2022](https://deeperaction.github.io/tracks/sportsmot.html).[***Finished***]\n\n<img style=\"width:40%\" src=\"./imgs/deeperaction_logo.png\"/>\n\n- SportsMOT has been shared to community via [Paperwithcode](https://paperswithcode.com/dataset/sportsmot)\n\n\n## Overview\n\n### Demos\n\n[![Jigsaw demo](http://img.youtube.com/vi/2wbjsyg5zbI/0.jpg)](http://www.youtube.com/watch?v=2wbjsyg5zbI)\n\n\ud83d\udcf9 Jigsaw demo\n\n[![Basketball Demo](http://img.youtube.com/vi/C6QLjN7oVwA/0.jpg)](http://www.youtube.com/watch?v=C6QLjN7oVwA)\n\n\ud83d\udcf9 Basketball Demo(NBA)\n\n[![Volleyball Demo](http://img.youtube.com/vi/GxP0F2yhQhU/0.jpg)](http://www.youtube.com/watch?v=GxP0F2yhQhU)\n\n\ud83d\udcf9 Volleyball Demo(London 2012)\n\n[![Football Demo](http://img.youtube.com/vi/dlRZDiSTdyU/0.jpg)](http://www.youtube.com/watch?v=dlRZDiSTdyU)\n\n\ud83d\udcf9 Football Demo(FA Cup)\n\n### Data Collection\n\n\n**Diverse Sources**\n\nWe provide 240 sports video clips of 3 categories (i.e., basketball, football and volleyball), where are collected from Olymplic Games, NCAA Championship, and NBA on YouTube. Only the search results with **720P** resolution, **25 FPS**, and official recording are downloaded. All of the selected videos are cut into clips of **average 485 frames** manually, in which there is no shot change.\n\n<!-- <details>\n<summary>Average Frames Number</summary>\nBasketball: 422\nVolleyball: 360\nFootball: 673\n</details> -->\n\n**Diverse Scenes**\n\nAs for the diversity of video context, football games provide outdoor scenes and the rest results provide indoor scenes. Furthermore, the views of the playing courts do vary, which include common side view of crowded audience like in NBA, views from the serve zone in volleyball games, and aerial view in football games. Diverse scenes in our dataset will encourage the algorithms to generalize to different sports tracking settings\n### Basic Statstics\n\n| Category(avg.) | #frames | #tracks | track gap len | track length | #bboxes per frame (density) |\n|----------------|---------|---------|---------------|--------------|-----------------------------|\n| Basketball     | 845.4   | 10      | 68.7          | 767.9        | 9.1                         |\n| Volleyball     | 360.4   | 12      | 38.2          | 335.9        | 11.2                        |\n| Football       | 673.9   | 20.5    | 116.1         | 422.1        | 12.8                        |\n\n<p style = \"text-align:center;color:gray;font-size:0.7em;text-indent:0\">basic statistics of videos of 3 categories.</p>\n\n<details>\n<summary>Explanation for the statistics above :mag:</summary>\n\n- track: number of tracks per video.\n- tracklen: average length/number of frames per video\n- fragmentation: average number of track fragmentation per video.\n- speed: average speed of the players in videos.\n- density: average number of players per frame per video.\n- bboxsize: average size of bounding boxes(pixels).\n- defrate: average `deformationRate`\n\nWe use **deformation rate** to measure the degree of deformation. Here, $w_{min},h_{min}$ refer to the minimum width and height of bounding boxes in a track fragment.\n\n<!-- $$\\text{deformationRate}(\\mathbf{b}_{i}) =  \\frac{w_{max} - w_{i}}{w_{min}} + \\frac{h_{max} - h_{i}}{h_{min}}$$ -->\n\n![](./imgs/)\n\n\n</details>\n\n![Gaussian](./imgs/speed_gaussian.png)\n\n<p style = \"text-align:center;color:gray;font-size:0.7em;text-indent:0\">Distributions(Gaussian PDF) of the fragment speed in 3 sports in SportsMOT.</p> \n\n## Motivation\n\nMulti-object tracking (MOT) is a fundamental task in computer vision, aiming to estimate objects (e.g., pedestrians and vehicles) bounding boxes and identities in video sequences.\n\nPrevailing human-tracking MOT datasets mainly focus on pedestrians in crowded street scenes (e.g., [MOT17](https://motchallenge.net/data/MOT17/)/[20](https://motchallenge.net/data/MOT20/)) or dancers in static scenes ([DanceTrack](https://github.com/DanceTrack/DanceTrack)). \n\nIn spite of the increasing demands for sports analysis, there is a lack of multi-object tracking datasets for a variety of **sports scenes**, where the background is complicated, players possess rapid motion and the camera lens moves fast.\n\nTo this purpose, we propose a large-scale multi-object tracking dataset named SportsMOT, consisting of **240 video** clips from **3 categories** (i.e., basketball, football and volleyball). \n\nThe objective is to only track players on the playground (i.e., except for a number of spectators, referees and coaches) in various sports scenes. We expect SportsMOT to encourage the community to concentrate more on the complicated sports scenes.\n\n## Data Format\n\nData in SportsMOT is organized in the form of [MOT Challenge 17](https://motchallenge.net/).\n\nUnzip the provided .zip file, you will get\n\n- `splits_txt`(video-split mapping)\n  - `basketball.txt`\n  - `volleyball.txt`\n  - `football.txt`\n  - `train.txt`\n    <details><summary>details</summary>\n\n    ```text\n    v_-6Os86HzwCs_c001\n    v_-6Os86HzwCs_c003\n    v_-6Os86HzwCs_c007\n    v_-6Os86HzwCs_c009\n    v_2j7kLB-vEEk_c001\n    v_2j7kLB-vEEk_c002 \n    ``` \n    \n    </details>\n  - `val.txt`\n  - `test.txt`\n- `scripts`\n  - `mot_to_coco.py`\n  - `sportsmot_to_trackeval.py`\n- `dataset`(in MOT challenge format)\n  - `train`\n    - `VIDEO_NAME1`\n      - `gt`\n        <details><summary>details</summary>\n\n        ```text\n        1, 7, 749, 217, 34, 125, 1, 1, 1\n        1, 8, 721, 344, 71, 120, 1, 1, 1\n        1, 9, 847, 352, 50, 151, 1, 1, 1\n        2, 0, 85, 421, 88, 131, 1, 1, 1 \n        ``` \n        \n        </details>\n      - `img1`\n        - `000001.jpg`\n        - `000002.jpg`\n      - `seqinfo.ini`\n        <details><summary>details</summary>\n\n        ```text\n        [Sequence]\n        name=v_-6Os86HzwCs_c001\n        imDir=img1\n        frameRate=25\n        seqLength=825\n        imWidth=1280\n        imHeight=720\n        imExt=.jpg\n        ``` \n        \n        </details>\n  - `val`\n    - the same hierarchy as train\n  - `test`\n    - `VIDEO_NAME1`\n      - `img1`\n        - `000001.jpg`\n        - `000002.jpg`\n      - `seqinfo.ini`\n\nYou can download the example for SportsMOT.\n\n- [OneDrive](https://1drv.ms/u/s!AtjeLq7YnYGRgQRrmqGr4B-k-xsC?e=7PndU8)\n- [Baidu Netdisk](https://pan.baidu.com/s/1gytkTngxoGFlmP9_DBd1xw), password: 4dnw\n\n## Usage\n\n### Download\n\nPlease Sign up in codalab, and participate in our [competition](https://codalab.lisn.upsaclay.fr/competitions/12424#participate). Download links are available in  `Participate`/`Get Data`.\n\n### Format Conversion\n\nRefer to [codes/conversion](./codes/conversion)\n\n### Evaluation Kit\n\nRefer to [codes/evaluation](./codes/evaluation) for out-of-the-box evaluation based on [TrackEval](https://github.com/JonathonLuiten/TrackEval/blob/master/docs/MOTChallenge-Official/Readme.md) and [how to use](https://github.com/MCG-NJU/SportsMOT/tree/main/codes#how-to-eval). :joystick:\n\n## Contact \n\nThis track is provide by [MCG Group @ Nanjing University](http://mcg.nju.edu.cn/en/index.html), Jiangsu, China.\n\n- [Limin Wang](http://wanglimin.github.io/)\n- Yutao Cui\n- Xiaoyu Zhao\n- Chenkai Zeng\n- Yichun Yang     \n\nValuable issues and chat are welcomed.\n\n## Terms\n\nSportsMOT is allowed to be used only if you accept these terms and conditions of our [competition](https://codalab.lisn.upsaclay.fr/competitions/12424#participate).\n\n- You agree to us storing your submission results for evaluation purposes.\n- You agree that if you place in the top-10 at the end of the challenge you will submit your code so that we can verify that you have not cheated.\n- You agree not to distribute the SportsMOT dataset without prior written permission.\n- Each team can have one or more members.\n\n\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc/4.0/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc/4.0/88x31.png\" /></a><br />\n\nSportsMOT is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc/4.0/\">Creative Commons Attribution-NonCommercial 4.0 International License</a>.\n\n## Citation\n\n```\n@article{cui2023sportsmot,\n  title={SportsMOT: A Large Multi-Object Tracking Dataset in Multiple Sports Scenes},\n  author={Cui, Yutao and Zeng, Chenkai and Zhao, Xiaoyu and Yang, Yichun and Wu, Gangshan and Wang, Limin},\n  journal={arXiv preprint arXiv:2304.05170},\n  year={2023}\n}\n```\n"
    },
    {
        "repo": "/alexmonti19/dagnet",
        "language": "Python",
        "readme_contents": "# DAG-Net: Double Attentive Graph Neural Network for Trajectory Forecasting\nThis repository contains the PyTorch code for [ICPR 2020](https://www.micc.unifi.it/icpr2020/) paper:\n\n**<a href=\"https://arxiv.org/abs/2005.12661v2\">DAG-Net: Double Attentive Graph Neural Network for Trajectory Forecasting</a>**  \n*<a href=\"https://github.com/alexmonti19\">Alessio Monti</a>,\n<a href=\"https://aimagelab.ing.unimore.it/imagelab/person.asp?idpersona=110\">Alessia Bertugli</a>,\n<a href=\"https://aimagelab.ing.unimore.it/imagelab/person.asp?idpersona=38\">Simone Calderara</a>,\n<a href=\"https://aimagelab.ing.unimore.it/imagelab/person.asp?idpersona=1\">Rita Cucchiara</a>*  \n\n## Model architecture\nThe model is composed by three main components: the generative model (VRNN) and two graph neural networks.\n\n![dagnet - overview](icpr.png)\n \nThe first graph network operates on agents' goals, expressed as specific areas of the environment where agents \nwill land in the future. The second second graph network operates instead on single agents' hidden states, \nwhich contain past motion behavioural information. The employing of two separate graph neural networks allows to consider \nand share both past and future information while generating agents' future movements.\n\n\n## Prerequisites\n\n* Python >= 3.8\n* PyTorch >= 1.5\n* CUDA 10.0\n\n### Installation\n\n* Clone this repo:\n```\ngit clone https://github.com/alexmonti19/dagnet.git\ncd dagnet\n```\n\n* Create a new virtual environment using Conda or virtualenv. \n```\nconda create --name <envname>\n```\n* Activate the environment and install the requirements:\n```\nconda activate <envname>\npip install -r requirements.txt\n```\n\n\n## Datasets\nOur proposal is general enough to be applied in different scenarios: the model achieves state-of-the-art results in both\nurban environments (*Stanford Drone Dataset*) and sports applications (*STATS SportVU NBA Dataset*).   \n\nFor complete information on where to download and how to preprocess the datasets see the relative \n[datasets/README.md](./datasets/README.md).\n\n## Architectures\nThe repo contains both the final model and the two ablation architectures cited in the paper.\n- *VRNN*: the baseline generative architecture\n- *A-VRNN*: enhanced version of the baseline with a single graph (on agents' hidden states)\n- *DAG-Net*: the complete architecture with two graphs\n\nFor more information on how to train the models see the relative [models/README.md](./models/README.md).\n\n## Pre-trained models\nWe also ship the checkpoints to reproduce the results presented in the paper. \n\n<table>\n    <tbody>\n        <tr>\n            <th>\n            <th align=\"center\" colspan=2 style=\"text-align:center\">Offense BSK</th>\n            <th align=\"center\" colspan=2 style=\"text-align:center\">Defense BSK</th>\n            <th align=\"center\" colspan=2 style=\"text-align:center\">Stanford Drone</th>\n        </tr>\n        <tr>\n            <td align=\"center\"></td>\n            <td align=\"center\" style=\"text-align:center; font-weight:bold\">ADE</td>\n            <td align=\"center\" style=\"text-align:center; font-weight:bold\">FDE</td>\n            <td align=\"center\" style=\"text-align:center; font-weight:bold\">ADE</td>\n            <td align=\"center\" style=\"text-align:center; font-weight:bold\">FDE</td>\n            <td align=\"center\" style=\"text-align:center; font-weight:bold\">ADE</td>\n            <td align=\"center\" style=\"text-align:center; font-weight:bold\">FDE</td>\n        </tr>\n        <tr>\n            <td>VRNN</td>\n            <td style=\"text-align:center\">9,41</td>\n            <td style=\"text-align:center\">15,56</td>\n            <td style=\"text-align:center\">7,16</td>\n            <td style=\"text-align:center\">10,50</td>\n            <td style=\"text-align:center\">0,58</td>\n            <td style=\"text-align:center\">1,17</td>\n        </tr>\n        <tr>\n            <td>A-VRNN</td>\n            <td style=\"text-align:center\">9,48</td>\n            <td style=\"text-align:center\">15,52</td>\n            <td style=\"text-align:center\">7,05</td>\n            <td style=\"text-align:center\">10,34</td>\n            <td style=\"text-align:center\">0,56</td>\n            <td style=\"text-align:center\">1,14</td>\n        </tr>\n        <tr>\n            <td>DAG-Net</td>\n            <td style=\"text-align:center\"><em>8,98</em></td>\n            <td style=\"text-align:center\"><em>14,08</em></td>\n            <td style=\"text-align:center\"><em>6,87</em></td>\n            <td style=\"text-align:center\"><em>9,76</em></td>\n            <td style=\"text-align:center\"><em>0,53</em></td>\n            <td style=\"text-align:center\"><em>1,04</em></td>\n        </tr>\n    </tbody>\n</table>\n\nFor more information on how to test the models and produce the above results, see the relative \n[models/README.md](./models/README.md).\n\n## Cite\nIf you have any questions, please contact [alessio.monti@unimore.it](mailto:alessio.monti@unimore.it) or \n[alessia.bertugli@unimore.it](mailto:alessia.bertugli@unimore.it), or open an issue on this repo. \n\nIf you find this repository useful for your research, please cite the following paper:\n```bibtex\n@proceedings{monti2020dagnet,\n    title={DAG-Net: Double Attentive Graph Neural Network for Trajectory Forecasting},\n    author={Alessio Monti and Alessia Bertugli and Simone Calderara and Rita Cucchiara},\n    booktitle = {25th International Conference on Pattern Recognition (ICPR)},\n    year={2020}\n}\n```\n"
    },
    {
        "repo": "/rogerfitz/tutorials",
        "language": "Jupyter Notebook",
        "readme_contents": "# tutorials\n\n### Setup\n### NEW CHANGES\nGoing forward all new tutorial projects will follow the pattern of subreddit_analysis/ \nwith a readme and specific install steps.  \n  \nFor older projects feel free to create\nan issue if you need help installing and I will fix it sooner. In general I would recommend using [Miniconda](https://docs.conda.io/en/latest/miniconda.html) \nLatest 64 bit for your operating system.\n\n### Install Steps\nWindows:  \n1. Download [Minconda](https://docs.conda.io/en/latest/miniconda.html) -- Select Latest Windows 64 bit\n1. Install and select the option to add Minconda to your system path (it isn't default)\n1. Install [Windows Terminal](https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701?activetab=pivot:overviewtab)\n1. [Optional but recommended] Install [git-bash](https://git-scm.com/downloads)\n1. Open windows terminal and select a shell of your choice, on Windows I use Command Prompt or Git Bash\n1. Test that conda was installed```  conda info  ```\n  should give something like \n  ```\n  active environment : None\n         user config file : C:\\Users\\minim\\.condarc\n   populated config files :\n            conda version : 4.10.1\n      conda-build version : not installed\n           python version : 3.9.1.final.0\n         virtual packages : __cuda=11.3=0\n                            __win=0=0\n                            __archspec=1=x86_64\n         base environment : C:\\Users\\minim\\miniconda3  (writable)\n        conda av data dir : C:\\Users\\minim\\miniconda3\\etc\\conda\n    conda av metadata url : https://repo.anaconda.com/pkgs/main\n             channel URLs : https://repo.anaconda.com/pkgs/main/win-64\n                            https://repo.anaconda.com/pkgs/main/noarch\n                            https://repo.anaconda.com/pkgs/r/win-64\n                            https://repo.anaconda.com/pkgs/r/noarch\n                            https://repo.anaconda.com/pkgs/msys2/win-64\n                            https://repo.anaconda.com/pkgs/msys2/noarch\n            package cache : C:\\Users\\minim\\miniconda3\\pkgs\n                            C:\\Users\\minim\\.conda\\pkgs\n                            C:\\Users\\minim\\AppData\\Local\\conda\\conda\\pkgs\n         envs directories : C:\\Users\\minim\\miniconda3\\envs\n                            C:\\Users\\minim\\.conda\\envs\n                            C:\\Users\\minim\\AppData\\Local\\conda\\conda\\envs\n                 platform : win-64\n               user-agent : conda/4.10.1 requests/2.25.0 CPython/3.9.1 Windows/10 Windows/10.0.19041\n            administrator : False\n               netrc file : None\n             offline mode : False\n  ```\n7. Now choose where you want to run the projects. Use `cd` commands and you can download the repository by doing `git clone https://github.com/rogerfitz/tutorials` \n7. Nearly done now, `cd` into the directory and test that a tutorial works. I'd recommend starting with [subreddit_analysis/README.md](https://github.com/rogerfitz/tutorials/blob/master/subreddit_analysis/README.md)\n\n### Mac  \n1. Download [Minconda](https://docs.conda.io/en/latest/miniconda.html) -- Select Latest Mac 64 bit\n1. Install and select the option to add Minconda to your system path (it isn't default)\n1. Open the Mac Terminal and test that conda was installed```  conda info  ```\n  should give something like \n  ```\n  active environment : None\n         user config file : C:\\Users\\minim\\.condarc\n   populated config files :\n            conda version : 4.10.1\n      conda-build version : not installed\n           python version : 3.9.1.final.0\n         virtual packages : __cuda=11.3=0\n                            __win=0=0\n                            __archspec=1=x86_64\n         base environment : C:\\Users\\minim\\miniconda3  (writable)\n        conda av data dir : C:\\Users\\minim\\miniconda3\\etc\\conda\n    conda av metadata url : https://repo.anaconda.com/pkgs/main\n             channel URLs : https://repo.anaconda.com/pkgs/main/win-64\n                            https://repo.anaconda.com/pkgs/main/noarch\n                            https://repo.anaconda.com/pkgs/r/win-64\n                            https://repo.anaconda.com/pkgs/r/noarch\n                            https://repo.anaconda.com/pkgs/msys2/win-64\n                            https://repo.anaconda.com/pkgs/msys2/noarch\n            package cache : C:\\Users\\minim\\miniconda3\\pkgs\n                            C:\\Users\\minim\\.conda\\pkgs\n                            C:\\Users\\minim\\AppData\\Local\\conda\\conda\\pkgs\n         envs directories : C:\\Users\\minim\\miniconda3\\envs\n                            C:\\Users\\minim\\.conda\\envs\n                            C:\\Users\\minim\\AppData\\Local\\conda\\conda\\envs\n                 platform : win-64\n               user-agent : conda/4.10.1 requests/2.25.0 CPython/3.9.1 Windows/10 Windows/10.0.19041\n            administrator : False\n               netrc file : None\n             offline mode : False\n  ```\n7. Install github command line if you don't have it already, in Mac terminal `brew install git`\n7. Now choose where you want to run the projects. Use `cd` commands and you can download the repository by doing `git clone https://github.com/rogerfitz/tutorials` \n7. Nearly done now, `cd` into the directory and test that a tutorial works. New to python? I'd recommend starting with [intro_to_jupyter](https://github.com/rogerfitz/tutorials/blob/master/_introduction_to_jupyter_notebooks/README.md) otherwise go with [subreddit_analysis](https://github.com/rogerfitz/tutorials/tree/master/subreddit_analysis)\n"
    },
    {
        "repo": "/AdamLaurie/sjcam",
        "language": "Python",
        "readme_contents": "# sjcam\n\nA python CLI tool for controlling SJCAM WiFi Sports Cameras\n\n# installation\n\nAs far as I know, the only dependancies not catered for by the installation script are VideoLAN, used for viewing a live stream from the camera and opencv. To install under Ubuntu:\n\n  sudo apt-get install vlc python-opencv\n\nFor other ditros, visit the home pages for more info:\n\n  http://www.videolan.org/\n\n  http://opencv.org/\n\nTo install sjcam:\n\n  sudo python ./setup.py install\n\n# usage\n\nRunning the script with no arguments will show a help screen:\n\n  sjcam\n\n  Usage: /usr/local/bin/sjcam &lt;COMMAND&gt; [ARG(s)] [&lt;COMMAND&gt; [ARG(s)] ...]\n\n    Commands:\n\n       BLAM                                   BlamCam mode - detect bullet hits on target (auto switch to PHOTO mode)\n       CONFIG                                 Show camera config and status\n       DATE <YYYY-MM-DD>                      Set camera date\n       DEBUG <OFF | ON>                       Set DEBUG printing\n       DIR                                    Show PHOTO and MOVIE directory listing\n       GET <FILE>                             Copy file from camera to local storage\n       IP <ADDRESS>                           Set IP address (default 192.168.1.254)\n       MODE <[T]MOVIE | [T]PHOTO>             Set camera to [TIMED] MOVIE or PHOTO mode\n       PASS <PASSWORD>                        Set WiFi PASSWORD (will not take effect until disconnect/reconnect)\n       PATH <FILE PATH>                       Set PATH for saving snapshots and movies (default ./)\n       PING                                   Check camera is visible and connectable on network\n       PREVIEW                                View low-res PHOTO preview image (auto switch to PHOTO mode)\n       SET <PARAMETER> <VALUE>                Set camera config ('?' to list parameters and/or values)\n       START                                  START MOVIE recording (auto switch to MOVIE mode)\n       STOP                                   STOP MOVIE recording or TIMED PHOTO\n       SYNC                                   Synchronise camera TIME & DATE with host\n       [G|V]SNAP                              Take a snapshot and optionally [V]iew and/or [G]et it (auto switch to PHOTO mode)\n       SSID <SSID>                            Set WiFi SSID (will not take effect until disconnect/reconnect)\n       STREAM                                 View live video stream (auto switch to MOVIE mode)\n       TIME <HH:MM:SS>                        Set camera clock\n\n    Commands will be executed sequentially and must be combined as appropriate.\n\nMost commands are self explanatory.\n\n# viewing camera config settings\n\n  sjcam config\n\n    Camera config:\n\n      Movie_Resolution: 720P_1280x720_60fps\n      Cyclic_Record: Off\n      HDR/WDR: On\n      1012: 0\n      Motion_Detection: On\n      Audio: Off\n      Date_Stamping: On\n      2010: 3\n      Videolapse: Off\n      Photo_Image_Size: 8M_3264x2448\n      1005: 0\n      Sharpness: Strong\n      White_Balance: Auto\n      Colour: Colour\n      ISO: 100\n      Exposure: +0.0\n      Anti_Shaking: On\n      Frequency: 60Hz\n      Rotate: Off\n      Default_Setting: Cancel\n      Format: Cancel\n      Auto_Power_Off: Off\n      3003: 0\n      3004: 0\n      Language: English\n\nParameter names and values are translated to a keyword format that is easy to cut & paste for SET commands. Parameters that have not yet been reverse engineered or cannot be changed using the SET command are shown as their original numeric value.\n\n# setting camera parameters\n\nChangeable parameters can be set using the SET command, followed by parameter name and value. To get a full list of parameters and values, use:\n\n  sjcam set ? ?\n\n    SET config help:\n\n      Default_Setting: Cancel, OK\n      HDR/WDR: Off, On\n      Language: English, French, Spanish, Polish, German, Italian, Unknown_1, Unknown_2, Russian, Unknown_3, Unknown_4, Unknown_5, Portugese\n      Rotate: Off, On\n      Format: Cancel, OK\n      Exposure: +2.0, +5/3, +4/3, +1.0, +2/3, +1/3, +0.0, -1/3, -2/3, -1.0, -4/3, -5/3, -2.0\n      Frequency: 50Hz, 60Hz\n      Auto_Power_Off: Off, 3_Minutes, 5_Minutes, 10_Minutes\n      Anti_Shaking: Off, On\n      Movie_Resolution: 1080FHD_1920x1080, 720P_1280x720_60fps, 720P_1280x720_30fps, WVGA_848x480, VGA_640x480\n      Cyclic_Record: Off, 3_Minutes, 5_Minutes, 10_Minutes\n      Videolapse: Off, 1_Second, 2_Seconds, 5_Seconds, 10_Seconds, 30_Seconds, 1_Minute\n      Motion_Detection: Off, On\n      Audio: Off, On\n      ISO: Auto, 100, 200, 400\n      Colour: Colour, B/W, Sepia\n      White_Balance: Auto, Daylight, Cloudy, Tungsten, Flourescent\n      Sharpness: Strong, Normal, Soft\n      Date_Stamping: Off, On\n      Photo_Image_Size: 12M_4032x3024, 10M_3648x2736, 8M_3264x2448, 5M_2592x1944, 3M_2048x1536, 2MHD_1920x1080, VGA_640x480, 1.3M_1280x960\n\nTo get the list of values for a specific parameter, use e.g.:\n\n  sjcam set Photo_Image_Size ?\n\n    SET config help:\n\n      Photo_Image_Size: 12M_4032x3024, 10M_3648x2736, 8M_3264x2448, 5M_2592x1944, 3M_2048x1536, 2MHD_1920x1080, VGA_640x480, 1.3M_1280x960\n\nTo change a parameter, specify the parameter name and new value:\n\n  sjcam set Photo_Image_Size 2MHD_1920x1080\n\n    Setting Photo_Image_Size to 2MHD_1920x1080\n      OK\n\n# special parameters\n\nThere are two 'parameters' that are actually executable functions: Format and Default_Setting.\n\nFormat will wipe the SD card and Default_Setting will set all parameters back to defaults.\n\nThere is no 'are you sure?' prompt, so running the command:\n\n  sjcam set format ?\n\n    SET config help:\n\n      Format: Cancel, OK\n\nshows the options, and:\n\n  sjcam set format ok\n\n    Setting format to ok\n      OK\n\nwill immediately wipe your SD card. Use with caution!\n\n  sjcam dir\n\n    Camera directory:\n\n      PHOTO:\n\n\n      MOVIE:\n\n# BlamCam mode\n\nBlamCam mode was the main reason for writing this code in the first place. The idea is that you place the camera in front of a target, then monitor it from the firing point. The camera on its own would be very useful for this, but with a bit of image processing it can be even more so. Accordingly, in this mode, each time you press a key a new image is taken and compared to the last. The difference should be the most recent shot, which will be highlighted. You can also review previous shots at any time, which will highlight each shot in situ on the current target image.\n\n![BlamCam](/images/blamcam.jpg)\n\n# known issues / further development\n\nSince there is no published API for this type of camera, it was reverse engineered by sniffing packets from the Android app. Not all settings visible on the camera can be changed from the app, so some things are still unknown or may be incorrect.\n\nThere are several tools out there for doing this, and I used one that allows sniffing of only the local network traffic without rooting the phone:\n\n  https://play.google.com/store/apps/details?id=app.greyshirts.sslcapture&hl=en_GB\n\nIt's a bit clunky and doesn't have any kind of filtering support, so you have to wade through a lot of irrelevant data to find the packet you're looking for, but it was easy to install and run and got the ball rolling, so I stuck with it.\n\nI only have access to the SJ4000 camera, so it's possible other cameras behave completely differently - please let me know your experiences!\n\nCommands can be tested by sending them directly to the camera using a browser. For example, to change the WiFi name:\n\n  http://192.168.1.254/?custom=1&cmd=3003&str=%22MyShinySJ4000%22\n\nIf you find any new or useful commands, please email me details, or send me a pull request. I have commented some as yet unexplored options in sj4000.py\n\nAt some point, it would be nice to have a GUI.\n\nNeed to add GET option to video start/stop...\n\nNeed to fix camera directory to show file sizes, dates etc. (strange problem with BS4)\n\nFind better lens options for BlamCam (in progress)\n\nReally really need a better GUI for BlamCam!\n"
    },
    {
        "repo": "/MCG-NJU/MultiSports",
        "language": "Python",
        "readme_contents": "# README\n\nPaper: [MultiSports: A Multi-Person Video Dataset of Spatio-Temporally Localized Sports Actions](https://arxiv.org/pdf/2105.07404.pdf)\n\nHomepage: [DeeperAction/MultiSports](https://deeperaction.github.io/datasets/multisports.html)\n\n## Download Data and Annotations\n\nOur data and annotations can now be downloaded from [Hugging Face](https://huggingface.co/datasets/MCG-NJU/MultiSports).\n\nYou can still register on our [competition page](https://codalab.lisn.upsaclay.fr/competitions/3736), and download data and annotations in the Participate/Data part. But please note that it may take a few moments before we receive the email and accept your request.\n\nMultiSports Dataset License: [CC BY_NC 4.0](https://creativecommons.org/licenses/by-nc/4.0/)\n\n## Download Person Boxes\n\nWe provide the **person boxes** generated by the person detector of Faster R-CNN with a ResNeXt-101-FPN backbone in the links below. We finetune the person detector only with the train set data.\n\nOnedrive: https://1drv.ms/f/s!AtjeLq7YnYGRe3eQMuQk5GYYu40\n\nBaidu Wangpan: https://pan.baidu.com/s/1zOylA-idz2foeEaU1gx6sw (password: 5ccx)\n\nThe pkl file has the below data structure:\n```\n{\"video_name, frame_number\":boxes}\n\nvideo_name: str\n\nframe_number: int (starts from 1)\n```\nboxes: a numpy array with n rows and 5 columns, \\<x1\\> \\<y1\\> \\<x2\\> \\<y2\\> \\<score\\>. x1, x2, y1, y2 are normalized with respect to frame size, which are between 0.0-1.0. We only save the box with score higher than 0.05.\n\n## SlowFast Det.\n\nWe run the SlowFast Det. from [mmaction2](https://github.com/open-mmlab/mmaction2/tree/main) and change the [mmaction/datasets/ava_dataset.py](https://github.com/open-mmlab/mmaction2/blob/main/mmaction/datasets/ava_dataset.py) into [multisports_dataset.py](https://github.com/MCG-NJU/MultiSports/blob/main/multisports_dataset.py) for our MultiSports Dataset. \n\n## Evaluation Tools\n\n**evaluate_multisports.py** is our evaluation code, which is modified from ACT(https://github.com/vkalogeiton/caffe/blob/act-detector/act-detector-scripts/ACT.py). We change the calculation of PR (Precision-Recall) area same with PASCAL VOC.\n```\nUsage:\npython3 evaluate_multisports.py task gt_file detection_file -t thr\n\nevaluate frameAP:\npython3 evaluate_multisports.py frameAP multisports_GT.pkl frame_detections.pkl\nevaluate videoAP:\npython3 evaluate_multisports.py videoAP multisports_GT.pkl video_detections.pkl -t 0.2\nevaluate videoAP with different thresholds:\npython3 evaluate_multisports.py videoAP_all multisports_GT.pkl video_detections.pkl\nanalyze videoAP error:\npython3 evaluate_multisports.py videoAP_error multisports_GT.pkl video_detections.pkl -t 0.2\n```\n**frame_detections.pkl** is a list. Every item is a numpy array with shape (8,) , numpy.array([video_index, frame_number, label_index, score, x1, y1, x2, y2]). video_index is the index of the video in the multisports_GT['test_videos'][0], which starts from 0. For example, 0 is the index of 'aerobic_gymnastics/v_crsi07chcV8_c004' in multisports_GT['test_videos'][0]. frame_number starts from 1. label_index starts from 0. score is the score of this box, which affects the frame mAP result.\n\n**video_detections.pkl** is a dictionary that associates from each index of label (start from 0), a list of tubes. A tube is a tuple (tube_v, tube_score, tube_boxes). tube_v is the video name, such as 'aerobic_gymnastics/v_crsi07chcV8_c004'. tube_score is the score of this tube, which affects the video mAP result. tube_boxes is a numpy array with tube-length rows and 6 columns, every row is [frame number, x1, y1, x2, y2, box_score]. frame number starts from 1. box_score is the single frame's confidence and does not affect the video mAP result. \n\nWe provide examples of frame_detections.pkl and video_detections.pkl of slowonly in [examples](https://github.com/MCG-NJU/MultiSports/tree/main/examples), whose evaluation results with different PR area calculation are shown below.\n\n|  | frameAP@0.5 | videoAP@0.2 | videoAP@0.5 |\n|---|---|---|:--|\n| PR_ACT | 16.84 | 15.75 | 5.84 |\n| PR_PASCAL_VOC | 17.03 | 15.86 | 5.88 |\n\n\n\n<!-- ## Prediction Example\n\n**submissions.zip** is our example submission file on 50% test set.\n -->\n\nIf you find our code or paper useful, please cite as\n```\n@InProceedings{Li_2021_ICCV,\n    author    = {Li, Yixuan and Chen, Lei and He, Runyu and Wang, Zhenzhi and Wu, Gangshan and Wang, Limin},\n    title     = {MultiSports: A Multi-Person Video Dataset of Spatio-Temporally Localized Sports Actions},\n    booktitle = {Proceedings of the IEEE/CVF International Conference on Computer Vision (ICCV)},\n    month     = {October},\n    year      = {2021},\n    pages     = {13536-13545}\n}\n```\n"
    },
    {
        "repo": "/chonyy/basketball-shot-detection",
        "language": "Python",
        "readme_contents": "This is the pure source python version (without Flask) of the main project [AI Basketball Analysis](https://github.com/chonyy/AI-basketball-analysis)\n\n## Judging Basketball Shots\n* **Orange:** Detected hoop\n* **Blue:** Detected basketball \n* **Purple:** Undetermined shot\n* **Red:** Miss\n* **Green:** Shot went in\n<p align=center>\n    <img src=\"img/judging.gif\" width=\"858\" height=\"483.34\">\n</p>\n\n## Detected Basketball and Hoop\n<p align=center>\n    <img src=\"img/demo.gif\" width=\"717.552\" height=\"432.432\">\n</p>\n\n## Basketball Trajectory Fit to Curve\n<p align=center>\n    <img src=\"img/trajectory.png\">\n</p>\n\n## Connected Basketball Detection Points\n<p align=center>\n    <img src=\"img/trajectory_raw.png\">\n</p>\n"
    },
    {
        "repo": "/m0ngr31/EPlusTV",
        "language": "TypeScript",
        "readme_contents": "<p align=\"center\">\n  <img src=\"https://i.imgur.com/FIGZdR3.png\">\n</p>\n\nCurrent version: **2.0.17**\n\n# About\nThis takes ESPN/ESPN+, FOX Sports, and MLB.tv programming and transforms it into a \"live TV\" experience with virtual linear channels. It will discover what is on, and generate a schedule of channels that will give you M3U and XMLTV files that you can import into something like [Jellyfin](https://jellyfin.org), [Channels](https://getchannels.com), or [xTeVe](https://github.com/xteve-project/xTeVe).\n\n## Notes\n* This was not made for pirating streams. This is made for using your own credentials and have a different presentation than the ESPN, FOX Sports, and MLB.tv apps currently provide.\n* The Mouse might not like it and it could be taken down at any minute. Enjoy it while it lasts. \u00af\\\\_(\u30c4)_/\u00af\n\nIf you're using the `USE_LINEAR` option, have your client pull the XMLTV file every 4 hours so it can stay current if channels change.\n\n# Using\nThe server exposes 2 main endpoints:\n\n| Endpoint | Description |\n|---|---|\n| /channels.m3u | The channel list you'll import into your client |\n| /xmltv.xml | The schedule that you'll import into your client |\n\n# Running\nThe recommended way of running is to pull the image from [Docker Hub](https://hub.docker.com/r/m0ngr31/eplustv).\n\n## Environement Variables\n| Environment Variable | Description | Required? | Default |\n|---|---|---|---|\n| START_CHANNEL | What the first channel number should be. | No | 1 |\n| NUM_OF_CHANNELS | How many channels to create? This is dependent on the networks you are using. A good number to start with is >= 150 if you are using ESPN+. | No | 150 |\n| USE_LINEAR | If you are using linear channels like ESPN, FS1, ect., and want those events on their own dedicated channels. | No | False |\n| PROXY_SEGMENTS | Proxy keyed `*.ts` files. | No | False |\n| PUID | Current user ID. Use if you have permission issues. Needs to be combined with PGID. | No ||\n| PGID | Current group ID. Use if you have permission issues. Needs to be combined with PUID. | No ||\n| MAX_RESOLUTION | Max resolution to use. Valid options are `UHD/HDR`, `UHD/SDR`, `1080p`, `720p`, and `540p` (Some providers don't offer 4K or 1080p and will attempt to play the highest framerate available for selected resolution). | No | UHD/SDR |\n\n### Available channel options\n\n#### ESPN\nUse if you would like to login with a TV provider or ESPN+ and access various ESPN events\n| Environment Variable | Description | Default |\n|---|---|---|\n| ESPNPLUS | Set to false if you only want events that come from your TV provider | True |\n| ESPN | ESPN: Set if your TV provider supports it | False |\n| ESPN2 | ESPN2: Set if your TV provider supports it | False |\n| ESPN3 | ESPN2: Set if your TV provider supports it | False |\n| ESPNU | ESPNU: Set if your TV provider supports it | False |\n| SEC | SEC Network: Set if your TV provider supports it | False |\n| SECPLUS | SEC Network+: Set if your TV provider supports it | False |\n| ACCN | ACCN: Set if your TV provider supports it | False |\n| ACCNX | ACCNX: Set if your TV provider supports it | False |\n| LONGHORN | Longhorn Network: Set if your TV provider supports it | False |\n\n#### FOX Sports\nUse if you would like to login with a TV provider and access various FOX Sports events\n| Environment Variable | Description | Default |\n|---|---|---|\n| FOXSPORTS | Set if your TV provider supports it | False |\n| FOXSPORTS_ALLOW_REPLAYS | If you would like to schedule events that aren't live | False |\n\n#### MLB.tv\nUse if you would like to login with your MLB.tv account\n| Environment Variable | Description | Default |\n|---|---|---|\n| MLBTV | Set if you would like to use MLB.tv | False |\n| MLBTV_USER | MLB.tv Username | False |\n| MLBTV_PASS | MLB.tv Password | False |\n| MLBTV_ONLY_FREE | Only schedule free games | False |\n\n## Volumes\n| Volume Name | Description | Required? |\n|---|---|---|\n| /app/config | Used to store DB and application state | Yes |\n\n\n## Docker Run\nBy default, the easiest way to get running is:\n\n```bash\ndocker run -p 8000:8000 -v config_dir:/app/config m0ngr31/eplustv\n```\n\nIf you run into permissions issues:\n\n```bash\ndocker run -p 8000:8000 -v config_dir:/app/config -e PUID=$(id -u $USER) -e PGID=$(id -g $USER) m0ngr31/eplustv\n```\n\nOnce it runs for the first time, check the Docker logs to see what the next steps for authentication are.\n"
    },
    {
        "repo": "/charlesmalafosse/sports-betting-customloss",
        "language": "Jupyter Notebook",
        "readme_contents": "# Machine Learning for Sports Betting with Neural Network and custom loss function.\nWe present a way to incorporate bets' potential profit into a neural network classifier model using a custom loss function. We believe this to be extremely useful for anyone looking to use machine learning to create a betting system. This is what I did on BetSentiment.com.\n\n## Support me on Medium\nBecome a member on Medium and support my work (affiliate link): https://medium.com/@charlesmalafosse/membership\n\n## Data.\nFor our data we take a list of 200 games from the English Premier League, season 2018\u20132019, August to December 2018. It contains descriptive game data such as team names, bookmaker odds from BetFair, and our BetSentiment sentiment score (representing the percentage of positive tweets over the positive and negative tweets\u200a-\u200a30 millions tweets analyzed so far!).\n\n## Custom loss\u00a0function\nWe set up our custom loss function with Keras on top of TensorFlow.\n\nFor more info please check our article on medium\nhttps://medium.com/@media_73863/machine-learning-for-sports-betting-not-a-basic-classification-problem-b42ae4900782\n\nAnd check https://betsentiment.com/ for Fan Sentiment Analysis and Machine Learning applied to sports betting.\n"
    },
    {
        "repo": "/gideonrotich/LivescoreApp",
        "language": "Kotlin",
        "readme_contents": "# Livescore\u26bd\n<h2>A Livescore App consuming the Sports Api</>\n\nBuilt using jetpack compose\n\n### How it's built\n\n* Technologies used\n    * [Kotlin](https://kotlinlang.org/)\n    * [Compose](https://developer.android.com/jetpack/compose)\n    * [Coroutines](https://kotlinlang.org/docs/reference/coroutines-overview.html)\n    * [Flow](https://kotlinlang.org/docs/reference/coroutines/flow.html)\n    * [Hilt](https://insert-koin.io/)\n    * [Retrofit](https://square.github.io/retrofit/)\n    * [Chucker](https://github.com/ChuckerTeam/chucker)\n    * [Jetpack](https://developer.android.com/jetpack)\n        * [Lifecycle](https://developer.android.com/topic/libraries/architecture/lifecycle)\n        * [ViewModel](https://developer.android.com/topic/libraries/architecture/viewmodel)\n    * [Timber](https://github.com/JakeWharton/timber)\n    * [Leak Canary](https://github.com/square/leakcanary)\n\n* Architecture\n    * MVVM - Model View View Model\n\n* Tests\n    * [JUnit5](https://junit.org/junit5/)\n    * [Spek](https://www.spekframework.org/)\n    * [MockK](https://github.com/mockk/mockk)\n    * [Turbine](https://github.com/cashapp/turbine)\n\n* Gradle\n    * [Gradle Kotlin DSL](https://docs.gradle.org/current/userguide/kotlin_dsl.html)\n    * Plugins\n        * [Spotless](https://github.com/diffplug/spotless)\n        * [Dokka](https://github.com/Kotlin/dokka)\n        * [jacoco](https://github.com/jacoco/jacoco)\n        * [Ktlint](https://github.com/JLLeitschuh/ktlint-gradle)\n        * [Detekt](https://github.com/detekt/detekt)\n\n* CI/CD\n    * Github Actions\n    * [Fastlane](https://fastlane.tools)\n  \n<a href=\"https://www.buymeacoffee.com/giddyjonesL\" target=\"_blank\"><img src=\"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\" alt=\"Buy Me A Coffee\" style=\"height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;\" ></a>\n\n### Screenshots\n  \n\nI added some screenshots in the `screenshots` folder, in the root directory of the project.\n\n<img src=\"https://github.com/gideonrotich/Livescore/blob/master/screenshots/one.png\" width=\"280\"/>  <img src=\"https://github.com/gideonrotich/Livescore/blob/master/screenshots/two.png\" width=\"280\"/>  <img src=\"https://github.com/gideonrotich/Livescore/blob/master/screenshots/three.png\" width=\"280\"/>  <img src=\"https://github.com/gideonrotich/Livescore/blob/master/screenshots/four.png\" width=\"280\"/>  <img src=\"https://github.com/gideonrotich/Livescore/blob/master/screenshots/five.png\" width=\"280\"/>  <img src=\"https://github.com/gideonrotich/Livescore/blob/master/screenshots/six.png\" width=\"280\"/>\n"
    },
    {
        "repo": "/PaddlePaddle/PaddleSports",
        "language": "Python",
        "readme_contents": "# PaddleSports\n\n\n## \ud83d\udce3 \u8fd1\u671f\u66f4\u65b0\n\n- **\ud83d\udd252022.11.30 \u53d1\u5e03 \u8db3\u7403\"AI\u61c2\u7403\u5e1d\"\u4ee5\u53ca\u76f8\u5173[\u6848\u4f8b\u5e93](./10-applications/01-football/)**\n  - \u4eae\u76f8WAVE SUMMIT<sup>+</sup>\u5927\u4f1aAI\u5f00\u53d1\u8005\u96c6\u5e02\uff0c\u656c\u8bf7\u5173\u6ce8\uff1b\n  - \u6db5\u76d6\u56db\u5927\u677f\u5757\u8d8515\u79cd\u7b97\u6cd5\u53ca\u8db3\u7403\u9886\u57df\u89e3\u51b3\u65b9\u6848\uff1b\n  - \ud83d\udca5\"AI\u61c2\u7403\u5e1d\"\u5e26\u4f60\u770b\u4e16\u754c\u676f -- \u5361\u5854\u5c14\u4e16\u754c\u676f\u793a\u4f8bdemo\u66f4\u65b0;\n\n# \u6846\u67b6\u4ecb\u7ecd\n\n<div align=\"center\">\n  <img src=\"./image/1.gif\" width=\"300px\"/> <img src=\"./image/3.gif\" width=\"300px\"/> <img src=\"./image/4.gif\" width=\"300px\"/><br>\n</div>\n\nPaddleSports\u662f\u98de\u6868\u9762\u5411\u4f53\u80b2\u573a\u666f\u7684\u7aef\u5230\u7aef\u5f00\u53d1\u5957\u4ef6\uff0c\u5b9e\u73b0\u4eba\u5de5\u667a\u80fd\u6280\u672f\u4e0e\u4f53\u80b2\u884c\u4e1a\u7684\u6df1\u5ea6\u878d\u5408\uff0c\u76ee\u6807\u6253\u9020\u201cAI+Sports\u201d\u7684\u6807\u6746\u6848\u4f8b\u96c6\u3002PaddleSports\u7684\u7279\u8272\u5982\u4e0b\uff1a\n\n1. \u6574\u4f53\u91c7\u7528\u201c5W1H\u201d\u7684\u4ea7\u54c1\u67b6\u6784\uff0c\u5373\uff1a[*when*](#1-when)\uff08\u4ec0\u4e48\u65f6\u95f4\uff09\uff0c[*where*](#2-where)\uff08\u4ec0\u4e48\u4f4d\u7f6e\uff09\uff0c[*who*](#3-who)\uff08\u662f\u8c01\uff09\uff0c[*what*](#4-what)\uff08\u53d1\u751f\u4e86\u4ec0\u4e48\uff09\uff0c[*why*](#5-why)\uff08\u4e3a\u4ec0\u4e48\uff09\uff0c[*how*](#6-how)\uff08\u600e\u4e48\u6837\uff09\u3002\u7cfb\u7edf\u68b3\u7406\u4eba\u5de5\u667a\u80fd\u6280\u672f\u5728\u4f53\u80b2\u884c\u4e1a\u7684\u7814\u7a76\u3001\u5e94\u7528\u3001\u843d\u5730\u3002\n\n2. *AI\u6a21\u578b*\uff1a\u4ece\u7cbe\u5ea6\u3001\u901f\u5ea6\u3001\u96c6\u6210\u5ea6\u4e09\u4e2a\u7ef4\u5ea6\u8fdb\u884c\u6027\u80fd\u8bc4\u6d4b\u3002AI\u6280\u672f\u4e0d\u4ec5\u662f\u6df1\u5ea6\u5b66\u4e60\uff0c\u540c\u65f6\u6574\u7406\u4e86\u7ecf\u51783D\u5efa\u6a21\uff0cSLAM\uff0c\u673a\u5668\u5b66\u4e60\uff0c\u4ee5\u53ca\u786c\u4ef6\u96c6\u6210\u5f00\u53d1\u7b49\u5de5\u4f5c\uff0c\u76ee\u6807\u6253\u9020\u8f6f\u786c\u4e00\u4f53\u7684\u201cAI+Sports\u201d\u5f00\u53d1\u5957\u4ef6\u3002\n\n3. [*\u6570\u636e*](#7-data)\uff1a\u9664\u4e86\u5404\u4e2a\u5df2\u6709\u7684\u516c\u5f00\u6570\u636e\u96c6\u6765\u8bc4\u6d4b\u6df1\u5ea6\u6a21\u578b\u7684\u6027\u80fd\u5916\uff0c\u5c06\u9996\u6b21\u63a8\u51fa[*SportsBenchmark*](#8-benchmark)\uff0c\u529b\u4e89\u80fd\u591f\u7528\u4e00\u4e2a\u6570\u636e\u96c6\u6765\u8bc4\u6d4b\u6240\u6709\u7b97\u6cd5\u6a21\u578b\u3002\n\n4. [*\u5de5\u5177*](#9-tools)\uff1a\u9762\u5411\u4f53\u80b2\u573a\u666f\u7684\u5de5\u5177\u96c6\uff0c\u6bd4\u5982\u6807\u6ce8\u5de5\u5177\u3001\u68c0\u6d4b\u5de5\u5177\u3001\u8bc6\u522b\u5de5\u5177\u7b49\uff0c\u5177\u6709All-in-One\uff0cAutoRun\u7684\u7279\u70b9\u3002\n\n5. [*\u5e94\u7528*](#10-applications)\uff1a\u6db5\u76d6\u8db3\u7403\u3001\u8df3\u6c34\u3001\u4e52\u4e53\u7403\u3001\u82b1\u6837\u6ed1\u51b0\u3001\u5065\u8eab\u3001\u7bee\u7403\u3001\u8e66\u5e8a\u3001\u5927\u8df3\u53f0\u3001\u901f\u5ea6\u6ed1\u51b0\u3001\u8dd1\u6b65\u7b49\u70ed\u95e8\u7684\u4f53\u80b2\u8fd0\u52a8\u3002\n\n\n# \u5206\u6a21\u5757\u4ecb\u7ecd\n\u8be5\u90e8\u5206\u8be6\u7ec6\u4ecb\u7ecd\u201c5W1H\u201d\u5404\u4e2a\u6a21\u5757\u7684\u5185\u5bb9\u3002\n\n## 1. [*when*](./01-sports_when/)\n:movie_camera:\u793a\u4f8bdemo\u52a0\u8f7d\u4e2d: [\u4e0b\u8f7d](./image/)\n<div align=\"center\">\n  <img src=\"./image/\u4e52\u4e53\u7403.gif\" width=\"550px\"/><br>\n</div>\n\u793a\u4f8b\u52a8\u4f5c\u8bc6\u522b\u622a\u56fe:\n<div align=\"center\">\n  <img src=\"./image/\u4e52\u4e53\u7403.png\" width=\"550px\"/><br>\n</div>\n\n&emsp; \u201cwhen\u201d\u6a21\u5757\u91cd\u70b9\u4ece\u65f6\u57df\u89d2\u5ea6\u56de\u7b54\u4ee5\u4e0b\u95ee\u9898\uff1a\n\n&emsp; 1\uff09\u8f93\u5165\u4e00\u6bb5\u89c6\u9891\uff0c\u9996\u5148\u5224\u65ad\u662f\u4ec0\u4e48\u4f53\u80b2\u8fd0\u52a8\uff1b\n\n&emsp; 2\uff09\u4ece\u4e00\u6bb5\u89c6\u9891\u4e2d\uff0c\u7cbe\u786e\u5206\u5272\u51fa\u4f53\u80b2\u8fd0\u52a8\u7684\u8d77\u6b62\u65f6\u95f4\uff1b\n\n&emsp; 3\uff09\u5224\u65ad\u6bcf\u4e00\u5e27\u5c5e\u4e8e\u54ea\u4e2a\u52a8\u4f5c\uff0c\u4ee5\u8df3\u6c34\u4e09\u7c73\u677f\u4e3a\u4f8b\uff0c\u52a8\u4f5c\u8fc7\u7a0b\u5206\u4e3a\uff1a\u8d70\u677f\u3001\u8d77\u8df3\u3001\u7a7a\u4e2d\u3001\u5165\u6c34\u7b49\u9636\u6bb5\u3002\n\n&emsp; 4\uff09\u65f6\u95f4\u540c\u6b65\uff0c\u9488\u5bf9\u591a\u76f8\u673a\u540c\u6b65\u95ee\u9898\uff0c\u6574\u7406\u4e86\u786c\u4ef6\u540c\u6b65\u548c\u8f6f\u4ef6\u540c\u6b65\u4e24\u79cd\u63a7\u5236\u65b9\u6cd5\u3002\n\n&emsp; 5\uff09\u7f16\u89e3\u7801\uff0c\u5305\u62ec\u89c6\u9891\u7f16\u89e3\u7801\u548c\u97f3\u9891\u7f16\u89e3\u7801\u3002\n\n| \u4efb\u52a1              | \u6280\u672f\u65b9\u5411               | \u6280\u672f\u7ec6\u5206                        | \u7b97\u6cd5\u6a21\u578b                                                |\n|-----------------|--------------------|-----------------------------|-----------------------------------------------------|\n| 1.when          | 1.1) \u89c6\u9891\u5206\u7c7b          | \u89c6\u9891\u5206\u7c7b\uff08\u662f\u4ec0\u4e48\u4f53\u80b2\u9879\u76ee\uff09               | PP-TSM                                              |\n|                 |                    |                             | PP-TimeSformer                                      |\n|                 |                    |                             | SlowFast                                            |\n|                 |                    |                             | AttentionLSTM                                       |\n|                 |                    |                             | MoViNet                                             |\n|                 | 1.2) \u89c6\u9891\u5206\u5272          | \u7247\u6bb5\u5207\u5272\uff08\u8d77\u59cb\u70b9\uff0c\u7ec8\u6b62\u70b9\uff09               | BMN                                                 |\n|                 | 1.3) \u89c6\u9891\u7406\u89e3          | \u52a8\u4f5c\u8bc6\u522b\uff08\u6bcf\u4e00\u5e27\u5c5e\u4e8e\u4ec0\u4e48\u52a8\u4f5c\uff09             | MS-TCN                                              |\n|                 |                    |                             | CFBI                                                |\n|                 |                    |                             | ASRF                                                |\n|                 | 1.4) \u786c\u4ef6\u540c\u6b65          | \u786c\u4ef6\u540c\u6b65                        | PTP\u540c\u6b65\uff0cIEEE 1588                                     |\n|                 |                    | \u8f6f\u4ef6\u540c\u6b65                        | CPU\u65f6\u949f\u540c\u6b65                                             |\n|                 | 1.5) \u7f16\u89e3\u7801           | \u89c6\u9891\u7f16\u7801                        | H.264/MPEG-4 AVC                                    |\n|                 |                    | \u97f3\u9891\u7f16\u7801                        | WAV/MP3/AAC                                         |\n|                 |                    |                             |                                                     |\n\n\n\n\n## 2. [*where*](./02-sports_where/)\n:movie_camera:\u793a\u4f8bdemo\u52a0\u8f7d\u4e2d: \n<div align=\"center\">\n  <img src=\"./image/where_soccer.gif\" width=\"550px\"/><br>\n  <img src=\"./image/where_ski.gif\" width=\"550px\"/><br>\n  <img src=\"./image/where_3D.gif\" width=\"550px\"/><br>\n</div>\n\n&emsp; \u201cwhere\u201d\u6a21\u5757\u91cd\u70b9\u5206\u6790\uff1a\u524d\u666f\uff08\u8fd0\u52a8\u5458\uff09\u3001\u80cc\u666f\uff08\u573a\u9986\uff09\u3001\u76f8\u673a\uff0c\u8fd9\u4e09\u7c7b\u5bf9\u8c61\u7684\u4f4d\u7f6e/\u4f4d\u59ff\u7684\u4fe1\u606f\uff1a\n\n&emsp; 1\uff09\u8fd0\u52a8\u5458\u6574\u4f53\u4f4d\u59ff\uff1a\u56fe\u50cf/\u89c6\u9891\u4e2d\u8fd0\u52a8\u5458\u76842D/3D\u5b9a\u4f4d\uff0c\u5305\u542b\uff1a2D/3D\u68c0\u6d4b\u30012D\u5206\u5272\u30012D/3D\u8ddf\u8e2a\u7b49\uff1b\n\n&emsp; 2\uff09\u8fd0\u52a8\u5458\u5c40\u90e8\u4f4d\u59ff\uff1a\u8fd0\u52a8\u5458\u7684\u9aa8\u9abc\u59ff\u6001\u7684\u5206\u6790\uff0c\u4ece\u7c97\u7c92\u5ea6\u5230\u7ec6\u7c92\u5ea6\uff0c\u5305\u542b\uff1a2D\u9aa8\u9abc\u5173\u952e\u70b9\u30012D\u9aa8\u9abc\u59ff\u6001\u30013D\u9aa8\u9abc\u59ff\u6001\u30012D-3D\u7a20\u5bc6\u6620\u5c04\u30013D\u4eba\u4f53\u91cd\u5efa\u30013D\u4eba\u4f53\u52a8\u753b\u7b49\uff1b\n\n&emsp; 3\uff09\u80cc\u666f3D\u91cd\u5efa\uff1a\u5229\u7528\u591a\u7ef4\u4f20\u611f\u5668\u6570\u636e\uff0c1\u6bd41\u91cd\u5efa\u573a\u9986\u76843D\u4fe1\u606f\uff0c\u76f8\u5173\u6280\u672f\u5305\u542b\uff1aSimultaneous Localization and Mapping (SLAM)\u3001Structure-from-Motion (SfM) \u7b49\uff1b\n\n&emsp; 4\uff09\u76f8\u673a6-DoF\u4f4d\u59ff\uff1a\u6062\u590d\u76f8\u673a\u76846-DoF\u4f4d\u59ff\uff08\u4f4d\u7f6exyz\uff0c\u65cb\u8f6c\u03b1\u03b2\u03b3\uff09\uff0c\u6709\u7ecf\u5178\u7684PNP\u7b97\u6cd5\uff0c\u4ee5\u53ca\u6df1\u5ea6\u6a21\u578b\u7b97\u6cd5\u3002\n\n| \u4efb\u52a1              | \u6280\u672f\u65b9\u5411               | \u6280\u672f\u7ec6\u5206                        | \u7b97\u6cd5\u6a21\u578b                                                |\n|-----------------|--------------------|-----------------------------|-----------------------------------------------------|\n| 2.where         | 2.1) 2D\u68c0\u6d4b          | \u4e00\u9636\u6bb5\u901a\u7528\u76ee\u6807\u68c0\u6d4b                   | PP-YOLOE                                            |\n|                 |                    |                             | PP-PicoDet                                          |\n|                 |                    | \u4e8c\u9636\u6bb5\u901a\u7528\u76ee\u6807\u68c0\u6d4b                   | Faster-RCNN                                         |\n|                 |                    | \u4eba\u4f53\u68c0\u6d4b\u5206\u6790                      | PP-Human2.0                                         |\n|                 |                    |                             | PP-Pedestrian                                       |\n|                 |                    | \u6c34\u82b1/\u8db3\u7403/\u7bee\u7403\u7b49\u5c0f\u76ee\u6807\u68c0\u6d4b              | FPN\uff0cPP-YOLOE                                        |\n|                 |                    |                             |                                                     |\n|                 | 2.2) 2D\u5206\u5272          | \u524d\u666f\u5bf9\u8c61/\u80cc\u666f\u5206\u5272                   | Mask-RCNN                                           |\n|                 |                    |                             | SOLOv2                                              |\n|                 |                    |                             | PP-LiteSeg                                          |\n|                 |                    |                             | DeepLabV3P                                          |\n|                 |                    | \u4ea4\u4e92\u5f0f\u5206\u5272                       | EISeg                                               |\n|                 |                    | \u4eba\u4f53\u5206\u5272                        | PP-HumanSeg                                         |\n|                 |                    | \u4eba\u4f53\u6bdb\u53d1\u7ea7\u7cbe\u51c6\u5206\u5272                   | Matting                                             |\n|                 |                    |                             | Human Matting                                       |\n|                 |                    | \u89c6\u9891\u76ee\u6807\u5206\u5272                      | CFBI                                                |\n|                 |                    |                             | MA-Net                                              |\n|                 |                    | \u89c6\u9891\u8fd0\u52a8\u7269\u4f53\u5206\u5272                    | Motion Segmentation                                 |\n|                 |                    | \u89c6\u9891\u4eba\u4f53\u5206\u5272 Video Matting        | BackgroundMattingV2                                 |\n|                 |                    |                             |                                                     |\n|                 | 2.3) 2D\u8ddf\u8e2a          | \u4eba\u4f53\u8ddf\u8e2a                        | ByteTrack                                           |\n|                 |                    | \u8fd0\u52a8\u8f68\u8ff9                        | PP-Tracking                                         |\n|                 |                    |                             |                                                     |\n|                 | 2.4) 2D\u9aa8\u9abc          | Top-Down                    | PP-TinyPose                                         |\n|                 |                    |                             | HR-Net                                              |\n|                 |                    | Bottom-Up                   | OpenPose                                            |\n|                 |                    |                             | MoveNet                                             |\n|                 |                    |                             |                                                     |\n|                 | 2.5) 3D\u9aa8\u9abc          | \u5355\u76ee                          | PP-TinyPose3D                                       |\n|                 |                    |                             | Position-based                                      |\n|                 |                    |                             | Angle-based                                         |\n|                 |                    |                             | 2D + Depth-based                                    |\n|                 |                    |                             | 2D + IK                                             |\n|                 |                    | \u591a\u76ee                          | Calibration                                         |\n|                 |                    |                             | Fusion                                              |\n|                 |                    | \u6df1\u5ea6\u76f8\u673a                        | Kinect 3D Tracking                                  |\n|                 |                    |                             |                                                     |\n|                 | 2.6) 2D/3D\u7a20\u5bc6\u6620\u5c04     | 2D-2D Dense Correspondences | DeepMatching                                        |\n|                 |                    | 2D-3D Dense Correspondences | DensePose                                           |\n|                 |                    |                             |                                                     |\n|                 | 2.7) 3D\u4eba\u4f53\u91cd\u5efa        | Template Model              | SMPL                                                |\n|                 |                    |                             | VIBE                                                |\n|                 |                    |                             | PyMaf                                               |\n|                 |                    |                             |                                                     |\n|                 | 2.8) SLAM          | \u9759\u6001                          | \u5355\u76ee ORB-SLAM...                                      |\n|                 |                    |                             | \u6df1\u5ea6 KinectFusion...                                  |\n|                 |                    |                             | \u6fc0\u5149 LOAM                                             |\n|                 |                    | \u52a8\u6001                          | DynamicFusion                                       |\n|                 |                    |                             | DynSLAM                                             |\n|                 |                    |                             |                                                     |\n|                 | 2.9) \u76f8\u673a6-DoF\u5b9a\u4f4d     | \u5185\u53c2                          | \u5f20\u6c0f\u6807\u5b9a\u6cd5                                               |\n|                 |                    | \u5916\u53c2                          | \u5355\u5f20\u56fe\u50cf PNP                                            |\n|                 |                    |                             | \u591a\u5f20\u56fe\u50cf SfM, SLAM                                      |\n|                 |                    |                             |                                                     |\n\n\n\n## 3. [*who*](./03-sports_who/)\n:movie_camera:\u793a\u4f8bdemo\u52a0\u8f7d\u4e2d:\n<div align=\"center\">\n  <img src=\"./image/who_face.gif\" width=\"550px\"/><br>\n  <img src=\"./image/who_line.gif\" width=\"550px\"/><br>\n</div>\n\n&emsp; \u201cwho\u201d\u6a21\u5757\u91cd\u70b9\u5206\u6790\uff1a\u56fe\u50cf/\u89c6\u9891\u4e2d\u6709\u54ea\u51e0\u7c7b\u4eba\u5458\uff0c\u5206\u522b\u662f\u8c01\uff0c\u7279\u5b9a\u4eba\u5458\u5728\u6574\u573a\u6bd4\u8d5b\u7684\u96c6\u9526\u7b49\u4fe1\u606f\uff1a\n\n&emsp; 1\uff09\u4eba\u5458\u5206\u7c7b\uff1a\u628a\u56fe\u50cf/\u89c6\u9891\u4e2d\u8fd0\u52a8\u5458\u3001\u89c2\u4f17\u3001\u88c1\u5224\u3001\u540e\u52e4\u5de5\u4f5c\u4eba\u5458\u8fdb\u884c\u533a\u5206\uff1b\n\n&emsp; 2\uff09\u8fd0\u52a8\u5458\u8bc6\u522b\uff1a\u8bc6\u522b\u51fa\u7279\u5b9a\u8fd0\u52a8\u5458\uff0c\u5305\u542b\uff1a\u4eba\u8138\u8bc6\u522b\u3001\u4eba\u4f53\u8bc6\u522b\u3001\u53f7\u7801\u7c3f\u8bc6\u522b\u7b49\uff1b\n\n&emsp; 3\uff09\u8fd0\u52a8\u5458\u6bd4\u8d5b\u96c6\u9526\uff1a\u81ea\u52a8\u751f\u6210\u8be5\u8fd0\u52a8\u5458\u6574\u573a\u6bd4\u8d5b\u7684\u89c6\u9891\u96c6\u9526\u3002\n\n| \u4efb\u52a1              | \u6280\u672f\u65b9\u5411               | \u6280\u672f\u7ec6\u5206                        | \u7b97\u6cd5\u6a21\u578b                                                |\n|-----------------|--------------------|-----------------------------|-----------------------------------------------------|\n| 3.who           | 3.1) \u4eba\u5458\u5206\u7c7b          | \u8fd0\u52a8\u5458\u3001\u88c1\u5224\u3001\u89c2\u4f17\u3001\u540e\u52e4\u4eba\u5458              | PP-LCNetV2.md                                       |\n|                 | 3.2) \u8fd0\u52a8\u5458\u8bc6\u522b         | \u4eba\u8138\u68c0\u6d4b                        | BlazeFace                                           |\n|                 |                    | \u4eba\u8138\u8bc6\u522b                        | Dlib                                                |\n|                 |                    | \u57fa\u4e8e\u4eba\u4f53\u7684\u8fd0\u52a8\u5458\u8bc6\u522b                  | Re-ID                                               |\n|                 | 3.3) \u201c\u4e00\u4eba\u4e00\u6863\u201d        | \u8fd0\u52a8\u5458Re-ID                    | MultiSports                                         |\n|                 |                    |                             |                                                     |\n\n\n## 4. [*what*](./04-sports_what/)\n:movie_camera:\u793a\u4f8bdemo\u52a0\u8f7d\u4e2d: \uff08\u8d85\u5206, \u56fe\u751f\u6587, \u56fe\u7247\u865a\u62df\u5408\u6210\uff09\n<div align=\"center\">\n  <img src=\"./image/what_super.png\" width=\"550px\"/><br>\n  <img src=\"./image/what_p2t.png\" width=\"550px\"/><br>\n  <img src=\"./image/what_imgen.png\" width=\"550px\"/><br>\n</div>\n\n&emsp; \u201cwhat\u201d\u6a21\u5757\u91cd\u70b9\u5206\u6790\u4f53\u80b2\u6bd4\u8d5b\u753b\u9762\u4e2d\u5448\u73b0\u7684\u4fe1\u606f\uff0c\u5305\u542b\uff1a\u8fd0\u52a8\u3001\u8bed\u97f3\u3001\u89c6\u89c9\u3001\u591a\u6a21\u6001\u7b49\uff1a\n\n&emsp; 1\uff09\u8fd0\u52a8\u5c5e\u6027\uff0c\u4ece\u89c6\u9891\u524d\u540e\u5e27\u4fe1\u606f\u63a8\u65ad\u8fd0\u52a8\u4fe1\u606f\uff0c\u5305\u542b2D\u5149\u6d41\u4ee5\u53ca3D\u573a\u666f\u6d41\u76f8\u5173\u6280\u672f\uff1b\n\n&emsp; 2\uff09\u8bed\u4e49\u5c5e\u6027\uff0c\u5305\u542b\uff1a\u56fe\u50cf/\u89c6\u9891\u68c0\u7d22\u8bc6\u522b\uff0c\u89c6\u9891\u52a8\u4f5c\u8bc6\u522b\uff0cimage/video caption\u7b49\uff1b\n\n&emsp; 3\uff09\u89c6\u89c9\u5c5e\u6027\uff0c\u5305\u542b\uff1a\u753b\u8d28\u589e\u5f3a\uff0c\u8d85\u5206\u8fa8\u7387\uff0c2D\u8f6c3D\uff0c3D\u5b9e\u65f6\u4ea4\u4e92\u7b49\uff1b\n\n&emsp; 4\uff09\u591a\u6a21\u6001\u5c5e\u6027\uff0c\u89c6\u89c9\u6570\u636e\u4e0e\u8bed\u97f3\u6570\u636e\u3001\u6587\u672c\u6570\u636e\u8054\u5408\u5206\u6790\u3002\n\n| \u4efb\u52a1              | \u6280\u672f\u65b9\u5411               | \u6280\u672f\u7ec6\u5206                        | \u7b97\u6cd5\u6a21\u578b                                                |\n|-----------------|--------------------|-----------------------------|-----------------------------------------------------|\n| 4.what          | 4.1) \u8fd0\u52a8\u5c5e\u6027          | 2D Optical Flow (\u7ecf\u5178\u7b97\u6cd5)      | Horn-Schunck\u5149\u6d41\u6cd5                                     |\n|                 |                    |                             | Lucas-Kanade\u5149\u6d41\u6cd5                                     |\n|                 |                    |                             | Block-Matching\u5149\u6d41\u6cd5                                   |\n|                 |                    |                             | Dual-TVL1                                           |\n|                 |                    |                             | DeepFlow-v2                                         |\n|                 |                    |                             | Global Patch Collider                               |\n|                 |                    | 2D Optical Flow (\u6df1\u5ea6\u5b66\u4e60)      | RAFT (ECCV 2020 best paper)                         |\n|                 |                    |                             | FlowNet1.0                                          |\n|                 |                    |                             | FlowNet2.0                                          |\n|                 |                    |                             | NVIDIA SDK                                          |\n|                 |                    | 3D Scene Flow               | FlowNet3D                                           |\n|                 |                    |                             | Just Go with the Flow                               |\n|                 |                    |                             | MotionNet                                           |\n|                 |                    |                             | 2D-3D Expansion                                     |\n|                 | 4.2) \u8bed\u4e49\u5c5e\u6027          | \u56fe\u50cf\u68c0\u7d22\u8bc6\u522b                      | PP-Lite-Shitu                                       |\n|                 |                    |                             | PP-LCNetV2                                          |\n|                 |                    | \u89c6\u9891\u52a8\u4f5c\u8bc6\u522b                      | CTR-GCN                                             |\n|                 |                    |                             | ST-GCN                                              |\n|                 |                    |                             | AGCN                                                |\n|                 |                    | Image Caption               | COCO Caption                                        |\n|                 |                    |                             | Im2Text                                             |\n|                 |                    | Video Caption               | ActivityNet                                         |\n|                 |                    | OCR                         | PaddleOCR                                           |\n|                 | 4.3) \u89c6\u89c9\u5c5e\u6027          | \u753b\u8d28\u589e\u5f3a                        | Space-Time-Aware Multi-Resolution Video Enhancement |\n|                 |                    | \u56fe\u50cf/\u89c6\u9891\u53bb\u566a                     | FastDVDnet                                          |\n|                 |                    | \u8d85\u5206\u8fa8\u7387                        | Super Resolution                                    |\n|                 |                    | \u56fe\u50cf\u586b\u8865                        | Inpainting                                          |\n|                 |                    | 2D\u8f6c3D                       | NeRF                                                |\n|                 |                    | 3D Visualization            | Maya                                                |\n|                 |                    |                             | Unity                                               |\n|                 |                    |                             | Unreal                                              |\n|                 | 4.4) \u591a\u6a21\u6001\u5c5e\u6027         | \u6587\u672c+\u89c6\u89c9                       | VideoBERT                                           |\n|                 |                    |                             | VisualBERT                                          |\n|                 |                    |                             |                                                     |\n\n\n\n## 5. [*why*](./05-sports_why/) \n\n&emsp; \u201cwhy\u201d\u6a21\u5757\u91cd\u70b9\u5206\u6790\u5f71\u54cd\u8fd0\u52a8\u8868\u73b0\u7684\u56e0\u7d20\uff0c\u5e76\u5c1d\u8bd5\u9884\u6d4b\u4f24\u75c5\u7684\u53ef\u80fd\u6027\u3001\u6bd4\u8d5b\u6210\u7ee9\u7b49\uff1a\n\n&emsp; 1\uff09\u91c7\u96c6\u751f\u7406\u3001\u5fc3\u7406\u3001\u4f53\u80fd\u76f8\u5173\u6570\u636e\uff0c\u5e76\u4e0e\u8fd0\u52a8\u8868\u73b0\u8fdb\u884c\u5173\u8054\u6027\u5206\u6790\uff1b\n\n&emsp; 2\uff09\u4ece\u751f\u7269\u529b\u5b66\u7684\u89d2\u5ea6\uff0c\u5bf9\u52a8\u4f5c\u7ec6\u8282\u8fdb\u884c\u7ea0\u6b63\uff1b\n\n&emsp; 3\uff09\u4ece\u5185\u8d1f\u8377\u3001\u5916\u8d1f\u8377\u7684\u89d2\u5ea6\uff0c\u5728\u786e\u4fdd\u8bad\u7ec3\u5f3a\u5ea6\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u53ef\u80fd\u51cf\u5c11\u4f24\u75c5\u53d1\u751f\u7684\u53ef\u80fd\u6027\u3002\n\n| \u4efb\u52a1              | \u6280\u672f\u65b9\u5411               | \u6280\u672f\u7ec6\u5206                        | \u7b97\u6cd5\u6a21\u578b                                                |\n|-----------------|--------------------|-----------------------------|-----------------------------------------------------|\n| 5.why           | 5.1) \u5206\u6790            | \u6280\u672f\u3001\u751f\u7406\u3001\u5fc3\u7406\u3001\u4f53\u80fd                 |                                                     |\n|                 | 5.2) \u63a8\u7406            | \u751f\u7269\u529b\u5b66                        |                                                     |\n|                 | 5.3) \u9884\u6d4b            | \u5185\u8d1f\u8377\u3001\u5916\u8d1f\u8377                     |                                                     |\n|                 |                    |                             |                                                     |\n\n\n\n\n## 6. [*how*](./06-sports_how/) \n\n&emsp; \u201chow\u201d\u6a21\u5757\u91cd\u70b9\u5206\u6790\u5f71\u54cd\u201cAI+Sports\u201d\u6280\u672f\u843d\u5730\u7684\u56e0\u7d20\uff1a\n\n&emsp; 1\uff09\u8d39\u7528\uff0c\u53d6\u51b3\u4e8e\u6570\u636e\u6807\u6ce8\u6570\u91cf\u548c\u7f51\u7edc\u8bad\u7ec3\u9700\u8981\u7684GPU\u8d39\u7528\uff1b\n\n&emsp; 2\uff09\u4eba\u529b\uff0c\u91cd\u65b0\u8bad\u7ec3\u6a21\u578b\u6240\u9700\u7684\u4eba\u529b\u6570\u91cf\uff1b\n\n&emsp; 3\uff09\u65f6\u95f4\uff0c\u914d\u7f6e\u3001\u6d4b\u8bd5\u3001\u91cd\u8bad\u7ec3\u3001\u91cd\u5f00\u53d1\u7b49\u6240\u9700\u8981\u7684\u65f6\u95f4\u3002\n\n| \u4efb\u52a1              | \u6280\u672f\u65b9\u5411               | \u6280\u672f\u7ec6\u5206                        | \u7b97\u6cd5\u6a21\u578b                                                |\n|-----------------|--------------------|-----------------------------|-----------------------------------------------------|\n| 6.how           | 6.1) much          | \u7ecf\u8d39                          |                                                     |\n|                 | 6.2) many          | \u4eba\u529b                          |                                                     |\n|                 | 6.3) long          | \u65f6\u95f4                          |                                                     |\n|                 |                    |                             |                                                     |\n\n\n\n\n## 7. [*data*](./07-data/) \n\n&emsp; \u201cdata\u201d\u6a21\u5757\u91cd\u70b9\u68b3\u7406\u751f\u6210\u8bad\u7ec3\u6570\u636e\u76846\u79cd\u4e3b\u6d41\u65b9\u5f0f\uff1a\n\n&emsp; 1\uff09\u4eba\u5de5\u6807\u6ce8\uff1a\u5df2\u6807\u6ce8\u7684\u516c\u5f00\u6570\u636e\u96c6\uff0c\u7528\u4e8e\u7f51\u7edc\u8bad\u7ec3\uff1b\n\n&emsp; 2\uff09\u8fc1\u79fb\u5b66\u4e60\uff1a\u672a\u6807\u6ce8\u7684\u5927\u91cf\u6570\u636e\uff0c\u505a\u975e\u76d1\u7763\u5b66\u4e60\u548c\u8fc1\u79fb\u5b66\u4e60\uff1b\n\n&emsp; 3\uff09\u5408\u6210\u6570\u636e\uff1a2D\u56fe\u50cf\u76f4\u63a5\u7f16\u8f91\uff0ccopy-paste\u7684\u65b9\u5f0f\u5408\u6210\u8bad\u7ec3\u6570\u636e\uff1b\n\n&emsp; 4\uff09\u5408\u6210\u6570\u636e\uff1a3D\u6a21\u578b\u6e32\u67d3\u751f\u62102D\u6570\u636e\u4ee5\u53ca\u6807\u6ce8\u4fe1\u606f\uff1b\n\n&emsp; 5\uff09\u5408\u6210\u6570\u636e\uff1a3D\u6a21\u578b\u90e8\u4ef6\u6307\u5bfc\u76842D\u56fe\u50cf\u7f16\u8f91\uff1b\n\n&emsp; 6\uff09\u5408\u6210\u6570\u636e\uff1aGAN\u7cfb\u5217\u7f51\u7edc\u6a21\u578b\u5408\u6210\u8bad\u7ec3\u6570\u636e\u3002\n\n| \u4efb\u52a1              | \u6280\u672f\u65b9\u5411               | \u6280\u672f\u7ec6\u5206                        | \u7b97\u6cd5\u6a21\u578b                                                |\n|-----------------|--------------------|-----------------------------|-----------------------------------------------------|\n| 7.data          | 7.1) \u5df2\u6807\u6ce8\u7684\u6570\u636e\u96c6       |                             |                                                     |\n|                 | 7.2) \u672a\u6807\u6ce8\u7684\u6570\u636e\u96c6       |                             |                                                     |\n|                 | 7.3) 2D Copy-Paste |                             |                                                     |\n|                 | 7.4) 3D Rendering  |                             |                                                     |\n|                 | 7.5) 3D-2D Editing |                             |                                                     |\n|                 | 7.6) GAN           |                             |                                                     |\n|                 |                    |                             |                                                     |\n\n\n\n## 8. [*benchmark*](./08-benchmarks/) \n\n&emsp; \u201cbenchmark\u201d\u6a21\u5757\u5c06\u6784\u5efa\u7b2c\u4e00\u4e2a\u4f53\u80b2\u7c7b\u7684benchmark\uff0c\u5c3d\u53ef\u80fd\u8ba9\u6240\u6709\u7b97\u6cd5\u5728\u4e00\u4e2a\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bc4\u6d4b\uff0c\u7279\u70b9\u662f\u5c0f\u800c\u7cbe\uff0c\u5305\u542b\u4ee5\u4e0b\u4fe1\u606f\uff1a\n\n&emsp; 1\uff09when\uff1a\u65f6\u57df\u4fe1\u606f\u6807\u6ce8\uff0c\u56de\u5408\u8d77\u6b62\u8282\u70b9\uff1b\n\n&emsp; 2\uff09where\uff1a2D/3D\u68c0\u6d4b\uff0c2D\u5206\u5272\uff0c2D\u8ddf\u8e2a\uff0c2D/3D\u9aa8\u67b6\uff1b\n\n&emsp; 3\uff09who\uff1a\u4eba\u5458\u5206\u7c7b\uff0c\u59d3\u540d\uff1b\n\n&emsp; 4\uff09what\uff1a\u8fd0\u52a8\uff0c\u8bed\u4e49\uff0c\u89c6\u89c9\u4fe1\u606f\u3002\n\n| \u4efb\u52a1              | \u6280\u672f\u65b9\u5411               | \u6280\u672f\u7ec6\u5206                        | \u7b97\u6cd5\u6a21\u578b                                                |\n|-----------------|--------------------|-----------------------------|-----------------------------------------------------|\n| 8.benchmark     | 8.1) \u8bad\u7ec3\u6570\u636e\u96c6         |                             |                                                     |\n|                 | 8.2) \u6d4b\u8bd5\u6570\u636e\u96c6         |                             |                                                     |\n|                 | 8.3) \u8bc4\u4f30\u811a\u672c          |                             |                                                     |\n|                 |                    |                             |                                                     |\n\n\n## 9. [*tools*](./09-tools/) \n\n&emsp; \u9762\u5411\u4f53\u80b2\u573a\u666f\u7684\u5de5\u5177\u96c6\uff0c\u6bd4\u5982\u6807\u6ce8\u5de5\u5177\u3001\u68c0\u6d4b\u5de5\u5177\u3001\u8bc6\u522b\u5de5\u5177\u7b49\uff0c\u5177\u6709All-in-One\uff0cAutoRun\u7684\u7279\u70b9\u3002\n\n| \u4efb\u52a1              | \u6280\u672f\u65b9\u5411               | \u6280\u672f\u7ec6\u5206                        | \u7b97\u6cd5\u6a21\u578b                                                |\n|-----------------|--------------------|-----------------------------|-----------------------------------------------------|\n| 9.tools         | 9.1) \u6807\u6ce8\u5de5\u5177          |\u767e\u5ea6\u667a\u80fd\u6807\u6ce8\u7cfb\u7edf\uff08BILS\uff09        |\u4ea4\u4e92\u5f0f\u667a\u80fd\u89c6\u9891\u6807\u6ce8\u5e73\u53f0                                                     |\n|                 | 9.2) \u68c0\u6d4b\u5de5\u5177          |                             |                                                     |\n|                 | 9.3) \u8bc6\u522b\u5de5\u5177          |                             |                                                     |\n|                 | 9.4) \u6df1\u5ea6\u56fe\u751f\u6210\u5de5\u5177       |                             |                                                     |\n|                 |                    |                             |                                                     |\n\n## 10. [*applications*](./10-applications/)\n\n&emsp; \u6db5\u76d6\u8db3\u7403\u3001\u8df3\u6c34\u3001\u4e52\u4e53\u7403\u3001\u82b1\u6837\u6ed1\u51b0\u3001\u5065\u8eab\u3001\u7bee\u7403\u3001\u8e66\u5e8a\u3001\u5927\u8df3\u53f0\u3001\u901f\u5ea6\u6ed1\u51b0\u3001\u8dd1\u6b65\u7b49\u70ed\u95e8\u7684\u4f53\u80b2\u8fd0\u52a8\u3002\n\n| \u4efb\u52a1              | \u6280\u672f\u65b9\u5411               | \u6280\u672f\u7ec6\u5206                        | \u7b97\u6cd5\u6a21\u578b                                                |\n|-----------------|--------------------|-----------------------------|-----------------------------------------------------|\n| 10.applications | 10.1) \u8db3\u7403           | Tracking\uff0cReID               |                                                     |\n|                 |                    | \u6bd4\u5206\u724c\u8bc6\u522b                       |                                                     |\n|                 |                    | \u8d85\u5206\u8fa8\u7387                        |                                                     |\n|                 |                    | \u52a8\u4f5c\u8bc6\u522b+\u589e\u5f3a\u7248                    |                                                     |\n|                 |                    | \u68c0\u6d4b+\u8bc6\u522b+\u8ddf\u8e2a+\u8db3\u7403                 |                                                     |\n|                 | 10.2) \u8df3\u6c34           |                             |                                                     |\n|                 | 10.3) \u4e52\u4e53\u7403          |                             |                                                     |\n|                 | 10.4) \u82b1\u6837\u6ed1\u51b0         |                             |                                                     |\n|                 | 10.5) \u5065\u8eab           |                             |                                                     |\n|                 | 10.6) \u7bee\u7403           |                             |                                                     |\n|                 | 10.7) \u8e66\u5e8a           |                             |                                                     |\n|                 | 10.8) \u5927\u8df3\u53f0          |                             |                                                     |\n|                 | 10.9) \u901f\u5ea6\u6ed1\u51b0         |                             |                                                     |\n|                 | 10.10) \u8dd1\u6b65/\u821e\u8e48       |                             |                                                     |\n|                 |                    |                             |                                                     |\n\n# \u5408\u4f5c\u4f19\u4f34\n- \u56fd\u5bb6\u961f\n- \u592e\u89c6\n- \u56fd\u5bb6\u4f53\u80b2\u603b\u5c40\u4f53\u80b2\u79d1\u5b66\u7814\u7a76\u6240\uff0c\u6cb3\u5317\u7701\u4f53\u80b2\u79d1\u5b66\u7814\u7a76\u6240\n- \u9ad8\u6821\uff1a\u53a6\u95e8\u5927\u5b66\uff0c\u5357\u4eac\u5927\u5b66\uff0c\u5317\u4eac\u822a\u7a7a\u822a\u5929\u5927\u5b66\uff0c\u4e0a\u6d77\u79d1\u6280\u5927\u5b66\uff0c\u5927\u8fde\u7406\u5de5\u5927\u5b66\u7b49\n- \u5546\u4e1a\u516c\u53f8\uff1aIntel\uff0cSony\uff0cPixellot\uff0c\u5168\u5ea6\u79d1\u6280\u7b49\n\n# \u767e\u5ea6\u5f00\u53d1\u56e2\u961f\n- \u767e\u5ea6\u7814\u7a76\u9662 \u673a\u5668\u4eba\u4e0e\u81ea\u52a8\u9a7e\u9a76\u5b9e\u9a8c\u5ba4\uff08RAL\uff09\n- \u767e\u5ea6\u7814\u7a76\u9662 \u5927\u6570\u636e\u5b9e\u9a8c\u5ba4\uff08BDL\uff09\n- \u767e\u5ea6\u6df1\u5ea6\u5b66\u4e60\u6280\u672f\u5e73\u53f0\u90e8\uff08PaddlePaddle\uff09\n- \u767e\u5ea6ACG\u4ea7\u4e1a\u521b\u65b0\u4e1a\u52a1\u90e8\n- \u767e\u5ea6\u7814\u7a76\u9662 GAIT\u5b9e\u9a8c\u5ba4\n\n# \u81f4\u8c22\n\u611f\u8c22\u98de\u6868\u5174\u8da3\u5c0f\u7ec4\uff08PPSIG\uff09Models-CV\u6210\u5458\u5bf9PaddleSports\u5efa\u8bbe\u7684\u8d21\u732e\uff08\u5f20\u7199\u745e\uff0c\u6d2a\u529b\uff0c\u738b\u6210\uff0c\u535c\u5b9c\u51e1\uff0c\u5b54\u8fdc\u676d\uff0c\u8096\u57f9\u6977\uff0c\u5f20\u6208\u7b49\uff09\n"
    },
    {
        "repo": "/davemart-in/tablechamp-app",
        "language": "JavaScript",
        "readme_contents": "# TableChamp\n\n**Tablesports leaderboard app**\nTrack each ping pong, pool, foosball, air hockey, or shuffleboard game that's played. Find out who really is number one (in your office, or out of your group of friends).\n\n## What is it?\n\nWith TableChamp, you can add players, track every game that is played, and always know who's #1.\n\n![1](https://user-images.githubusercontent.com/5634774/209989745-877b4a3b-50f1-47d4-a507-b1f7fa300660.gif)\n\nYou can view stats on each player, including their 20 most recent games:\n\n![2](https://user-images.githubusercontent.com/5634774/209989780-52acd163-eaa8-407f-a559-b7e3310961ca.gif)\n\nYou can manage all of the settings of the app in one convenient sidebar:\n\n![3](https://user-images.githubusercontent.com/5634774/209989811-8932abbd-2a15-44aa-90fb-1d6f2f05d78e.gif)\n\nYou can even select from one of 14 languages:\n\n![4](https://user-images.githubusercontent.com/5634774/209989854-4d68f5c2-617f-41cf-8af7-d1f8c9c971f0.gif)\n\n## How does it work?\n\nTableChamp is written entirely in JS/HTML/CSS. There is no back-end code (like python, or PHP). It uses [FireBase](https://firebase.google.com/) as a back-end real-time DB to store all of the data, and manage the user authentication.\n\n## Installation\n\n### 1) You'll need a hosting account for the JS/HTML/CSS files\n\n*NOTE: you can run a FireBase app locally, but you'll need to follow [these instructions](https://firebase.google.com/docs/cli/) to get set up with FireBase CLI.*\n\nJust clone this entire project to your server. Once you've done that, move on to step 2.\n\n### 2) You'll need to sign up for a free FireBase account\n\n![image](https://user-images.githubusercontent.com/5634774/209989202-dd871ea4-9d37-4cec-acfc-04a234b3a054.png)\n\nEven if you have a large team, the [free FireBase account](https://firebase.google.com/pricing/) should offer plenty of resources. \n\nOnce you've signed up for a free FireBase account, move on to the next step.\n\n### 3) Create a new FireBase app\n\n![image](https://user-images.githubusercontent.com/5634774/209989227-9b39abc3-0982-4644-8dad-229444578de3.png)\n\nGo through the process of creating a new FireBase Project. You can name it \"Table Champ\", or anything you'd like.\n\n![image](https://user-images.githubusercontent.com/5634774/209989248-cde54bd5-1ae6-4167-9cef-4afe74b772f2.png)\n\nFind the \"Add to your web app\" option, and click it:\n\n![image](https://user-images.githubusercontent.com/5634774/209989282-0bddb656-3d8a-4f8b-80f2-023c27b47a92.png)\n\nYou now have all of the information you need to connect to connect the app to FireBase:\n\n![image](https://user-images.githubusercontent.com/5634774/209989305-61353e80-c2ac-4a84-a498-e7045ad52497.png)\n\nOnce you have your FireBase API info, move on to the next step\n\n### 4) Copy your FireBase info to the /js/firebase-key.js file\n\nOpen up /js/firebase-key.js:\n\n![image](https://user-images.githubusercontent.com/5634774/209989350-46f75d12-1c10-4876-ac20-a952187c4776.png)\n\nPaste in the FireBase apiKey, authDomain, and databaseURL from step 3 above:\n\n![image](https://user-images.githubusercontent.com/5634774/209989379-697262d7-b840-4cd8-b43b-2b6c7ada3de7.png)\n\nOnce you've done this, save your changes, and move on to the next step.\n\n### 5) Add your first FireBase user\n\nFireBase handles storing all of your data, as well as authentication. We'll need to set up a user in the FireBase admin, so that you can log into your app. I'll walk you through how to add a single user, but you can add as many login users as you'd like.\n\n*NOTE: Users are separate from players. Users are set up in the FireBase admin, and have an email & password attached to them so that you can log in. Players are managed from the settings section once you've logged into your app.*\n\n![5](https://user-images.githubusercontent.com/5634774/209989925-35709c53-cbd2-4123-a5d6-86a5f97d4dd8.gif)\n\nAll you need to enter to set up a user is an email, and a password.\n\nOnce you've added your first user, continue to the next step.\n\n### 6) Create a database instance\n\nFrom your FireBase console, click into the Database section:\n\n![image](https://user-images.githubusercontent.com/5634774/209989434-a26f87aa-1edf-432e-bb1e-13f7b88f9452.png)\n\nCreate a new \"Real-time database\" (not a Firestore DB - note: they try and get you to create a Firestore DB by default).\n\nOnce you've created your real-time DB, you'll need to change the security rules. Click the \"Rules\" tab and and replace what's there with the following:\n\n```\n{\n  \"rules\": {\n    \".read\": true,\n    \".write\": true\n  }\n}\n```\n\nHere's what it should look like:\n\n![image](https://user-images.githubusercontent.com/5634774/209989458-fcf26eff-f4e5-435f-a924-2c1f1801e6bb.png)\n\n### 7) Login, and add your players\n\nNow you can log into your app for the first time. Go to the index.html file (wherever it's being hosted from step 1 above). You should see:\n\n![image](https://user-images.githubusercontent.com/5634774/209989476-ae42d4aa-52bb-4bd8-a08b-18411ae20322.png)\n\nOnce you've logged in, you should see:\n\n![image](https://user-images.githubusercontent.com/5634774/209989493-24762c7f-3e4d-46a7-8004-ea667dccb191.png)\n\nEnter your organizations name, and the game you'll be tracking:\n\n![image](https://user-images.githubusercontent.com/5634774/209989511-91ee0983-dba4-4b7b-ab01-1ff05ddac187.png)\n\nThen click on the Players tab:\n\n![image](https://user-images.githubusercontent.com/5634774/209989531-0dc04a4f-a23b-4bf9-ad2c-50dccbb3ddf7.png)\n\nClick \"Add Players\" and enter the names of your players (one name per line):\n\n![image](https://user-images.githubusercontent.com/5634774/209989548-2fb8f956-ec47-4dde-a9d8-3b291fcc6247.png)\n\n### You're all set\n\nYou should be ready to start tracking games:\n\n![image](https://user-images.githubusercontent.com/5634774/209989569-46f0f20d-09ed-4c90-9f99-bc54e0fb5b72.png)\n"
    },
    {
        "repo": "/Pringleman83/SportsBook",
        "language": "Python",
        "readme_contents": "# SportsBook\nA sports data scraping and analysis tool\n\nThis project is in its very early days and currently only supports football (soccer).\n\nFearure list:\n\n* Import leagues and fixtures from one of two available online sources.\n\n* See a visual comparison of the teams playing in any game.\n\n* Run a benchmark comparison on a selected fixture.\n  * This allows you to see the results of games where both teams have played the same opponent.\n  * It shows results where both teams faced the same opponent at home, then away and then where\n  the home team have faced the opponent at home and the away team have faced the opponent away.\n  * Only games where three of the above comparisons are shown. If the home team, at home, haven't\n  played the same team as the awyay team have played away on three occasions, the game is ommitted\n  from predictions.\n\n* Run manual comparison of two teams from any loaded leagues generating (somewhat inaccurate) predictions.\n\n* Run predictions on all loaded fixtures (more accurate as the teams are guaranteed to be from the same leagues).\n  * Select from using all available league data to compare home and away goal scoring and conceding form or only using data from games\n  where the home team has played the same team at home as the away team as played away, making the data a fairer representation of the\n  team's capabilities.\n\n* Filter predictions to show games where specific requirements are met (eg. prediction of home side winning by 2 goals).\n\n* Filter filtered predictions further with other filters.\n\n* Filter predictions using special filters (either produced by guest contributors or specially designed filters for specific bet types).\n\n* Display filtered predictions and all predictions on screen.\n\n* Change the range of dates or games the predictions cover.\n\n* Display results from throughout the whole current season of each league.\n\n* Change the range of dates the results cover.\n\n* Produce a spreadsheet of all predictions or filtered predictions with a wealth of current stats for each team in each prediction.\n\n* Export currently loaded league data to a JSON file.\n\n* Import the league data from a JSON file.\n\nThe project is growing fairly quickly. I'd love to hear what your thoughts are and even keep you up to date with new features if you like. Join the Slack group here if you're interested:\n\nhttps://join.slack.com/t/sportsbookgroup/shared_invite/enQtNDc4MjYwNzMwNzg4LTAzMDk0MDM3OWFiMGJhZWU2MzAyMzQyNGI4OTlhNjgxMWRlNTZjOTAzMTM3ODdhMDIxNDU3YjI2MzM4OTlmZjg\n\nIt'd be great to hear from you so please pop in and say hi!\n"
    },
    {
        "repo": "/laberning/openrowingmonitor",
        "language": "JavaScript",
        "readme_contents": "# Open Rowing Monitor\n\n[![Node.js CI](https://github.com/laberning/openrowingmonitor/actions/workflows/node.js.yml/badge.svg)](https://github.com/laberning/openrowingmonitor/actions/workflows/node.js.yml)\n[![CodeQL](https://github.com/laberning/openrowingmonitor/actions/workflows/codeql-analysis.yml/badge.svg)](https://github.com/laberning/openrowingmonitor/actions/workflows/codeql-analysis.yml)\n[![pages-build-deployment](https://github.com/laberning/openrowingmonitor/actions/workflows/pages/pages-build-deployment/badge.svg)](https://github.com/laberning/openrowingmonitor/actions/workflows/pages/pages-build-deployment)\n\n<!-- markdownlint-disable-next-line no-inline-html -->\n<img width=\"200\" height=\"200\" align=\"left\" src=\"img/openrowingmonitor_icon.png\" class=\"dropcap\">\n\nA free and open source performance monitor for rowing machines. It upgrades a rowing machine into a smart trainer that can be used with training applications and games.\n\nOpen Rowing Monitor is a Node.js application that runs on a Raspberry Pi and measures the rotation of the rower's flywheel (or similar) to calculate rowing specific metrics, such as power, split time, speed, stroke rate, distance and calories.\n\nIt is currently developed and tested with a Sportstech WRX700 water-rower. But it should run fine with any rowing machine that uses some kind of damping mechanism, as long as you can add something to measure the speed of the flywheel.\nIt should also work well with DIY rowing machines like the [Openergo](https://openergo.webs.com).\n\n## Features\n\nThe following items describe most of the current features, more functionality will be added in the future, check the [Development Roadmap](backlog.md) if you are curious.\n\n### Rowing Metrics\n\nOpen Rowing Monitor implements a physics model to simulate the typical metrics of a rowing boat based on the pull on the handle. The physics model can be tuned to the specifics of a rower by changing some model parameters.\n\n* Stroke detection\n* Power (watts)\n* Split time (/500m)\n* Strokes per Minute\n* Calories used (kcal)\n* Training Duration\n* Heart Rate (supports BLE and ANT+ heart rate monitors, ANT+ requires an ANT+ USB stick)\n\n### Web Interface\n\nThe web interface visualizes the rowing metrics on any device that can run a web browser (i.e. a smartphone that you attach to your rowing machine while training). It uses web sockets to show the rowing status in realtime. It can also be used to reset the training metrics and to select the BLE Rower.\n\nIf you connect a screen to the Raspberry Pi, then this interface can also be directly shown on the device. The installation script can set up a web browser in kiosk mode that runs on the Raspberry Pi.\n\n<!-- markdownlint-disable-next-line no-inline-html -->\n<img src=\"img/openrowingmonitor_frontend.png\" width=\"700\"><br clear=\"left\">\n\n### Bluetooth Low Energy (BLE)\n\nOpen Rowing Monitor also implements different Bluetooth Low Energy (BLE) protocols so you can use your rowing machine with different fitness applications.\n\nFitness Machine Service (FTMS) is a standardized GATT protocol for different types of fitness machines. Open Rowing Monitor currently supports the type **FTMS Rower** and simulates the type **FTMS Indoor Bike**.\n\n**FTMS Rower:** This is the FTMS profile for rowing machines and supports all rowing specific metrics (such as stroke rate). So far not many training applications for this profile exist, but the market is evolving. I've successfully tested it with [EXR](https://www.exrgame.com), [MyHomeFit](https://myhomefit.de) and [Kinomap](https://www.kinomap.com).\n\n**FTMS Indoor Bike:** This FTMS profile is used by Smart Bike Trainers and widely adopted by training applications for bike training. It does not support rowing specific metrics. But it can present metrics such as power and distance to the biking application and use cadence for stroke rate. So why not use your virtual rowing bike to row up a mountain in [Zwift](https://www.zwift.com), [Bkool](https://www.bkool.com), [The Sufferfest](https://thesufferfest.com) or similar :-)\n\n**Concept2 PM:** Open Rowing Monitor also implements part of the Concept2 PM Bluetooth Smart Communication Interface Definition. This is still work in progress and only implements the most common parts of the spec, so it will not work with all applications that support C2 rowing machines. It currently works with all the samples from [The Erg Arcade](https://ergarcade.com), i.e. you can [row in the clouds](https://ergarcade.github.io/mrdoob-clouds/). This also works very well with [EXR](https://www.exrgame.com).\n\n### Export of Training Sessions\n\nOpen Rowing Monitor can create Training Center XML files (TCX). You can upload these files to training platforms like [Strava](https://www.strava.com), [Garmin Connect](https://connect.garmin.com) or [Trainingpeaks](https://trainingpeaks.com) to track your training sessions.\n\nUploading your sessions to Strava is an integrated feature, for all other platforms this is currently a manual step. The installer can set up a network share that contains all training data so it is easy to grab the files from there and upload them to the training platform of your choice.\n\nOpen Rowing Monitor can also store the raw measurements of the flywheel into CSV files. These files are great to start your own exploration of your rowing style and also to learn about the specifics of your rowing machine (some Excel files that can help with this are included in the `docs` folder).\n\n## Installation\n\nYou will need a Raspberry Pi Zero W, Raspberry Pi Zero 2 W, Raspberry Pi 3 or a Raspberry Pi 4 with a fresh installation of Raspberry Pi OS Lite for this. Connect to the device with SSH and initiate the following command to install Open Rowing Monitor as an automatically starting system service:\n\n```zsh\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/laberning/openrowingmonitor/HEAD/install/install.sh)\"\n```\n\nAlso have a look at the [Detailed Installation Instructions](installation.md) for more information on the software installation and for instructions on how to connect the rowing machine.\n\n## How it all started\n\nI originally started this project, because my rowing machine (Sportstech WRX700) has a very simple computer and I wanted to build something with a clean interface that calculates more realistic metrics. Also, this was a good reason to learn a bit more about Bluetooth and all its specifics.\n\nThe original proof of concept version started as a sketch on an Arduino, but when I started adding things like a web frontend and BLE I moved it to the much more powerful Raspberry Pi. Maybe using a Raspberry Pi for this small IoT-project is a bit of an overkill, but it has the capacity for further features such as syncing training data or rowing games. And it has USB-Ports that I can use to charge my phone while rowing :-)\n\n## Further information\n\nThis project is already in a very usable stage, but some things are still a bit rough on the edges.\n\nFeel free to leave a message in the [GitHub Discussions](https://github.com/laberning/openrowingmonitor/discussions) if you have any questions or ideas related to this project.\n\nCheck the advanced information on the [Physics behind Open Rowing Monitor](physics_openrowingmonitor.md).\n\nI plan to add more features, here is the [Development Roadmap](backlog.md). Contributions are welcome, please read the [Contributing Guidelines](CONTRIBUTING.md) first.\n\nThis project uses some great work by others, see the [Attribution here](attribution.md).\n"
    },
    {
        "repo": "/JamesQuintero/Sports-Odds-Algorithms",
        "language": "Python",
        "readme_contents": "# Sports-Odds-Algorithms\nSystem that calculates and uses algorithms to predict the outcome of NBA, NHL, and MLB games. Each league has its own unique algorithm to predict winners, with NBA having the most accurate algorithm. The system was originally intended to be used for sports betting. The algorithms are pretty good at predicting winners. With sports betting, it also has to be better at predicting winners than other betters, and the oddsmakers. \n\n\n\n\n[The NHL algorithm predicted the 2016 Stanley Cup Champion team, and its NHL playoff bracket was in the 99th percentile](http://smartsoftware.technology/sports.php?view=nhl&season=2016)\n\n[Backtest results of betting strategies utilizing the algorithms' predictions](http://smartsoftware.technology/sports.php)\n\n\n-----\n\nAlgorithms to predict NBA, NHL, and MLB games are included. To utilize, run sports_bettor.py\n\n*sports_bettor.py*  \n\n```\nLeague\n1) NBA\n2) NHL\n3) NFL\n4) MLB\nChoice:\n```\n\nIf you want to find the winner for an NBA game, pick 1. \n\n```\nLeague: nba\nMenu:\n1) Single team analysis\n2) Calculate game odds (Single Game)\n3) Calculate game odds (ALL Games Today)\n4) Backtest algorithm\n5) Test schedule scraper\nChoice: \n```\n\nIf you want to find the winner for a single game, choose 2. \n\n```\nBacktest menu: Algorithm version:\n1) Algo_V1 - Uses a point system\n2) Algo_V2 - Uses a probability system\nChoice:\n```\n\nAlgo_V2 tends to be more accurate. It gives a percentage of a team to win a game, while Algo_V1 gives an absolute number of points where the higher number of points for a team, the higher chance of them winning. \n\n```\nnba teams:\n0: atlanta-hawks\n1: boston-celtics\n2: brooklyn-nets\n3: charlotte-hornets\n4: chicago-bulls\n5: cleveland-cavaliers\n6: dallas-mavericks\n7: denver-nuggets\n8: detroit-pistons\n9: golden-state-warriors\n10: houston-rockets\n11: indiana-pacers\n12: los-angeles-clippers\n13: los-angeles-lakers\n14: memphis-grizzlies\n15: miami-heat\n16: milwaukee-bucks\n17: minnesota-timberwolves\n18: new-orleans-pelicans\n19: new-york-knicks\n20: oklahoma-city-thunder\n21: orlando-magic\n22: philadelphia-76ers\n23: phoenix-suns\n24: portland-trail-blazers\n25: sacramento-kings\n26: san-antonio-spurs\n27: toronto-raptors\n28: utah-jazz\n29: washington-wizards\nAway Team #:\nHome Team #: \n```\n\nChoose the number corresponding to the away team and home team for the NBA game. The system was scrape the latest game data for the 2 teams, run the algorithm, and then output the data (and save to a file in nba\\analyze\\team_comparison). \n\n\n```\nDate to test (M-D-YYY): 4-16-2017\nCurrent season year: 2017\n```\n\n\"Date to test\" means that all games played before that date will be included in the calculation. Typically, this would just be the current date if you want to include all games. \nThe current season year will need to be provided. \n\n\nUsing an example game Portland Trail Blazers @ Golden State Warriors in the 2017 NBA playoffs, the output is \n\n```\nAway: portland-trail-blazers | Home: golden-state-warriors\nSeasonal Record:      -81.53%\nHome Away:            -91.33%\nHome away 10:         -59.94%\nLast 10 games:        -56.04%\nAvg points:           -78.74%\nAvg points 10:        -60.38%\n--------\nTotal: -71.32%\n--------\nPerc chance to win: 71.32%\nFavorable team odds: -248.6750348675034\nUnderdog team odds: +248.6750348675034\n```\n\nA positive total gives favorability to the away team, and a negative Total gives favorability to the home team. The total in this example is -71.32%, so the Golden State Warriors have a supposed 71.32% chance of winning the game. \n\nFavorable odds are given that are based off the percentage chance to win. In order for a bet to be +Expected Value, whether on the favorite orunderdog team, the odds would have to be higher than the given odds in the output. The favorite team is expected to win 71.23% of the time, so a bet on them should be no less than -248.67. Good bets include -240, -150, +150, etc. Bad bets include -250, -500, etc. Same for the underdog team where good bets would be higher than +248.67, like +250 and +550, while bad bets would be lower, like +200, +150, etc. \n\n\n\n-----\n\n### Bare-bones algorithm information:\n\n**Variables:** \n1) Record_points = ( wins - losses ) - ( other_wins - other_losses)\n2) Home_away = (away_record - home_record) - (other tema's away record - other team's home record)\n3) Home_away_10_games = Home_away for last 10 games\n4) Last_10_games_points = Record_points for last 10 games\n5) Avg_points = (total_points/num_games) - (other_total_points/num_games)\n6) Avg_points_10_games = Avg_points for last 10 games\n7) Win_streak = num consecutive wins\n8) Win_streak_home_away = num consecutive wins home or away\n\n*Example:* \nNBA's algo_V2 includes 1, 2, 3, 4, 5, 6\nNHL's algo_V2 includes 1, 2, 3, 4, 5, 6, 8\nMLB's algo_V2 includes 1, 2, 3, 4, 5, 6\n\n**Backtests:** \n\n*CSV_output* = Backtest all games for 2nd half of seasons in specified timespan. The supplied algorithm will output a point system or percentage system accompanying its prediction. The results are returned in a csv file.\n\n*Stats* = Backtest all games for 2nd half of seasons in specified timespan. The parameter algorithm will solely calculate wins vs losses for a 1-10 ranking system. The ranking sytem can be points or percentage based. The results are returned in a txt file. \n\n*Running sports_bettor.py:* Choose league, Backtest algorithm, Algo_V1, output to csv.\nThis will run a CSV_output backtest using a hardcoded algo_V1. EX: NBA = [10, 10, 5, 5,  8,  8,   3, 3];\n\n*Running sports_bettor.py:* Choose league, Backtest algorith, Algo_V1, stats.\nThis will run a stats backtest for passed in algo_v1s that test each variable at a time. \n\n\n-----\n\n### Creating an algorithm: \n**1)** Test each variable individually to create algo_V1\n\nMenu choices: 4) Backtest algorithm -> 1) Algo_V1 - Uses a point system -> 2) Backtest Algo_V1 stats -> INPUT) Start Date: (middle of first season), End Date: (cur date if end 2nd half of current season, or end date of last season if in 1st half of current season)\n\n* Default: algo_V1 = [-1, -1, -1, -1, -1, -1, -1, -1]\n* Each parameter is respective to the variables.\n\ttest each param like [1, -1, -1, -1, -1, -1, -1, -1]\n\ttest each param like [2, -1, -1, -1, -1, -1, -1, -1]\n* The results will be output to a txt file \"./analyze/backtests/Algo_V1_-1,-1,0.5,-1,-1,-1,-1,-1_7-1-2003_10-1-2015.txt\"\n\tEX output: \n\n\t[1, -1, -1, -1, -1, -1, -1, -1]\n\n\t1: 537 - 536: 49.95%\n\t2: 615 - 716: 53.79%\n\t3: 640 - 683: 51.62%\n\t4: 572 - 696: 54.89%\n\t5: 553 - 654: 54.18%\n\t6: 506 - 631: 55.50%\n\t7: 477 - 590: 55.30%\n\t8: 369 - 586: 61.36%\n\t9: 369 - 497: 57.39%\n\t10: 1597 - 2351: 59.55%\n\n\t6235 - 7940\n\n* 1-10 in the output file correspond to 1-10 levels in the program. Ideal to have a bell curve type distribution of total games from 1 (most games) to 10 (least games). \n* Also ideal if the percentage of games won start at 50 in level 1, and go to 100% by level 10. Level 10 should not have more games won than level 9. \n* The number used to create the ideal backtest output will be used in Algo_V1\n*EX:* NHL = [3, 3, 3, 3, 0.3, 0.6, -1, 6]\n* These will be the denominators for the variables. The maximum 1-10 level reached in the output will be the max_points. If level 10 isn't rached, the max level will be adjusted.\n\n\t\n-----\n\t\n\t\n**2)** Create algo_V2\n\t\n* The games won percentage for each level in each output for each variable will create a polynomial equation for each variable. \n* Create a best-fit line for all perc_won numbers in the ideal output file. \n* The best-fit line will calculate the odds to win for that variable. \n* Best-fit line should start above 50%, and end below 100%\n* \n\n\t\n**...(More information to be appended later)**\n\n\n* The new algorithm should be hardcoded into algo.py to be utilized for odds calculation. \n"
    },
    {
        "repo": "/USSoccerFederation/ussf_ssac_23_soccer_gnn",
        "language": "Jupyter Notebook",
        "readme_contents": "![U.S. Soccer Federation | A Graph Neural Network deep-dive into successful counterattacks](img/header.png)\n\n> \u26a0\ufe0f **NOTE**: If you are having trouble automatically loading the data within Jupyter Notebook please find all relevant data files (and the associated paper) in the [Google Drive folder](https://drive.google.com/drive/folders/12F8B-AARr0otiYxE0Rvxbuckf6gjkqvE)\n\n\n## MIT Sloan Sports Analytics Conference 2023 Research Repository \n\nThis repository is provided alongside the paper: [_\"A Graph Neural Network deep-dive into successful counterattacks\"_](https://ussf-ssac-23-soccer-gnn.s3.us-east-2.amazonaws.com/public/Sahasrabudhe_Bekkers_SSAC23.pdf)[pdf] ([Mirror 1](https://drive.google.com/file/d/19IQbrHY-6AS7tJ7CnkcTORK8ztg5LVHa/view)). This paper is one of the finalists of the [2023 MIT Sloan Sports Analytics Conference Research Paper Competition](https://ussf-ssac-23-soccer-gnn.s3.us-east-2.amazonaws.com/public/Sahasrabudhe_Bekkers_SSAC23.pdf).\nIt contains an interactive [Python Jupyter Notebook](counterattack.ipynb) and all relevant datasets ([see below](#datasets)) for training GNNs using the [Spektral](https://graphneural.network/) library. \n\n## Authors\n#### Amod Sahasrabudhe\n[<img alt=\"alt_text\" width=\"40px\" src=\"img/linkedin.png\"/>](https://www.linkedin.com/in/amod-sahasrabudhe/)\n[<img alt=\"alt_text\" width=\"40px\" src=\"img/twitter.png\"/>](https://twitter.com/amod3598)\n\n#### Joris Bekkers\n[<img alt=\"alt_text\" width=\"40px\" src=\"img/linkedin.png\"/>](https://www.linkedin.com/in/joris-bekkers-33138288/)\n[<img alt=\"alt_text\" width=\"40px\" src=\"img/twitter.png\"/>](https://twitter.com/unravelsports)\n[<img alt=\"alt_text\" width=\"40px\" src=\"img/github.png\"/>](https://unravelsports.github.io)\n\n## Research Abstract\nThe purpose of this research is to build gender-specific, first-of-their-kind Graph Neural Networks to model the likelihood of a counterattack being successful\nand to uncover what factors make them successful in both men's and women's professional soccer. \nThese models are trained on a total of 20,863 frames of algorithmically identified counterattacking sequences from synchronized StatsPerform on-ball \nevent and SkillCorner spatiotemporal (broadcast) tracking data. The [data](#datasets) - easily accessible within the [Counterattack Jupyter Notebook](counterattack.ipynb) - is derived from 632 games of MLS (2022), NWSL (2022) and international women\u2019s soccer (2020-2022).\n\n![Example Sequence Prediction](img/attack.gif)\n\nWith this data we demonstrate that gender-specific Graph Neural Networks outperform architecturally identical gender-ambiguous models in predicting the successful outcome of \ncounterattacks. We show, using Permutation Feature Importance, that byline to byline speed, angle to the goal, angle to the ball and sideline to sideline speed are the node\nfeatures with the highest impact on model performance.\n\n![Improvement](img/prediction.png)\n\n## Presentation (YouTube)\nOur MIT Sloan Sports Analytics Conference 2023 presentation has made its way to YouTube, see below:\n[![Our Talk on YouTube](https://img.youtube.com/vi/3ozD-fvQmOg/0.jpg)](https://www.youtube.com/watch?v=3ozD-fvQmOg)\n\n\n## Model Architecture\nThe architecture of the GNN model provided in the [Counterattack Jupyter Notebook](counterattack.ipynb) is depicted in the image below\n![Model Architecture](img/model.png)\n\n## Graph Configuration\nOur preferred Graph configuration is depicted below. As you can see in [Counterattack Jupyter Notebook](counterattack.ipynb) you are free to choose your own configuration by selecting from an assortment of \nAdjaceny Matrices, Edge Features and Node Features, more on this [below](#Jupyter-Notebook)\n\n![Graph Configuration](img/graph.png)\n\n\n## Installing Jupyter Notebook using pip:\n\n  To install Jupyter using pip, first check if pip is updated in your system. Use the following command in the command prompt to update pip\n    \n  ```\n  python -m pip install --upgrade pip\n  ```\n\n  Once upgraded, use the following command to install Jupyter\n  ```\n  python -m pip install jupyter\n  ```\n  \n  Use the following command to launch Jupyter Notebook\n  ```\n  jupyter notebook\n  ```\n  \n  Once launched, you should be able to see the following screen\n  \n  <img width=\"1188\" alt=\"image\" src=\"https://user-images.githubusercontent.com/108815194/203169206-3526ced4-e63d-44b5-99bc-2d0075238742.png\">\n\n\n## Installing the required Python libraries:\n  Make sure the requirement.txt file is in the directory. Navigate to the directory using command prompt and type the following command\n  ```\n  pip install -r requirements.txt\n  ```\nOr for MacOS\n```\n  pip install -r requirements_macos.txt\n  ```\n## Jupyter Notebook\n  * Navigate to the location where you have cloned the GitHub repository and open the interactive notebook.\n  * Open the .ipynb file.\n  * Run the first cell by clicking the play button or using the shortcut ```Shift + Enter``` through your keyboard. If all the libraries are installed succesffuly this code block should execute without throwing any errors.\n  * Run the subsequent cell blocks to load the data.\n  * Choose a file between men's data, women's data and combined dataset using the dropdown list.\n    * Men's dataset - MLS 2022 season\n    * Women's dataset - NWSL 2022 season + International Women's soccer\n    * Combined dataset - Combination of both men and women's data\n  * Choose the adjacency matrix from the dropdown list.\n    * normal - connects attacking players amongst themselves, defensive players amongst themselves and the attacking and defending players are conencted through the ball.\n    * delaunay - connects a few attacking players and defending players in a delaunay matrix fashion\n    * dense - connects all the players and the ball to each other\n    * dense_ap - connects all the attacking players to each other and defensive players.\n    * dense_dp - connects all the defending players to each other and attacking players.\n  \n  * Choose the Edge features and Node Features using the checkboxes.\n    * Edge Feature options:\n      * Player Distance - Distance between two players connected to each other\n      * Speed Difference - Speed difference between two players connected to each other\n      * Positional Sine angle - Sine of the angle created between two players in the edge\n      * Positional Cosine angle - Cosine of the angle created between two players in the edge\n      * Velocity Sine angle - Sine of the angle created between the velocity vectors of two players in the edge\n      * Velocity Cosine angle - Coine of the angle created between the velocity vectors of two players in the edge\n      \n    * Node Feature options:\n      * x coordinate - x coordinate on the 2D pitch for the player / ball\n      * y coordinate - y coordinate on the 2D pitch for the player / ball\n      * vx - Velocity vector's x coordinate\n      * vy - Velocity vector's y coordinate\n      * Velocity - magnitude of the velocity\n      *  Velocity Angle - angle made by the velocity vector\n      * Distance to Goal - distance of the player from the goal post\n      * Angle with Goal - angle made by the player with the goal\n      * Distance to Ball - distance from the ball (always 0 for the ball)\n      * Angle with Ball - angle made with the ball (always 0 for the ball)\n      * Attacking Team Flag - 1 if the team is attacking, 0 if not and for the ball\n      * Potential Receiver - 1 if player is a potential receiver, 0 otherwise\n    \n  * Update the graph neural training network configurations as per your requirement. You may also try chaning the network layers.\n  * Start the model training. It should stop after the epochs are completed. Check your training logloss score. If it is not satisfactory rerun the training block.\n  * Use the block for testing model logloss and ROC-AUC curve. \n  * Further, you may opt to look at model calibration and also calculate the Expected Calibration Error (More details in the notebook text blocks).\n  * It is also possible to check which features contribute the most to the model performance. (**Note**: The ```Attacking Team Flag``` checkbox from the Node Features needs to be selected to calculate the feature importance.) Choose between attacking and defending players and note the differences via the box plot.\n\n## Research Ideas\n- Change the model architecture by introducing different configurations for the [Convolutional layers](https://graphneural.network/layers/convolution/), [Pooling layers](https://graphneural.network/layers/convolution/) and Hyper Parameters.\n- Choose different adjacency matrices and different combinations of node features and edge features.\n- Create a \"Gender-Aware\" model as suggested by [StatsBomb](https://statsbomb.com/articles/soccer/analytics-and-modelling-in-womens-football/). Perhaps this can be achieved by adding a node feature to each node in each graph specifying the gender.\n- Use the [Imbalanced Dataset](#datasets) to build a robust (gendered) counterattacking success prediction model \n- Analyze the features and their importance to counterattack success more in-depth. This can help uncover for example, for which players on what position it is important to have a high (or low) `vx` etc.\n- Analyze other aspects of counterattacks. For example: what is the impact of having more players behind the ball when defending, or how much is the impact of space reduction around the player on the ball.\n- etc. \n\n## Citation\n\nIf you use any of the data or files within this repository, please cite our paper.\n\n- [Google Scholar](https://scholar.google.com/citations?view_op=view_citation&hl=en&user=eerdAe8AAAAJ&citation_for_view=eerdAe8AAAAJ:d1gkVwhDpl0C)\n\n```text\n@inproceedings{sahasrabudhe2023graph,\n  title={A Graph Neural Network deep-dive into successful counterattacks},\n  author={Sahasrabudhe, Amod and Bekkers, Joris},\n  booktitle={17th Annual MIT Sloan Sports Analytics Conference. Boston, MA, USA: MIT},\n  pages={15},\n  year={2023}\n}\n```\n\n## Datasets\n\nWe provide two different types of datasets:\n\n### 1. Event Frames Only Balanced Dataset\nThis dataset is used within our research paper. It contains only Graph representations of tracking data frames that are associated with an event that happens\nwithin a counterattacking sequence. \n#### Samples:\n| Dataset  | Competitions                                                    | Sample Size  <br/>(Individual Graphs) |\n|----------|-----------------------------------------------------------------|---------------------------------------|\n| Women    | NWSL (2022) <br/>Int. Friendlies <br/>SheBelieves <br/>Olympics | 3,720                                 |\n| Men      | MLS (2022)                                                      | 17,143                                |\n| Combined | All                                                             | 20,863                                |\n#### Labels:\nEvery Graph of an event that is part of a counterattacking sequence where eventually the ball reaches the opposing team's penalty area is labeled a success (1).\n#### Balance:\nThis dataset has 50% successful and 50% unsuccessful labels.\n#### Structure:\n\n```text\n{\n  \"normal\": {\n    \"a\": [AdjMatrixGraph0, AdjMatrixGraph1, ... AdjMatrixGraphN],\n    \"x\": [NodeFeatureMatrixGraph0, NodeFeatureMatrixGraph1, ... NodeFeatureMatrixGraphNN],\n    \"e\": [EdgeFeatureMatrixGraph0, EdgeFeatureMatrixGraph1, ... EdgeFeatureMatrixGraphN]\n  }, <- similar dictionaries for each other Adjacency Matrix Type (\"delaunay\", \"dense\", \"dense_ap\", \"dense_dp\")\n  \"binary\": [[LabelGraph0], [LabelGraph1]...[LabelGraphN]]\n}\n```\nThe data loading process is automated within the [Counterattack Jupyter Notebook](counterattack.ipynb), but it can also be obtained through the links below.\n\n- [Counterattacks Women](https://ussf-ssac-23-soccer-gnn.s3.us-east-2.amazonaws.com/public/counterattack/women.pkl)\n- [Counterattacks Men](https://ussf-ssac-23-soccer-gnn.s3.us-east-2.amazonaws.com/public/counterattack/men.pkl)\n- [Counterattacks Combined](https://ussf-ssac-23-soccer-gnn.s3.us-east-2.amazonaws.com/public/counterattack/combined.pkl)\n\n_Note: Node and Edge feature names for these datasets are listed in [Counterattack Jupyter Notebook](counterattack.ipynb)_\n\n### 2. Full Frames Imbalanced Dataset\nThis dataset is an _additional_ dataset that was **not** used within the research paper. \nIt contains Graph representations of every tracking data frame that is associated with a counterattacking sequence. \n\n#### Samples:\n| Dataset  | Competitions                                                    | Sample Size <br/>(Individual Graphs) |\n|----------|-----------------------------------------------------------------|--------------------------------------|\n| Women    | NWSL (2022) <br/>Int. Friendlies <br/>SheBelieves <br/>Olympics | 103,381                              |\n| Men      | MLS (2022, approx. 32% of games)                                | 104,628                              |\n#### Labels:\nEvery Graph frame that is part of a counterattacking sequence that leads to a goal is labeled a success (1).\n#### Balance:\nThis dataset has approx. 5% successful and approx. 95% unsuccessful labels.\n#### Structure:\nThe structure is slightly different, as we only provide the `normal` adjacency matrix. \n\nWe also provide an `id` label. This label number is the same for all frames that belong to the same sequence.\nUse this Sequence ID value to split the test & train data such that we do not add parts of a single sequence to both the test and train set.\nDoing this would result in leaking information between test and train set. To do this splitting see [split_sequences.py](split_sequences.py). \n```text\n{\n  \"a\": [AdjMatrixGraph0, AdjMatrixGraph1, ... AdjMatrixGraphN],\n  \"x\": [NodeFeatureMatrixGraph0, NodeFeatureMatrixGraph1, ... NodeFeatureMatrixGraphNN],\n  \"e\": [EdgeFeatureMatrixGraph0, EdgeFeatureMatrixGraph1, ... EdgeFeatureMatrixGraphN]\n  \"label\": [[LabelGraph0], [LabelGraph1]...[LabelGraphN]],\n  \"id\": [SequenceIDGraph0, SequenceIDGraph1, ... SequenceIDGraphN],\n  \"node_feature_names\": [\"x\", \"y\", \"vx\",... \"att_team\"], \n  \"edge_feature_names\": [\"distance\", ...]\n}\n```\n- [Counterattacks Women Imbalanced All Frames](https://ussf-ssac-23-soccer-gnn.s3.us-east-2.amazonaws.com/public/counterattack/women_imbalanced.pkl)\n- [Counterattacks Men Imbalanced All Frames](https://ussf-ssac-23-soccer-gnn.s3.us-east-2.amazonaws.com/public/counterattack/men_imbalanced.pkl)\n\n## Requirements\n\n- Python 3.9+\n"
    },
    {
        "repo": "/SweetzpotAS/StravaZpot-Android",
        "language": "Java",
        "readme_contents": "# StravaZpot [![Build Status](https://travis-ci.org/SweetzpotAS/StravaZpot-Android.svg?branch=master)](https://travis-ci.org/SweetzpotAS/StravaZpot-Android)\n\nA fluent API to integrate with Strava on Android apps.\n\n## Usage\n\nThis document explains how to use **StravaZpot** in your Android app. For additional questions, you may want to check **Strava** official documentation [here](https://strava.github.io/api/).\n\n## Authentication\n\n### Login button\n\nStravaZpot includes a custom view to include a login button according to Strava guidelines. To do that, you can add the following code to your XML layout:\n\n```xml\n<com.sweetzpot.stravazpot.authenticaton.ui.StravaLoginButton\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:id=\"@+id/login_button\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center\"\n    app:type=\"orange\"/>\n```\nThe custom attribute `type` accepts two different values: `orange` and `light` (default). `StravaLoginButton` makes use of vector drawables in the support library. Thus, if you are targeting version prior to Android API 21, you would need to add the following code to your Activity:\n\n```java\nstatic {\n    AppCompatDelegate.setCompatVectorFromResourcesEnabled(true);\n}\n```\n\n### Login Activity\n\nStrava uses OAuth 2.0 to authenticate users, and then request them to grant permission to your app. To get a Client ID and Secret from Strava for your app, follow [this link](https://www.strava.com/settings/api).\n\nOnce you have your app credentials, you can get an `Intent` to launch the login activity for your app. You can easily do it with:\n\n```java\nIntent intent = StravaLogin.withContext(this)\n                  .withClientID(<YOUR_CLIENT_ID>)\n                  .withRedirectURI(<YOUR_REDIRECT_URL>)\n                  .withApprovalPrompt(ApprovalPrompt.AUTO)\n                  .withAccessScope(AccessScope.VIEW_PRIVATE_WRITE)\n                  .makeIntent();\nstartActivityForResult(intent, RQ_LOGIN);\n```\n\nYou need to notice several things with this call:\n\n- `<YOUR_CLIENT_ID>` must be replaced with the Client ID provided by Strava when you registered your application.\n- `<YOUR_REDIRECT_URL>` must be in the domain you specified when you registered your app in Strava.\n- Refer to `ApprovalPrompt` enum to get more options for this parameter.\n- Refer to `AccessScope` enum to get more options for this parameter.\n- You need to launch the intent with `startActivityForResult` since the login activity will return a value that you will need later to obtain a token. If login to Strava was successful and the user granted permission to your app, you will receive a `code` that you can retrieve with:\n\n```java\n@Override\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\n    super.onActivityResult(requestCode, resultCode, data);\n\n    if(requestCode == RQ_LOGIN && resultCode == RESULT_OK && data != null) {\n        String code = data.getStringExtra(StravaLoginActivity.RESULT_CODE);\n        // Use code to obtain token\n    }\n}\n```\n\nFinally, you need to add the login activity to your manifest:\n\n```xml\n<activity\n    android:name=\"com.sweetzpot.stravazpot.authenticaton.ui.StravaLoginActivity\"\n    android:label=\"@string/login_strava\" />\n```\n\n### Obtain a Token\n\nEvery Strava API call needs a token to prove the user is authenticated and the app has permission to access the API. After you have obtained the code from user login, you need to exchange it with Strava to get a token. You can do it with the following code:\n\n```java\nAuthenticationConfig config = AuthenticationConfig.create()\n                                                  .debug()\n                                                  .build();\nAuthenticationAPI api = new AuthenticationAPI(config);\nLoginResult result = api.getTokenForApp(AppCredentials.with(CLIENT_ID, CLIENT_SECRET))\n                        .withCode(CODE)\n                        .execute();\n\n```\nNotice that in this call you must provide the Client ID and Secret provided by Strava when you registered your application, and the code obtained during the login process. Also, the execution of the previous code involves a network request; **you are responsible for calling this code in a suitable thread, outside the UI thread**. Otherwise, you will get an exception.\n\nIf the previous request is successful, you will get a `LoginResult`, which has a `Token` that you can use in your subsequent API calls, and an `Athlete` instance, representing the authenticated user.\n\n### Deauthorize\n\n```java\nAuthenticationAPI api = new AuthenticationAPI(config);\nauthenticationAPI.deauthorize()\n                 .execute();\n```\n\n## Athlete API\n\n### StravaConfig\n\nBefore introducing the Athlete API, we have to talk about `StravaConfig`. `StravaConfig` is a class required by all the APIs in **StravaZpot** to configure the way it is going to interact with Strava. You can create a single instance of `StravaConfig` as soon as you obtain a token, and reuse it during your app lifecycle. To create an instance of `StravaConfig`:\n\n```java\nStravaConfig config = StravaConfig.withToken(TOKEN)\n                                  .debug()\n                                  .build();\n```\n\nYou must provide the token obtained during the authentication process. The call to `debug()` method will show in the Android Monitor what is going on when you do the network requests.\n\nOnce you have the configuration object, you can proceed to use all the APIs.\n\n### Create the Athlete API object\n\n```java\nAthleteAPI athleteAPI = new AthleteAPI(config);\n```\n\n### Retrieve current athlete\n\n```java\nAthlete athlete = athleteAPI.retrieveCurrentAthlete()\n                            .execute();\n```\n\n### Retrieve another athlete\n\n```java\nAthlete athlete = athleteAPI.retrieveAthlete(ATHLETE_ID)\n                            .execute();\n```\n\n### Update an athlete\n\n```java\nAthlete athlete = athleteAPI.updateAthlete()\n                            .newCity(CITY)\n                            .newState(STATE)\n                            .newCountry(COUNTRY)\n                            .newSex(Gender.FEMALE)\n                            .newWeight(WEIGHT)\n                            .execute();\n```\n\n### Retrieve athlete's zones\n\n```java\nZones zones = athleteAPI.getAthleteZones()\n                        .execute();\n```\n\n### Retrieve athlete's totals and stats\n\n```java\nStats stats = athleteAPI.getAthleteTotalsAndStats(ATHLETE_ID)\n                        .execute();\n```\n\n### List athlete K/QOMs/CRs\n\n```java\nList<SegmentEffort> koms = athleteAPI.listAthleteKOMS(ATHLETE_ID)\n                                     .inPage(PAGE)\n                                     .perPage(ITEMS_PER_PAGE)\n                                     .execute();\n```\n\n## Friend API\n\n### Create the Friend API object\n\n```java\nFriendAPI friendAPI = new FriendAPI(config);\n```\n\n### List user's friends\n\n```java\nList<Athlete> friends = friendAPI.getMyFriends()\n                                 .inPage(PAGE)\n                                 .perPage(ITEMS_PER_PAGE)\n                                 .execute();\n```\n\n### List another athlete's friends\n\n```java\nList<Athlete> friends = friendAPI.getAthleteFriends(ATHLETE_ID)\n                                 .inPage(PAGE)\n                                 .perPage(ITEMS_PER_PAGE)\n                                 .execute();\n```\n\n### List user's followers\n\n```java\nList<Athlete> followers = friendAPI.getMyFollowers()\n                                   .inPage(PAGE)\n                                   .perPage(ITEMS_PER_PAGE)\n                                   .execute();\n```\n\n### List another athlete's followers\n\n```java\nList<Athlete> followers = friendAPI.getAthleteFollowers(123456)\n                                   .inPage(2)\n                                   .perPage(10)\n                                   .execute();\n```\n\n### List common following athletes between two users\n\n```java\nList<Athlete> followers = friendAPI.getBothFollowing(ATHLETE_ID)\n                                   .inPage(PAGE)\n                                   .perPage(PER_PAGE)\n                                   .execute();\n```\n\n## Activity API\n\n### Create the Activity API object\n\n```java\nActivityAPI activityAPI = new ActivityAPI(config);\n```\n\n### Create an activity\n\n```java\nActivity activity = activityAPI.createActivity(ACTIVITY_NAME)\n                               .ofType(ActivityType.RUN)\n                               .startingOn(START_DATE)\n                               .withElapsedTime(Time.seconds(SECONDS))\n                               .withDescription(ACTIVITY_DESCRIPTION)\n                               .withDistance(Distance.meters(METERS))\n                               .isPrivate(false)\n                               .withTrainer(true)\n                               .withCommute(false)\n                               .execute();\n```\n\n### Retrieve an activity\n\n```java\nActivity activity = activityAPI.getActivity(ACTIVITY_ID)\n                               .includeAllEfforts(true)\n                               .execute();\n```\n\n### Update an activity\n\n```java\nActivity activity = activityAPI.updateActivity(ACTIVITY_ID)\n                               .changeName(ACTIVITY_NAME)\n                               .changeType(ActivityType.RIDE)\n                               .changePrivate(true)\n                               .changeCommute(true)\n                               .changeTrainer(true)\n                               .changeGearID(GEAR_ID)\n                               .changeDescription(ACTIVITY_DESCRIPTION)\n                               .execute();\n```\n\n### Delete an activity\n\n```java\nactivityAPI.deleteActivity(321934)\n           .execute();\n```\n\n### List user's activities\n\n```java\nList<Activity> activities = activityAPI.listMyActivities()\n                                       .before(Time.seconds(BEFORE_SECONDS))\n                                       .after(Time.seconds(AFTER_SECONDS))\n                                       .inPage(PAGE)\n                                       .perPage(ITEMS_PER_PAGE)\n                                       .execute();\n```\n\n### List user's friends' activities\n\n```java\nList<Activity> activities = activityAPI.listFriendActivities()\n                                       .before(Time.seconds(BEFORE_SECONDS))\n                                       .inPage(PAGE)\n                                       .perPage(ITEMS_PER_PAGE)\n                                       .execute();\n```\n\n### List related activities\n\n```java\nList<Activity> activities = activityAPI.listRelatedActivities(ACTIVITY_ID)\n                                       .inPage(PAGE)\n                                       .perPage(ITEMS_PER_PAGE)\n                                       .execute();\n```\n\n### List activity zones\n\n```java\nList<ActivityZone> activityZones = activityAPI.listActivityZones(ACTIVITY_ID)\n                                              .execute();\n```\n\n### List activity laps\n\n```java\nList<ActivityLap> laps = activityAPI.listActivityLaps(ACTIVITY_ID)\n                                    .execute();\n```\n\n## Comment API\n\n### Create the Comment API object\n\n```java\nCommentAPI commentAPI = new CommentAPI(config);\n```\n\n### List activity comments\n\n```java\nList<Comment> comments = commentAPI.listActivityComments(ACTIVITY_ID)\n                                   .inPage(PAGE)\n                                   .perPage(ITEMS_PER_PAGE)\n                                   .execute();\n```\n\n## Kudos API\n\n### Create the Kudos API object\n\n```java\nKudosAPI kudosAPI = new KudosAPI(config);\n```\n\n### List activity kudoers\n\n```java\nList<Athlete> athletes = kudosAPI.listActivityKudoers(ACTIVITY_ID)\n                                 .inPage(PAGE)\n                                 .perPage(ITEMS_PER_PAGE)\n                                 .execute();\n```\n\n## Photo API\n\n### Create the Photo API object\n\n```java\nPhotoAPI photoAPI = new PhotoAPI(config);\n```\n\n### List activity photos\n\n```java\nList<Photo> photos = photoAPI.listAcivityPhotos(ACTIVITY_ID)\n                             .execute();\n```\n\n## Club API\n\n### Create the Club API object\n\n```java\nClubAPI clubAPI = new ClubAPI(config);\n```\n\n### Retrieve a club\n\n```java\nClub club = clubAPI.getClub(CLUB_ID)\n                   .execute();\n```\n\n### List club announcements\n\n```java\nList<Announcement> announcements = clubAPI.listClubAnnouncements(CLUB_ID)\n                                          .execute();\n```\n\n### List club group events\n\n```java\nList<Event> events = clubAPI.listClubGroupEvents(CLUB_ID)\n                            .execute();\n```\n\n### List user's clubs\n\n```java\nList<Club> clubs = clubAPI.listMyClubs()\n                          .execute();\n```\n\n### List club members\n\n```java\nList<Athlete> athletes = clubAPI.listClubMembers(CLUB_ID)\n                                .inPage(PAGE)\n                                .perPage(ITEMS_PER_PAGE)\n                                .execute();\n```\n\n### List club admins\n\n```java\nList<Athlete> athletes = clubAPI.listClubAdmins(CLUB_ID)\n                                .inPage(PAGE)\n                                .perPage(ITEMS_PER_PAGE)\n                                .execute();\n```\n\n### List club activities\n\n```java\nList<Activity> activities = clubAPI.listClubActivities(CLUB_ID)\n                                   .before(BEFORE)\n                                   .inPage(PAGE)\n                                   .perPage(PER_PAGE)\n                                   .execute();\n```\n\n### Join a club\n\n```java\nJoinResult joinResult = clubAPI.joinClub(123456)\n                               .execute();\n```\n\n### Leave a club\n\n```java\nLeaveResult leaveResult = clubAPI.leaveClub(123456)\n                                 .execute();\n```\n\n## Gear API\n\n### Create the Gear API object\n\n```java\nGearAPI gearAPI = new GearAPI(config);\n```\n\n### Retrieve gear\n\n```java\nGear gear = gearAPI.getGear(GEAR_ID)\n                   .execute();\n```\n\n## Route API\n\n### Create the Route API\n\n```java\nRouteAPI routeAPI = new RouteAPI(config);\n```\n\n### Retrieve a route\n\n```java\nRoute route = routeAPI.getRoute(ROUTE_ID)\n                      .execute();\n```\n\n### List athlete's routes\n\n```java\nList<Route> routes = routeAPI.listRoutes(ATHLETE_ID)\n                             .execute();\n```\n\n## Segment API\n\n### Create the Segment API object\n\n```java\nSegmentAPI segmentAPI = new SegmentAPI(config);\n```\n\n### Retrieve a segment\n\n```java\nSegment segment = segmentAPI.getSegment(SEGMENT_ID)\n                            .execute();\n```\n\n### List user's starred segments\n\n```java\nList<Segment> segments = segmentAPI.listMyStarredSegments()\n                                   .inPage(PAGE)\n                                   .perPage(ITEMS_PER_PAGE)\n                                   .execute();\n```\n\n### List another athlete's starred segments\n\n```java\nList<Segment> segments = segmentAPI.listStarredSegmentsByAthlete(ATHLETE_ID)\n                                   .inPage(PAGE)\n                                   .perPage(PER_PAGE)\n                                   .execute();\n```\n\n### Star a segment\n\n```java\nSegment segment = segmentAPI.starSegment(SEGMENT_ID)\n                            .execute();\n```\n\n### Unstar a segment\n\n```java\nSegment segment = segmentAPI.unstarSegment(SEGMENT_ID)\n                            .execute();\n```\n\n### List segment efforts\n\n```java\nList<SegmentEffort> efforts = segmentAPI.listSegmentEfforts(SEGMENT_ID)\n                                        .forAthlete(ATHLETE_ID)\n                                        .startingOn(START_DATE)\n                                        .endingOn(END_DATE)\n                                        .inPage(PAGE)\n                                        .perPage(ITEMS_PER_PAGE)\n                                        .execute();\n```\n\n### Retrieve segment leaderboard\n\n```java\nLeaderboard leaderboard = segmentAPI.getLeaderboardForSegment(SEGMENT_ID)\n                                    .withGender(Gender.FEMALE)\n                                    .inAgeGroup(AgeGroup.AGE_25_34)\n                                    .inWeightClass(WeightClass.KG_75_84)\n                                    .following(true)\n                                    .inClub(CLUB_ID)\n                                    .inDateRange(DateRange.THIS_WEEK)\n                                    .withContextEntries(CONTEXT_ENTRIES)\n                                    .inPage(PAGE)\n                                    .perPage(ITEMS_PER_PAGE)\n                                    .execute();\n```\n\n### Explore segments\n\n```java\nList<Segment> segments = segmentAPI.exploreSegmentsInRegion(Bounds.with(Coordinates.at(SW_LAT, SW_LONG), Coordinates.at(NE_LAT, NE_LONG)))\n                                   .forActivityType(ExploreType.RUNNING)\n                                   .withMinimumClimbCategory(MIN_CLIMB_CATEGORY)\n                                   .withMaximumClimbCategory(MAX_CLIMB_CATEGORY)\n                                   .execute();\n```\n\n## Segment Effort API\n\n### Create the Segment Effort API object\n\n```java\nSegmentEffortAPI segmentEffortAPI = new SegmentEffortAPI(config);\n```\n\n### Retrieve a segment effort\n\n```java\nSegmentEffort segmentEffort = segmentEffortAPI.getSegmentEffort(SEGMENT_EFFORT_ID)\n                                              .execute();\n```\n\n## Stream API\n\n### Create the Stream API object\n\n```java\nStreamAPI streamAPI = new StreamAPI(config);\n```\n\n### Retrieve activity streams\n\n```java\nList<Stream> streams = streamAPI.getActivityStreams(ACTIVITY_ID)\n                                .forTypes(StreamType.LATLNG, StreamType.DISTANCE)\n                                .withResolution(Resolution.LOW)\n                                .withSeriesType(SeriesType.DISTANCE)\n                                .execute();\n```\n\n### Retrieve segment effort streams\n\n```java\nList<Stream> streams = streamAPI.getSegmentEffortStreams(SEGMENT_EFFORT_ID)\n                                .forTypes(StreamType.LATLNG, StreamType.DISTANCE)\n                                .withResolution(Resolution.LOW)\n                                .withSeriesType(SeriesType.DISTANCE)\n                                .execute();\n```\n\n### Retrieve segment streams\n\n```java\nList<Stream> streams = streamAPI.getSegmentStreams(SEGMENT_ID)\n                                .forTypes(StreamType.LATLNG, StreamType.DISTANCE)\n                                .withResolution(Resoulution.LOW)\n                                .withSeriesType(SeriesType.DISTANCE)\n                                .execute();\n```\n\n### Retrieve route streams\n\n```java\nList<Stream> streams = streamAPI.getRouteStreams(ROUTE_ID)\n                                .execute();\n```\n\n## Upload API\n\n### Create the Upload API object\n\n```java\nUploadAPI uploadAPI = new UploadAPI(config);\n```\n\n### Upload a file\n\nStrava allows you to upload files with formats GPX, FIT or TCX. We recommend to use TCXZpot in order to generate TCX files that can be uploaded to Strava.\n\n```java\nUploadStatus uploadStatus = uploadAPI.uploadFile(new File(<path_to_file>))\n                                     .withDataType(DataType.FIT)\n                                     .withActivityType(UploadActivityType.RIDE)\n                                     .withName(\"A complete ride around the city\")\n                                     .withDescription(\"No description\")\n                                     .isPrivate(false)\n                                     .hasTrainer(false)\n                                     .isCommute(false)\n                                     .withExternalID(\"test.fit\")\n                                     .execute();\n```\n\n### Check upload status\n\n```java\nUploadStatus uploadStatus = uploadAPI.checkUploadStatus(16486788)\n                                     .execute();\n```\n\n## Threading\n\nAll the APIs in **StravaZpot** perform network requests in a synchronous manner and without switching to a new thread. Therefore, it is up to the user of the library to invoke the API in a suitable thread, and outside the Android UI thread in order to avoid `NetworkOnMainThreadException`.\n\n## Exceptions\n\n**StravaZpot** methods do not have any checked exceptions, but users of the library should be prepared for them to happen. In particular, the following scenarios can arise:\n\n- Strava may return a `401 Unauthorized` response code. In that case, the network request will throw a `StravaUnauthorizedException`. It is up to the user of the library to reuthenticate with Strava to get a new token and retry the request.\n- If any other network error happen, or the request is not successful, it will throw a `StravaAPIException`.\n\n## Download\n\nYou can get **StravaZpot** from JCenter using Gradle. Just add this line to your build file:\n\n```groovy\ncompile 'com.sweetzpot.stravazpot:lib:1.3.1'\n```\n\n## License\n\n\n    Copyright 2018 SweetZpot AS\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
    },
    {
        "repo": "/statsbylopez/StatsSports",
        "language": "R",
        "readme_contents": "# StatsSports\n\nMaterial for Skidmore College MA 251, Statistics in Sports. Currently updated as of Fall, 2019. This will be the homepage for code, data, lectures, and homeworks. The course is designed for students with an intro stat background, looking to learn specifics of where data tools can be applied to sports. \n\nOld version of the class can be found at <https://github.com/statsbylopez/StatsSports/tree/master/2016%20class>. \n"
    },
    {
        "repo": "/JDaniloC/BetBot",
        "language": "HTML",
        "readme_contents": "# BetBot\n\n![BetBot Video](./docs/images/video.gif)\n\n\n> Um automatizador de apostas para a plataforma Bet365. O objetivo foi de criar uma interface responsiva, mas que se comunique com o script python. Funciona at\u00e9 o Firefox 85.0.2 ([#10](https://github.com/JDaniloC/Individual-Bet365Bot/issues/10)) e as vers\u00f5es atuais do Chrome.\n\n<div align=\"center\">\n\t<h2> Idiomas | Languages </h2>\n\t<a href=\"https://jdaniloc.github.io/Individual-Bet365Bot/pt/\">\n\t\t<img src=\"docs/images/br.png \"\n\t\talt=\"Portugu\u00eas\" width=\"50\" height=\"50\" />\n\t</a>\n\t<a href=\"https://jdaniloc.github.io/Individual-Bet365Bot/en/\">\n\t\t<img src=\"docs/images/en.png \"\n\t\talt=\"English\" width=\"50\" height=\"50\"/>\n\t</a>\n</div><br><br>\n\n## Tecnologias usadas\n- Selenium para controle na Bet365.\n- Eel para constru\u00e7\u00e3o da interface\n- MongoDB para armazenamento de usu\u00e1rios\n\n## Dificuldades\nA cataloga\u00e7\u00e3o de cada tipo de bot\u00e3o al\u00e9m do acesso a plataforma de forma a n\u00e3o ser visto como bot. Al\u00e9m da preocupa\u00e7\u00e3o est\u00e9tica para se parecer com a plataforma, sem esquecer dos efeitos visuais e intera\u00e7\u00f5es, de forma a manter um padr\u00e3o de qualidade para o usu\u00e1rio. No meio do projeto foi necess\u00e1rio trocar do Google Chrome para o Firefox pois foi bloqueado o acesso a partir do Chrome. Mas no fim o Chrome foi novamente poss\u00edvel atrav\u00e9s do projeto [undected_chromedriver](https://github.com/ultrafunkamsterdam/undetected-chromedriver).\n\n## Como utilizar\n1. Instale o python 3.9, e na raiz do projeto instale as [depend\u00eancias](./requirements.txt):\n```bash\npip install -r requirements.txt\n```\n2. Certifique-se que tem uma conta na [Bet 365](https://www.bet365.com/), e pegue o seu nome de usu\u00e1rio e senha.\n3. Certifique-se que tem o [Firefox](./src/widgets.py) instalado com o seu respectivo [Gecko Driver](https://www.take.net/blog/wp-content/cache/wp-rocket/take.net/blog/take-test/instalacao-geckodriver-driver-para-abrir-o-firefox-no-selenium/index-https.html_gzip) no caso de usar o FirefoxBrowser, ou use o ChromeBrowser no [bot.py](./src/bot.py) com o chromedriver.\n4. Crie uma conta no [MongoDB](https://medium.com/reprogramabr/conectando-no-banco-de-dados-cloud-mongodb-atlas-bca63399693f#:~:text=Acesse%20ao%20site%20do%20MongoDB,esquerdo%2C%20clique%20em%20Database%20Access.), um Cluster para criar uma Database chamada [betbot](./src/database.py) com uma Collection chamada users.\n5. Crie um arquivo na raiz do projeto chamado env.py com a [autentica\u00e7\u00e3o](https://docs.atlas.mongodb.com/tutorial/connect-to-your-cluster/) do seu Mongo, sem os <> ([#12](https://github.com/JDaniloC/Individual-Bet365Bot/issues/12)):\n```py\nautenticacao = \"mongodb+srv://<USUARIOMONGO>:<SENHAMONGO>@cluster<CLUSTERID>.mongodb.net/betbot?retryWrites=true&w=majority\"\n```\n6. Adicione a seguinte linha no final do [database.py](./src/database.py) na primeira vez para criar o seu usu\u00e1rio no banco de dados usando a sua conta da Bet 365:\n```py\nMongoDB.cadastrar(\"NOMEDOUSUARIO\", \"SENHA\") # Nome do usu\u00e1rio da conta da Bet e sua senha\n```\n7. Inicie o [main.py](./main.py) e fa\u00e7a o login, e ent\u00e3o retire a linha adicionada anteriormente.\n\n![Config Video](./docs/images/configVideo.gif)\n"
    }
]